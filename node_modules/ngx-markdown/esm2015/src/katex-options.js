/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable: no-redundant-jsdoc
export class KatexOptions {
}
if (false) {
    /**
     * If `true`, math will be rendered in display mode
     * (math in display style and center math on page)
     *
     * If `false`, math will be rendered in inline mode
     * \@default false
     * @type {?}
     */
    KatexOptions.prototype.displayMode;
    /**
     * If `true`, KaTeX will throw a `ParseError` when
     * it encounters an unsupported command or invalid LaTex
     *
     * If `false`, KaTeX will render unsupported commands as
     * text, and render invalid LaTeX as its source code with
     * hover text giving the error, in color given by errorColor
     * \@default true
     * @type {?}
     */
    KatexOptions.prototype.throwOnError;
    /**
     * A Color string given in format `#XXX` or `#XXXXXX`
     * @type {?}
     */
    KatexOptions.prototype.errorColor;
    /**
     * A collection of custom macros.
     *
     * See `src/macros.js` for its usage
     * @type {?}
     */
    KatexOptions.prototype.macros;
    /**
     * If `true`, `\color` will work like LaTeX's `\textcolor`
     * and takes 2 arguments
     *
     * If `false`, `\color` will work like LaTeX's `\color`
     * and takes 1 argument
     *
     * In both cases, `\textcolor` works as in LaTeX
     *
     * \@default false
     * @type {?}
     */
    KatexOptions.prototype.colorIsTextColor;
    /**
     * All user-specified sizes will be caped to `maxSize` ems
     *
     * If set to Infinity, users can make elements and space
     * arbitrarily large
     *
     * \@default Infinity
     * @type {?}
     */
    KatexOptions.prototype.maxSize;
    /**
     * Limit the number of macro expansions to specified number
     *
     * If set to `Infinity`, marco expander will try to fully expand
     * as in LaTex
     *
     * \@default 1000
     * @type {?}
     */
    KatexOptions.prototype.maxExpand;
    /**
     * Allowed protocols in `\href`
     *
     * Use `_relative` to allow relative urls
     *
     * Use `*` to allow all protocols
     * @type {?}
     */
    KatexOptions.prototype.allowedProtocols;
    /**
     * If `false` or `"ignore"`, allow features that make
     * writing in LaTex convenient but not supported by LaTex
     *
     * If `true` or `"error"`, throw an error for such transgressions
     *
     * If `"warn"`, warn about behavior via `console.warn`
     *
     * \@default "warn"
     * @type {?}
     */
    KatexOptions.prototype.strict;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2F0ZXgtb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1tYXJrZG93bi8iLCJzb3VyY2VzIjpbInNyYy9rYXRleC1vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsTUFBTSxPQUFPLFlBQVk7Q0E4RXhCOzs7Ozs7Ozs7O0lBdEVHLG1DQUFzQjs7Ozs7Ozs7Ozs7SUFVdEIsb0NBQXVCOzs7OztJQUl2QixrQ0FBb0I7Ozs7Ozs7SUFNcEIsOEJBQWE7Ozs7Ozs7Ozs7Ozs7SUFZYix3Q0FBMkI7Ozs7Ozs7Ozs7SUFTM0IsK0JBQWlCOzs7Ozs7Ozs7O0lBU2pCLGlDQUFtQjs7Ozs7Ozs7O0lBUW5CLHdDQUE0Qjs7Ozs7Ozs7Ozs7O0lBVzVCLDhCQUFxQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRzbGludDpkaXNhYmxlOiBuby1yZWR1bmRhbnQtanNkb2NcclxuZXhwb3J0IGNsYXNzIEthdGV4T3B0aW9ucyB7XHJcbiAgICAvKipcclxuICAgICAqIElmIGB0cnVlYCwgbWF0aCB3aWxsIGJlIHJlbmRlcmVkIGluIGRpc3BsYXkgbW9kZVxyXG4gICAgICogKG1hdGggaW4gZGlzcGxheSBzdHlsZSBhbmQgY2VudGVyIG1hdGggb24gcGFnZSlcclxuICAgICAqXHJcbiAgICAgKiBJZiBgZmFsc2VgLCBtYXRoIHdpbGwgYmUgcmVuZGVyZWQgaW4gaW5saW5lIG1vZGVcclxuICAgICAqIEBkZWZhdWx0IGZhbHNlXHJcbiAgICAgKi9cclxuICAgIGRpc3BsYXlNb2RlPzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogSWYgYHRydWVgLCBLYVRlWCB3aWxsIHRocm93IGEgYFBhcnNlRXJyb3JgIHdoZW5cclxuICAgICAqIGl0IGVuY291bnRlcnMgYW4gdW5zdXBwb3J0ZWQgY29tbWFuZCBvciBpbnZhbGlkIExhVGV4XHJcbiAgICAgKlxyXG4gICAgICogSWYgYGZhbHNlYCwgS2FUZVggd2lsbCByZW5kZXIgdW5zdXBwb3J0ZWQgY29tbWFuZHMgYXNcclxuICAgICAqIHRleHQsIGFuZCByZW5kZXIgaW52YWxpZCBMYVRlWCBhcyBpdHMgc291cmNlIGNvZGUgd2l0aFxyXG4gICAgICogaG92ZXIgdGV4dCBnaXZpbmcgdGhlIGVycm9yLCBpbiBjb2xvciBnaXZlbiBieSBlcnJvckNvbG9yXHJcbiAgICAgKiBAZGVmYXVsdCB0cnVlXHJcbiAgICAgKi9cclxuICAgIHRocm93T25FcnJvcj86IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEEgQ29sb3Igc3RyaW5nIGdpdmVuIGluIGZvcm1hdCBgI1hYWGAgb3IgYCNYWFhYWFhgXHJcbiAgICAgKi9cclxuICAgIGVycm9yQ29sb3I/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEEgY29sbGVjdGlvbiBvZiBjdXN0b20gbWFjcm9zLlxyXG4gICAgICpcclxuICAgICAqIFNlZSBgc3JjL21hY3Jvcy5qc2AgZm9yIGl0cyB1c2FnZVxyXG4gICAgICovXHJcbiAgICBtYWNyb3M/OiBhbnk7XHJcbiAgICAvKipcclxuICAgICAqIElmIGB0cnVlYCwgYFxcY29sb3JgIHdpbGwgd29yayBsaWtlIExhVGVYJ3MgYFxcdGV4dGNvbG9yYFxyXG4gICAgICogYW5kIHRha2VzIDIgYXJndW1lbnRzXHJcbiAgICAgKlxyXG4gICAgICogSWYgYGZhbHNlYCwgYFxcY29sb3JgIHdpbGwgd29yayBsaWtlIExhVGVYJ3MgYFxcY29sb3JgXHJcbiAgICAgKiBhbmQgdGFrZXMgMSBhcmd1bWVudFxyXG4gICAgICpcclxuICAgICAqIEluIGJvdGggY2FzZXMsIGBcXHRleHRjb2xvcmAgd29ya3MgYXMgaW4gTGFUZVhcclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxyXG4gICAgICovXHJcbiAgICBjb2xvcklzVGV4dENvbG9yPzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogQWxsIHVzZXItc3BlY2lmaWVkIHNpemVzIHdpbGwgYmUgY2FwZWQgdG8gYG1heFNpemVgIGVtc1xyXG4gICAgICpcclxuICAgICAqIElmIHNldCB0byBJbmZpbml0eSwgdXNlcnMgY2FuIG1ha2UgZWxlbWVudHMgYW5kIHNwYWNlXHJcbiAgICAgKiBhcmJpdHJhcmlseSBsYXJnZVxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IEluZmluaXR5XHJcbiAgICAgKi9cclxuICAgIG1heFNpemU/OiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIExpbWl0IHRoZSBudW1iZXIgb2YgbWFjcm8gZXhwYW5zaW9ucyB0byBzcGVjaWZpZWQgbnVtYmVyXHJcbiAgICAgKlxyXG4gICAgICogSWYgc2V0IHRvIGBJbmZpbml0eWAsIG1hcmNvIGV4cGFuZGVyIHdpbGwgdHJ5IHRvIGZ1bGx5IGV4cGFuZFxyXG4gICAgICogYXMgaW4gTGFUZXhcclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCAxMDAwXHJcbiAgICAgKi9cclxuICAgIG1heEV4cGFuZD86IG51bWJlcjtcclxuICAgIC8qKlxyXG4gICAgICogQWxsb3dlZCBwcm90b2NvbHMgaW4gYFxcaHJlZmBcclxuICAgICAqXHJcbiAgICAgKiBVc2UgYF9yZWxhdGl2ZWAgdG8gYWxsb3cgcmVsYXRpdmUgdXJsc1xyXG4gICAgICpcclxuICAgICAqIFVzZSBgKmAgdG8gYWxsb3cgYWxsIHByb3RvY29sc1xyXG4gICAgICovXHJcbiAgICBhbGxvd2VkUHJvdG9jb2xzPzogc3RyaW5nW107XHJcbiAgICAvKipcclxuICAgICAqIElmIGBmYWxzZWAgb3IgYFwiaWdub3JlXCJgLCBhbGxvdyBmZWF0dXJlcyB0aGF0IG1ha2VcclxuICAgICAqIHdyaXRpbmcgaW4gTGFUZXggY29udmVuaWVudCBidXQgbm90IHN1cHBvcnRlZCBieSBMYVRleFxyXG4gICAgICpcclxuICAgICAqIElmIGB0cnVlYCBvciBgXCJlcnJvclwiYCwgdGhyb3cgYW4gZXJyb3IgZm9yIHN1Y2ggdHJhbnNncmVzc2lvbnNcclxuICAgICAqXHJcbiAgICAgKiBJZiBgXCJ3YXJuXCJgLCB3YXJuIGFib3V0IGJlaGF2aW9yIHZpYSBgY29uc29sZS53YXJuYFxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IFwid2FyblwiXHJcbiAgICAgKi9cclxuICAgIHN0cmljdD86IGJvb2xlYW4gfCBzdHJpbmcgfCBGdW5jdGlvbjtcclxufVxyXG4iXX0=