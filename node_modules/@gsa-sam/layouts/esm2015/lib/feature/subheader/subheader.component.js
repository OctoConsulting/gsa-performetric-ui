/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, Input, TemplateRef } from '@angular/core';
import { SdsDrawerCommunicationService } from './drawer-communication.service';
export class SdsSubheaderComponent {
    constructor() { }
}
SdsSubheaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-subheader',
                template: "<div class=\"sds-navbar border-bottom border-base-lighter\">\n  <div class=\"sds-navbar__content\">\n    <div class=\"grid-row\">\n      <div\n        class=\"grid-col-12 tablet-lg:grid-col-auto display-flex flex-align-center margin-bottom-1 tablet-lg:margin-bottom-0\"\n      >\n        <ng-content></ng-content>\n      </div>\n      <div class=\"grid-col-12 tablet-lg:grid-col-fill display-flex\">\n        <div class=\"tablet-lg:order-1\">\n          <!-- Buttons -->\n          <ng-content select=\"[subheader-buttons-container]\"></ng-content>\n        </div>\n        <div class=\"flex-fill\">\n          <!-- Search -->\n          <div class=\"margin-x-105 margin-top-05 tablet:margin-top-0\">\n            <ng-content select=\"sds-search\"></ng-content>\n          </div>\n        </div>\n        <div class=\"tablet-lg:order-2 margin-left-2\">\n          <!-- Actions Menu Trigger -->\n          <ng-content select=\"sds-subheader-actions\"></ng-content>\n\n          <!-- Drawer Trigger -->\n          <ng-content select=\"sds-subheader-drawer\"></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- =============== DRAWER CONTENT =============== -->\n<sds-drawer-content></sds-drawer-content>\n"
            }] }
];
/** @nocollapse */
SdsSubheaderComponent.ctorParameters = () => [];
export class SdsSubheaderActionsComponent {
    constructor() {
        this.clicks = new EventEmitter();
    }
}
SdsSubheaderActionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-subheader-actions',
                template: "<!-- Actions Menu Trigger: Desktop -->\n<span class=\"display-none desktop-lg:display-inline-block\">\n  <button\n    class=\"sds-button sds-button--labeled-icon\"\n    [sdsMenuTriggerFor]=\"menu\"\n  >\n    Actions\n    <fa-layers [fixedWidth]=\"true\" size=\"lg\">\n      <fa-icon [icon]=\"['fas', 'circle']\"></fa-icon>\n      <fa-icon [icon]=\"['fas', 'ellipsis-v']\" transform=\"shrink-6\"></fa-icon>\n    </fa-layers>\n  </button>\n</span>\n\n<!-- Actions Menu Trigger: Tablet -->\n<span class=\"desktop-lg:display-none \">\n  <span class=\"display-none tablet-lg:display-inline-block\">\n    <button\n      class=\"sds-button sds-button--primary sds-button--circular\"\n      [sdsMenuTriggerFor]=\"menu\"\n    >\n      <fa-icon [fixedWidth]=\"true\" [icon]=\"['fas', 'ellipsis-v']\"></fa-icon>\n      <span class=\"usa-sr-only\">Toggle Actions Menu</span>\n    </button>\n  </span>\n</span>\n\n<!-- Actions Menu Trigger: Mobile -->\n<span class=\"tablet-lg:display-none\">\n  <button\n    *ngFor=\"let button of model.actions\"\n    (click)=\"clicks.emit(button.id)\"\n    class=\"sds-button sds-button--circular margin-top-05 tablet:margin-top-0\"\n  >\n    <fa-icon [fixedWidth]=\"true\" [icon]=\"['sds', button.icon]\"></fa-icon>\n  </button>\n</span>\n\n<!-- Menu content -->\n<sds-menu #menu=\"sdsMenu\" xPosition=\"before\" overlapTrigger=\"true\">\n  <!-- Menu header (optional) -->\n  <sds-menu-header>Actions</sds-menu-header>\n  <!-- Menu items -->\n  <button\n    *ngFor=\"let button of model.actions\"\n    (click)=\"clicks.emit(button.id)\"\n    sds-menu-item\n  >\n    {{ button.text }}\n  </button>\n</sds-menu>\n"
            }] }
];
/** @nocollapse */
SdsSubheaderActionsComponent.ctorParameters = () => [];
SdsSubheaderActionsComponent.propDecorators = {
    model: [{ type: Input }],
    clicks: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SdsSubheaderActionsComponent.prototype.model;
    /** @type {?} */
    SdsSubheaderActionsComponent.prototype.clicks;
}
export class SdsSubheaderDrawerComponent {
    /**
     * @param {?} data
     */
    constructor(data) {
        this.data = data;
        this.isDrawerOpen = new EventEmitter();
        this.isOpen = false;
    }
    /**
     * @param {?} ev
     * @return {?}
     */
    onDrawerOpenClose(ev) {
        this.isOpen = !this.isOpen;
        this.data.onDrawerOpen(this.isOpen, this.drawerContentTemplate);
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
}
SdsSubheaderDrawerComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-subheader-drawer',
                template: "<button\n  (click)=\"onDrawerOpenClose($event)\"\n  class=\"sds-button sds-button--circular margin-top-2px tablet:margin-top-0\"\n>\n  <fa-icon\n    [fixedWidth]=\"true\"\n    [icon]=\"isOpen ? ['fas', 'arrow-up'] : ['fas', 'arrow-down']\"\n  ></fa-icon>\n</button>\n"
            }] }
];
/** @nocollapse */
SdsSubheaderDrawerComponent.ctorParameters = () => [
    { type: SdsDrawerCommunicationService }
];
SdsSubheaderDrawerComponent.propDecorators = {
    drawerContentTemplate: [{ type: Input }],
    isDrawerOpen: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SdsSubheaderDrawerComponent.prototype.drawerContentTemplate;
    /** @type {?} */
    SdsSubheaderDrawerComponent.prototype.isDrawerOpen;
    /** @type {?} */
    SdsSubheaderDrawerComponent.prototype.isOpen;
    /** @type {?} */
    SdsSubheaderDrawerComponent.prototype.data;
}
export class SdsDrawerContentComponent {
    /**
     * @param {?} data
     */
    constructor(data) {
        this.data = data;
        this.isDrawerOpen = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.data.contentTemplate.subscribe((/**
         * @param {?} template
         * @return {?}
         */
        template => (this.drawerContentTemplate = template)));
        this.data.isDrawerOpen.subscribe((/**
         * @param {?} open
         * @return {?}
         */
        open => (this.isDrawerOpen = open)));
    }
}
SdsDrawerContentComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-drawer-content',
                template: "<ng-container *ngIf=\"drawerContentTemplate && isDrawerOpen\" [ngTemplateOutlet]=\"drawerContentTemplate\" >\n</ng-container>\n"
            }] }
];
/** @nocollapse */
SdsDrawerContentComponent.ctorParameters = () => [
    { type: SdsDrawerCommunicationService }
];
if (false) {
    /** @type {?} */
    SdsDrawerContentComponent.prototype.drawerContentTemplate;
    /** @type {?} */
    SdsDrawerContentComponent.prototype.isDrawerOpen;
    /** @type {?} */
    SdsDrawerContentComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL2xheW91dHMvIiwic291cmNlcyI6WyJsaWIvZmVhdHVyZS9zdWJoZWFkZXIvc3ViaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxNQUFNLEVBQ04sWUFBWSxFQUNaLEtBQUssRUFDTCxXQUFXLEVBQ1osTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFNL0UsTUFBTSxPQUFPLHFCQUFxQjtJQUNoQyxnQkFBZSxDQUFDOzs7WUFMakIsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxlQUFlO2dCQUN6Qiw2dENBQXVDO2FBQ3hDOzs7O0FBU0QsTUFBTSxPQUFPLDRCQUE0QjtJQUd2QztRQURVLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO0lBQy9CLENBQUM7OztZQVBqQixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsK21EQUErQzthQUNoRDs7Ozs7b0JBRUUsS0FBSztxQkFDTCxNQUFNOzs7O0lBRFAsNkNBQWU7O0lBQ2YsOENBQThDOztBQVFoRCxNQUFNLE9BQU8sMkJBQTJCOzs7O0lBS3RDLFlBQW1CLElBQW1DO1FBQW5DLFNBQUksR0FBSixJQUFJLENBQStCO1FBSDVDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQUNyRCxXQUFNLEdBQUcsS0FBSyxDQUFDO0lBRTBDLENBQUM7Ozs7O0lBQzFELGlCQUFpQixDQUFDLEVBQUU7UUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNsRSxDQUFDOzs7O0lBQ0QsUUFBUSxLQUFJLENBQUM7OztZQWRkLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyx1UkFBOEM7YUFDL0M7Ozs7WUF2QlEsNkJBQTZCOzs7b0NBeUJuQyxLQUFLOzJCQUNMLE1BQU07Ozs7SUFEUCw0REFBaUQ7O0lBQ2pELG1EQUFxRDs7SUFDckQsNkNBQWU7O0lBRUgsMkNBQTBDOztBQVl4RCxNQUFNLE9BQU8seUJBQXlCOzs7O0lBSXBDLFlBQW1CLElBQW1DO1FBQW5DLFNBQUksR0FBSixJQUFJLENBQStCO1FBRnRELGlCQUFZLEdBQUcsS0FBSyxDQUFDO0lBRW9DLENBQUM7Ozs7SUFDMUQsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVM7Ozs7UUFDakMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxRQUFRLENBQUMsRUFDcEQsQ0FBQztRQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsRUFBQyxDQUFDO0lBQ3ZFLENBQUM7OztZQWRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QiwySUFBNEM7YUFDN0M7Ozs7WUF4Q1EsNkJBQTZCOzs7O0lBMENwQywwREFBd0M7O0lBQ3hDLGlEQUFxQjs7SUFFVCx5Q0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBUZW1wbGF0ZVJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNkc0RyYXdlckNvbW11bmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9kcmF3ZXItY29tbXVuaWNhdGlvbi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2RzLXN1YmhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAnc3ViaGVhZGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTZHNTdWJoZWFkZXJDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcigpIHt9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nkcy1zdWJoZWFkZXItYWN0aW9ucycsXG4gIHRlbXBsYXRlVXJsOiAnc3ViaGVhZGVyLWFjdGlvbnMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNkc1N1YmhlYWRlckFjdGlvbnNDb21wb25lbnQge1xuICBASW5wdXQoKSBtb2RlbDtcbiAgQE91dHB1dCgpIGNsaWNrcyA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBjb25zdHJ1Y3RvcigpIHt9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nkcy1zdWJoZWFkZXItZHJhd2VyJyxcbiAgdGVtcGxhdGVVcmw6ICdzdWJoZWFkZXItZHJhd2VyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTZHNTdWJoZWFkZXJEcmF3ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBkcmF3ZXJDb250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBPdXRwdXQoKSBpc0RyYXdlck9wZW4gPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG4gIGlzT3BlbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBkYXRhOiBTZHNEcmF3ZXJDb21tdW5pY2F0aW9uU2VydmljZSkge31cbiAgb25EcmF3ZXJPcGVuQ2xvc2UoZXYpIHtcbiAgICB0aGlzLmlzT3BlbiA9ICF0aGlzLmlzT3BlbjtcbiAgICB0aGlzLmRhdGEub25EcmF3ZXJPcGVuKHRoaXMuaXNPcGVuLCB0aGlzLmRyYXdlckNvbnRlbnRUZW1wbGF0ZSk7XG4gIH1cbiAgbmdPbkluaXQoKSB7fVxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzZHMtZHJhd2VyLWNvbnRlbnQnLFxuICB0ZW1wbGF0ZVVybDogJ2RyYXdlci5jb250ZW50LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTZHNEcmF3ZXJDb250ZW50Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgZHJhd2VyQ29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBpc0RyYXdlck9wZW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZGF0YTogU2RzRHJhd2VyQ29tbXVuaWNhdGlvblNlcnZpY2UpIHt9XG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZGF0YS5jb250ZW50VGVtcGxhdGUuc3Vic2NyaWJlKFxuICAgICAgdGVtcGxhdGUgPT4gKHRoaXMuZHJhd2VyQ29udGVudFRlbXBsYXRlID0gdGVtcGxhdGUpXG4gICAgKTtcbiAgICB0aGlzLmRhdGEuaXNEcmF3ZXJPcGVuLnN1YnNjcmliZShvcGVuID0+ICh0aGlzLmlzRHJhd2VyT3BlbiA9IG9wZW4pKTtcbiAgfVxufVxuIl19