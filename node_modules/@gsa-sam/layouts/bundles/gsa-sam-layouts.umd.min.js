!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/forms"),require("@gsa-sam/sam-formly"),require("rxjs"),require("@angular/core"),require("@gsa-sam/components"),require("@angular/common"),require("@fortawesome/angular-fontawesome")):"function"==typeof define&&define.amd?define("@gsa-sam/layouts",["exports","@angular/forms","@gsa-sam/sam-formly","rxjs","@angular/core","@gsa-sam/components","@angular/common","@fortawesome/angular-fontawesome"],e):e((n["gsa-sam"]=n["gsa-sam"]||{},n["gsa-sam"].layouts={}),n.ng.forms,n.samFormly,n.rxjs,n.ng.core,n.components,n.ng.common,n.angularFontawesome)}(this,function(n,e,t,s,o,a,i,r){"use strict";var c=(l.decorators=[{type:o.NgModule,args:[{imports:[i.CommonModule]}]}],l);function l(){}var u=(d.prototype.ngOnInit=function(){var e=this;this.page.pageSize=this.configuration.pageSize,this.sortField=this.configuration.defaultSortValue,this.paginationChange.subscribe(function(){e.updateContent()}),this.formlyUpdateComunicationService&&this.formlyUpdateComunicationService.filterUpdate.subscribe(function(n){e.updateFilter(n)})},d.prototype.updateFilter=function(n){this.filterData=n,this.page.pageNumber=1,this.updateContent()},d.prototype.onSelectChange=function(){this.page.pageNumber=1,this.updateContent()},d.prototype.updateContent=function(){var e=this;this.service.getData({page:this.page,sortField:this.sortField,filter:this.filterData}).subscribe(function(n){e.items=n.items,e.page.totalPages=Math.ceil(n.totalItems/e.page.pageSize)})},d.decorators=[{type:o.Component,args:[{selector:"search-list-layout",template:'<div class="grid-row" *ngIf="items?.length">\n  <div class="grid-col">\n    <div class="grid-row">\n      <div class="grid-col-auto">\n        <sds-pagination class="tablet:grid-col" [paginationConfiguration]="top" [(page)]="page" (pageChange)="paginationChange.next($event)">\n        </sds-pagination>\n      </div>\n      <div class="grid-col-fill"></div>\n      <div class="grid-col-auto float-right">\n        <div class="margin-left-1">\n          <label class="usa-label font-sans-3xs text-italic text-base margin-top-1" for="options">\n            Sort by\n          </label>\n          <select (change)="onSelectChange()" [(ngModel)]="sortField" class="usa-select usa-select--small sds-min-width-160 border-base-light" id="options">\n            <option *ngFor="let item of configuration.sortList" [ngValue]="item.value">\n              {{ item.text }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class="grid-row">\n  <div class="grid-col-12">\n    <sds-search-result-list [model]="items">\n      <ng-template #resultContent let-item>\n        <ng-container *ngTemplateOutlet="resultContentTemplate,\n                context: { $implicit: item }"></ng-container>\n      </ng-template>\n    </sds-search-result-list>\n    <sds-pagination *ngIf="items?.length" [paginationConfiguration]="bottom" [(page)]="page" (pageChange)="paginationChange.next($event)">\n    </sds-pagination>\n  </div>\n</div>\n',styles:[""]}]}],d.ctorParameters=function(){return[{type:t.SDSFormlyUpdateComunicationService,decorators:[{type:o.Optional}]}]},d.propDecorators={resultContentTemplate:[{type:o.ContentChild,args:["resultContent"]}],service:[{type:o.Input}],configuration:[{type:o.Input}]},d);function d(n){this.formlyUpdateComunicationService=n,this.page={pageNumber:1,pageSize:25,totalPages:0},this.top={id:"topPagination"},this.bottom={id:"bottomPagination"},this.paginationChange=new s.BehaviorSubject(this.page),this.items=[],this.sortField=""}var p=(g.decorators=[{type:o.NgModule,args:[{declarations:[u],imports:[i.CommonModule,e.FormsModule,a.PaginationModule,a.SdsSearchResultListModule],exports:[u]}]}],g);function g(){}var m=function(){},f=function(){},b=function(){},h=function(){this.pageSize=25},v=(y.prototype.onDrawerOpen=function(n,e){this.isOpen.next(n),this.currentTemplate.next(e)},y.decorators=[{type:o.Injectable}],y);function y(){this.isOpen=new s.BehaviorSubject(!1),this.isDrawerOpen=this.isOpen.asObservable(),this.currentTemplate=new s.BehaviorSubject(null),this.contentTemplate=this.currentTemplate.asObservable()}var x=(M.decorators=[{type:o.Component,args:[{selector:"sds-subheader",template:'<div class="sds-navbar border-bottom border-base-lighter">\n  <div class="sds-navbar__content">\n    <div class="grid-row">\n      <div\n        class="grid-col-12 tablet-lg:grid-col-auto display-flex flex-align-center margin-bottom-1 tablet-lg:margin-bottom-0"\n      >\n        <ng-content></ng-content>\n      </div>\n      <div class="grid-col-12 tablet-lg:grid-col-fill display-flex">\n        <div class="tablet-lg:order-1">\n          \x3c!-- Buttons --\x3e\n          <ng-content select="[subheader-buttons-container]"></ng-content>\n        </div>\n        <div class="flex-fill">\n          \x3c!-- Search --\x3e\n          <div class="margin-x-105 margin-top-05 tablet:margin-top-0">\n            <ng-content select="sds-search"></ng-content>\n          </div>\n        </div>\n        <div class="tablet-lg:order-2 margin-left-2">\n          \x3c!-- Actions Menu Trigger --\x3e\n          <ng-content select="sds-subheader-actions"></ng-content>\n\n          \x3c!-- Drawer Trigger --\x3e\n          <ng-content select="sds-subheader-drawer"></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\x3c!-- =============== DRAWER CONTENT =============== --\x3e\n<sds-drawer-content></sds-drawer-content>\n'}]}],M.ctorParameters=function(){return[]},M);function M(){}var w=(C.decorators=[{type:o.Component,args:[{selector:"sds-subheader-actions",template:'\x3c!-- Actions Menu Trigger: Desktop --\x3e\n<span class="display-none desktop-lg:display-inline-block">\n  <button\n    class="sds-button sds-button--labeled-icon"\n    [sdsMenuTriggerFor]="menu"\n  >\n    Actions\n    <fa-layers [fixedWidth]="true" size="lg">\n      <fa-icon [icon]="[\'fas\', \'circle\']"></fa-icon>\n      <fa-icon [icon]="[\'fas\', \'ellipsis-v\']" transform="shrink-6"></fa-icon>\n    </fa-layers>\n  </button>\n</span>\n\n\x3c!-- Actions Menu Trigger: Tablet --\x3e\n<span class="desktop-lg:display-none ">\n  <span class="display-none tablet-lg:display-inline-block">\n    <button\n      class="sds-button sds-button--primary sds-button--circular"\n      [sdsMenuTriggerFor]="menu"\n    >\n      <fa-icon [fixedWidth]="true" [icon]="[\'fas\', \'ellipsis-v\']"></fa-icon>\n      <span class="usa-sr-only">Toggle Actions Menu</span>\n    </button>\n  </span>\n</span>\n\n\x3c!-- Actions Menu Trigger: Mobile --\x3e\n<span class="tablet-lg:display-none">\n  <button\n    *ngFor="let button of model.actions"\n    (click)="clicks.emit(button.id)"\n    class="sds-button sds-button--circular margin-top-05 tablet:margin-top-0"\n  >\n    <fa-icon [fixedWidth]="true" [icon]="[\'sds\', button.icon]"></fa-icon>\n  </button>\n</span>\n\n\x3c!-- Menu content --\x3e\n<sds-menu #menu="sdsMenu" xPosition="before" overlapTrigger="true">\n  \x3c!-- Menu header (optional) --\x3e\n  <sds-menu-header>Actions</sds-menu-header>\n  \x3c!-- Menu items --\x3e\n  <button\n    *ngFor="let button of model.actions"\n    (click)="clicks.emit(button.id)"\n    sds-menu-item\n  >\n    {{ button.text }}\n  </button>\n</sds-menu>\n'}]}],C.ctorParameters=function(){return[]},C.propDecorators={model:[{type:o.Input}],clicks:[{type:o.Output}]},C);function C(){this.clicks=new o.EventEmitter}var S=(O.prototype.onDrawerOpenClose=function(n){this.isOpen=!this.isOpen,this.data.onDrawerOpen(this.isOpen,this.drawerContentTemplate)},O.prototype.ngOnInit=function(){},O.decorators=[{type:o.Component,args:[{selector:"sds-subheader-drawer",template:"<button\n  (click)=\"onDrawerOpenClose($event)\"\n  class=\"sds-button sds-button--circular margin-top-2px tablet:margin-top-0\"\n>\n  <fa-icon\n    [fixedWidth]=\"true\"\n    [icon]=\"isOpen ? ['fas', 'arrow-up'] : ['fas', 'arrow-down']\"\n  ></fa-icon>\n</button>\n"}]}],O.ctorParameters=function(){return[{type:v}]},O.propDecorators={drawerContentTemplate:[{type:o.Input}],isDrawerOpen:[{type:o.Output}]},O);function O(n){this.data=n,this.isDrawerOpen=new o.EventEmitter,this.isOpen=!1}var T=(D.prototype.ngOnInit=function(){var e=this;this.data.contentTemplate.subscribe(function(n){return e.drawerContentTemplate=n}),this.data.isDrawerOpen.subscribe(function(n){return e.isDrawerOpen=n})},D.decorators=[{type:o.Component,args:[{selector:"sds-drawer-content",template:'<ng-container *ngIf="drawerContentTemplate && isDrawerOpen" [ngTemplateOutlet]="drawerContentTemplate" >\n</ng-container>\n'}]}],D.ctorParameters=function(){return[{type:v}]},D);function D(n){this.data=n,this.isDrawerOpen=!1}var F=(k.decorators=[{type:o.Component,args:[{selector:"sds-actions-menu",template:'\x3c!-- Button that triggers menu (sdsMenuTriggerFor) --\x3e\n<button\n  class="sds-button sds-button--circular"\n  [class.sds-button--primary]="model.trigger.type === \'primary\'"\n  [class.sds-button--shadow]="model.trigger.shadow"\n  [class.sds-button--small]="size === \'sm\'"\n  [sdsMenuTriggerFor]="menu"\n>\n  <fa-icon\n    [fixedWidth]="true"\n    [icon]="[\'sds\', \'ellipsis\']"\n    transform="grow-5"\n  ></fa-icon>\n  <span class="usa-sr-only">Toggle Actions Menu</span>\n</button>\n\n\x3c!-- Menu content --\x3e\n<sds-menu\n  #menu="sdsMenu"\n  [size]="size"\n  xPosition="before"\n  overlapTrigger="true"\n>\n  \x3c!-- Menu header (optional) --\x3e\n  <sds-menu-header>Actions</sds-menu-header>\n  \x3c!-- Menu items --\x3e\n  <button\n    *ngFor="let button of model.actions"\n    (click)="clicks.emit(button.id)"\n    sds-menu-item\n  >\n    {{ button.text }}\n  </button>\n</sds-menu>\n'}]}],k.ctorParameters=function(){return[]},k.propDecorators={model:[{type:o.Input}],size:[{type:o.Input}],clicks:[{type:o.Output}]},k);function k(){this.clicks=new o.EventEmitter}var P=(I.decorators=[{type:o.NgModule,args:[{imports:[i.CommonModule,r.FontAwesomeModule,a.SdsMenuModule],exports:[F],declarations:[F],providers:[]}]}],I);function I(){}var A=(z.decorators=[{type:o.NgModule,args:[{imports:[i.CommonModule,r.FontAwesomeModule,a.SdsMenuModule,a.SdsObserversModule,a.SdsSearchModule,a.SdsTruncateModule,P],exports:[x,w,S,T],declarations:[x,w,S,T],providers:[v]}]}],z);function z(){}n.PackagesLayoutsModule=c,n.SearchListServiceModule=p,n.SearchParameters=m,n.SearchResult=f,n.sortItem=b,n.SearchListConfiguration=h,n.SdsSubheaderModule=A,n.SdsActionsMenuModule=P,n.ɵb=F,n.ɵa=u,n.ɵg=v,n.ɵf=T,n.ɵd=w,n.ɵc=x,n.ɵe=S,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=gsa-sam-layouts.umd.min.js.map