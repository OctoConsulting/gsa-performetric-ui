import { FormsModule } from '@angular/forms';
import { SDSFormlyUpdateComunicationService } from '@gsa-sam/sam-formly';
import { BehaviorSubject } from 'rxjs';
import { NgModule, Component, Input, ContentChild, Optional, Injectable, Output, EventEmitter } from '@angular/core';
import { PaginationModule, SdsSearchResultListModule, SdsMenuModule, SdsSearchModule, SdsObserversModule, SdsTruncateModule } from '@gsa-sam/components';
import { CommonModule } from '@angular/common';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var PackagesLayoutsModule = /** @class */ (function () {
    function PackagesLayoutsModule() {
    }
    PackagesLayoutsModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule]
                },] }
    ];
    return PackagesLayoutsModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SearchParameters = /** @class */ (function () {
    function SearchParameters() {
    }
    return SearchParameters;
}());
var SearchResult = /** @class */ (function () {
    function SearchResult() {
    }
    return SearchResult;
}());
var sortItem = /** @class */ (function () {
    function sortItem() {
    }
    return sortItem;
}());
var SearchListConfiguration = /** @class */ (function () {
    function SearchListConfiguration() {
        /**
         * Starting page size
         */
        this.pageSize = 25;
    }
    return SearchListConfiguration;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SearchListLayoutComponent = /** @class */ (function () {
    function SearchListLayoutComponent(formlyUpdateComunicationService) {
        this.formlyUpdateComunicationService = formlyUpdateComunicationService;
        /**
         * Default Page setttings
         */
        this.page = {
            pageNumber: 1,
            pageSize: 25,
            totalPages: 0
        };
        /**
         * Id of the top pagination control
         */
        this.top = { id: 'topPagination' };
        /**
         * Id of the bottom pagination control
         */
        this.bottom = { id: 'bottomPagination' };
        /**
         * Page event listener
         */
        this.paginationChange = new BehaviorSubject(this.page);
        /**
         * List of items to be displayed
         */
        this.items = [];
        /**
         * sort value
         */
        this.sortField = '';
    }
    /**
     * @return {?}
     */
    SearchListLayoutComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.page.pageSize = this.configuration.pageSize;
        this.sortField = this.configuration.defaultSortValue;
        this.paginationChange.subscribe((/**
         * @return {?}
         */
        function () {
            _this.updateContent();
        }));
        if (this.formlyUpdateComunicationService) {
            this.formlyUpdateComunicationService.filterUpdate.subscribe((/**
             * @param {?} filter
             * @return {?}
             */
            function (filter) {
                _this.updateFilter(filter);
            }));
        }
    };
    /**
     * updates the filter and set the page number to 1 and calls imported service
     * @param filter
     */
    /**
     * updates the filter and set the page number to 1 and calls imported service
     * @param {?} filter
     * @return {?}
     */
    SearchListLayoutComponent.prototype.updateFilter = /**
     * updates the filter and set the page number to 1 and calls imported service
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        this.filterData = filter;
        this.page.pageNumber = 1;
        this.updateContent();
    };
    /**
     * Sorty by change event
     */
    /**
     * Sorty by change event
     * @return {?}
     */
    SearchListLayoutComponent.prototype.onSelectChange = /**
     * Sorty by change event
     * @return {?}
     */
    function () {
        this.page.pageNumber = 1;
        this.updateContent();
    };
    /**
     * calls service when updated
     */
    /**
     * calls service when updated
     * @private
     * @return {?}
     */
    SearchListLayoutComponent.prototype.updateContent = /**
     * calls service when updated
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.service.getData({ 'page': this.page, sortField: this.sortField, filter: this.filterData }).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.items = result.items;
            _this.page.totalPages = Math.ceil(result.totalItems / _this.page.pageSize);
        }));
    };
    SearchListLayoutComponent.decorators = [
        { type: Component, args: [{
                    selector: 'search-list-layout',
                    template: "<div class=\"grid-row\" *ngIf=\"items?.length\">\n  <div class=\"grid-col\">\n    <div class=\"grid-row\">\n      <div class=\"grid-col-auto\">\n        <sds-pagination class=\"tablet:grid-col\" [paginationConfiguration]=\"top\" [(page)]=\"page\" (pageChange)=\"paginationChange.next($event)\">\n        </sds-pagination>\n      </div>\n      <div class=\"grid-col-fill\"></div>\n      <div class=\"grid-col-auto float-right\">\n        <div class=\"margin-left-1\">\n          <label class=\"usa-label font-sans-3xs text-italic text-base margin-top-1\" for=\"options\">\n            Sort by\n          </label>\n          <select (change)=\"onSelectChange()\" [(ngModel)]=\"sortField\" class=\"usa-select usa-select--small sds-min-width-160 border-base-light\" id=\"options\">\n            <option *ngFor=\"let item of configuration.sortList\" [ngValue]=\"item.value\">\n              {{ item.text }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col-12\">\n    <sds-search-result-list [model]=\"items\">\n      <ng-template #resultContent let-item>\n        <ng-container *ngTemplateOutlet=\"resultContentTemplate,\n                context: { $implicit: item }\"></ng-container>\n      </ng-template>\n    </sds-search-result-list>\n    <sds-pagination *ngIf=\"items?.length\" [paginationConfiguration]=\"bottom\" [(page)]=\"page\" (pageChange)=\"paginationChange.next($event)\">\n    </sds-pagination>\n  </div>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SearchListLayoutComponent.ctorParameters = function () { return [
        { type: SDSFormlyUpdateComunicationService, decorators: [{ type: Optional }] }
    ]; };
    SearchListLayoutComponent.propDecorators = {
        resultContentTemplate: [{ type: ContentChild, args: ['resultContent',] }],
        service: [{ type: Input }],
        configuration: [{ type: Input }]
    };
    return SearchListLayoutComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SearchListServiceModule = /** @class */ (function () {
    function SearchListServiceModule() {
    }
    SearchListServiceModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [SearchListLayoutComponent],
                    imports: [
                        CommonModule, FormsModule,
                        PaginationModule, SdsSearchResultListModule
                    ], exports: [SearchListLayoutComponent]
                },] }
    ];
    return SearchListServiceModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SdsDrawerCommunicationService = /** @class */ (function () {
    function SdsDrawerCommunicationService() {
        this.isOpen = new BehaviorSubject(false);
        this.isDrawerOpen = this.isOpen.asObservable();
        this.currentTemplate = new BehaviorSubject(null);
        this.contentTemplate = this.currentTemplate.asObservable();
    }
    /**
     * @param {?} open
     * @param {?} temp
     * @return {?}
     */
    SdsDrawerCommunicationService.prototype.onDrawerOpen = /**
     * @param {?} open
     * @param {?} temp
     * @return {?}
     */
    function (open, temp) {
        this.isOpen.next(open);
        this.currentTemplate.next(temp);
    };
    SdsDrawerCommunicationService.decorators = [
        { type: Injectable }
    ];
    return SdsDrawerCommunicationService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SdsSubheaderComponent = /** @class */ (function () {
    function SdsSubheaderComponent() {
    }
    SdsSubheaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-subheader',
                    template: "<div class=\"sds-navbar border-bottom border-base-lighter\">\n  <div class=\"sds-navbar__content\">\n    <div class=\"grid-row\">\n      <div\n        class=\"grid-col-12 tablet-lg:grid-col-auto display-flex flex-align-center margin-bottom-1 tablet-lg:margin-bottom-0\"\n      >\n        <ng-content></ng-content>\n      </div>\n      <div class=\"grid-col-12 tablet-lg:grid-col-fill display-flex\">\n        <div class=\"tablet-lg:order-1\">\n          <!-- Buttons -->\n          <ng-content select=\"[subheader-buttons-container]\"></ng-content>\n        </div>\n        <div class=\"flex-fill\">\n          <!-- Search -->\n          <div class=\"margin-x-105 margin-top-05 tablet:margin-top-0\">\n            <ng-content select=\"sds-search\"></ng-content>\n          </div>\n        </div>\n        <div class=\"tablet-lg:order-2 margin-left-2\">\n          <!-- Actions Menu Trigger -->\n          <ng-content select=\"sds-subheader-actions\"></ng-content>\n\n          <!-- Drawer Trigger -->\n          <ng-content select=\"sds-subheader-drawer\"></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- =============== DRAWER CONTENT =============== -->\n<sds-drawer-content></sds-drawer-content>\n"
                }] }
    ];
    /** @nocollapse */
    SdsSubheaderComponent.ctorParameters = function () { return []; };
    return SdsSubheaderComponent;
}());
var SdsSubheaderActionsComponent = /** @class */ (function () {
    function SdsSubheaderActionsComponent() {
        this.clicks = new EventEmitter();
    }
    SdsSubheaderActionsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-subheader-actions',
                    template: "<!-- Actions Menu Trigger: Desktop -->\n<span class=\"display-none desktop-lg:display-inline-block\">\n  <button\n    class=\"sds-button sds-button--labeled-icon\"\n    [sdsMenuTriggerFor]=\"menu\"\n  >\n    Actions\n    <fa-layers [fixedWidth]=\"true\" size=\"lg\">\n      <fa-icon [icon]=\"['fas', 'circle']\"></fa-icon>\n      <fa-icon [icon]=\"['fas', 'ellipsis-v']\" transform=\"shrink-6\"></fa-icon>\n    </fa-layers>\n  </button>\n</span>\n\n<!-- Actions Menu Trigger: Tablet -->\n<span class=\"desktop-lg:display-none \">\n  <span class=\"display-none tablet-lg:display-inline-block\">\n    <button\n      class=\"sds-button sds-button--primary sds-button--circular\"\n      [sdsMenuTriggerFor]=\"menu\"\n    >\n      <fa-icon [fixedWidth]=\"true\" [icon]=\"['fas', 'ellipsis-v']\"></fa-icon>\n      <span class=\"usa-sr-only\">Toggle Actions Menu</span>\n    </button>\n  </span>\n</span>\n\n<!-- Actions Menu Trigger: Mobile -->\n<span class=\"tablet-lg:display-none\">\n  <button\n    *ngFor=\"let button of model.actions\"\n    (click)=\"clicks.emit(button.id)\"\n    class=\"sds-button sds-button--circular margin-top-05 tablet:margin-top-0\"\n  >\n    <fa-icon [fixedWidth]=\"true\" [icon]=\"['sds', button.icon]\"></fa-icon>\n  </button>\n</span>\n\n<!-- Menu content -->\n<sds-menu #menu=\"sdsMenu\" xPosition=\"before\" overlapTrigger=\"true\">\n  <!-- Menu header (optional) -->\n  <sds-menu-header>Actions</sds-menu-header>\n  <!-- Menu items -->\n  <button\n    *ngFor=\"let button of model.actions\"\n    (click)=\"clicks.emit(button.id)\"\n    sds-menu-item\n  >\n    {{ button.text }}\n  </button>\n</sds-menu>\n"
                }] }
    ];
    /** @nocollapse */
    SdsSubheaderActionsComponent.ctorParameters = function () { return []; };
    SdsSubheaderActionsComponent.propDecorators = {
        model: [{ type: Input }],
        clicks: [{ type: Output }]
    };
    return SdsSubheaderActionsComponent;
}());
var SdsSubheaderDrawerComponent = /** @class */ (function () {
    function SdsSubheaderDrawerComponent(data) {
        this.data = data;
        this.isDrawerOpen = new EventEmitter();
        this.isOpen = false;
    }
    /**
     * @param {?} ev
     * @return {?}
     */
    SdsSubheaderDrawerComponent.prototype.onDrawerOpenClose = /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        this.isOpen = !this.isOpen;
        this.data.onDrawerOpen(this.isOpen, this.drawerContentTemplate);
    };
    /**
     * @return {?}
     */
    SdsSubheaderDrawerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    SdsSubheaderDrawerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-subheader-drawer',
                    template: "<button\n  (click)=\"onDrawerOpenClose($event)\"\n  class=\"sds-button sds-button--circular margin-top-2px tablet:margin-top-0\"\n>\n  <fa-icon\n    [fixedWidth]=\"true\"\n    [icon]=\"isOpen ? ['fas', 'arrow-up'] : ['fas', 'arrow-down']\"\n  ></fa-icon>\n</button>\n"
                }] }
    ];
    /** @nocollapse */
    SdsSubheaderDrawerComponent.ctorParameters = function () { return [
        { type: SdsDrawerCommunicationService }
    ]; };
    SdsSubheaderDrawerComponent.propDecorators = {
        drawerContentTemplate: [{ type: Input }],
        isDrawerOpen: [{ type: Output }]
    };
    return SdsSubheaderDrawerComponent;
}());
var SdsDrawerContentComponent = /** @class */ (function () {
    function SdsDrawerContentComponent(data) {
        this.data = data;
        this.isDrawerOpen = false;
    }
    /**
     * @return {?}
     */
    SdsDrawerContentComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.data.contentTemplate.subscribe((/**
         * @param {?} template
         * @return {?}
         */
        function (template) { return (_this.drawerContentTemplate = template); }));
        this.data.isDrawerOpen.subscribe((/**
         * @param {?} open
         * @return {?}
         */
        function (open) { return (_this.isDrawerOpen = open); }));
    };
    SdsDrawerContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-drawer-content',
                    template: "<ng-container *ngIf=\"drawerContentTemplate && isDrawerOpen\" [ngTemplateOutlet]=\"drawerContentTemplate\" >\n</ng-container>\n"
                }] }
    ];
    /** @nocollapse */
    SdsDrawerContentComponent.ctorParameters = function () { return [
        { type: SdsDrawerCommunicationService }
    ]; };
    return SdsDrawerContentComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SdsActionsMenuComponent = /** @class */ (function () {
    function SdsActionsMenuComponent() {
        this.clicks = new EventEmitter();
    }
    SdsActionsMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-actions-menu',
                    template: "<!-- Button that triggers menu (sdsMenuTriggerFor) -->\n<button\n  class=\"sds-button sds-button--circular\"\n  [class.sds-button--primary]=\"model.trigger.type === 'primary'\"\n  [class.sds-button--shadow]=\"model.trigger.shadow\"\n  [class.sds-button--small]=\"size === 'sm'\"\n  [sdsMenuTriggerFor]=\"menu\"\n>\n  <fa-icon\n    [fixedWidth]=\"true\"\n    [icon]=\"['sds', 'ellipsis']\"\n    transform=\"grow-5\"\n  ></fa-icon>\n  <span class=\"usa-sr-only\">Toggle Actions Menu</span>\n</button>\n\n<!-- Menu content -->\n<sds-menu\n  #menu=\"sdsMenu\"\n  [size]=\"size\"\n  xPosition=\"before\"\n  overlapTrigger=\"true\"\n>\n  <!-- Menu header (optional) -->\n  <sds-menu-header>Actions</sds-menu-header>\n  <!-- Menu items -->\n  <button\n    *ngFor=\"let button of model.actions\"\n    (click)=\"clicks.emit(button.id)\"\n    sds-menu-item\n  >\n    {{ button.text }}\n  </button>\n</sds-menu>\n"
                }] }
    ];
    /** @nocollapse */
    SdsActionsMenuComponent.ctorParameters = function () { return []; };
    SdsActionsMenuComponent.propDecorators = {
        model: [{ type: Input }],
        size: [{ type: Input }],
        clicks: [{ type: Output }]
    };
    return SdsActionsMenuComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SdsActionsMenuModule = /** @class */ (function () {
    function SdsActionsMenuModule() {
    }
    SdsActionsMenuModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, FontAwesomeModule, SdsMenuModule],
                    exports: [SdsActionsMenuComponent],
                    declarations: [SdsActionsMenuComponent],
                    providers: []
                },] }
    ];
    return SdsActionsMenuModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SdsSubheaderModule = /** @class */ (function () {
    function SdsSubheaderModule() {
    }
    SdsSubheaderModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FontAwesomeModule,
                        SdsMenuModule,
                        SdsObserversModule,
                        SdsSearchModule,
                        SdsTruncateModule,
                        SdsActionsMenuModule
                    ],
                    exports: [
                        SdsSubheaderComponent,
                        SdsSubheaderActionsComponent,
                        SdsSubheaderDrawerComponent,
                        SdsDrawerContentComponent,
                    ],
                    declarations: [
                        SdsSubheaderComponent,
                        SdsSubheaderActionsComponent,
                        SdsSubheaderDrawerComponent,
                        SdsDrawerContentComponent
                    ],
                    providers: [SdsDrawerCommunicationService]
                },] }
    ];
    return SdsSubheaderModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { PackagesLayoutsModule, SearchListServiceModule, SearchParameters, SearchResult, sortItem, SearchListConfiguration, SdsSubheaderModule, SdsActionsMenuModule, SdsActionsMenuComponent as ɵb, SearchListLayoutComponent as ɵa, SdsDrawerCommunicationService as ɵg, SdsDrawerContentComponent as ɵf, SdsSubheaderActionsComponent as ɵd, SdsSubheaderComponent as ɵc, SdsSubheaderDrawerComponent as ɵe };

//# sourceMappingURL=gsa-sam-layouts.js.map