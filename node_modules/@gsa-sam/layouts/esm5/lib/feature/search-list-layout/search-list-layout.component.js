/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ContentChild, TemplateRef, Optional } from '@angular/core';
import { BehaviorSubject } from "rxjs";
import { SearchListConfiguration } from './model/search-list-layout.model';
import { SDSFormlyUpdateComunicationService } from '@gsa-sam/sam-formly';
var SearchListLayoutComponent = /** @class */ (function () {
    function SearchListLayoutComponent(formlyUpdateComunicationService) {
        this.formlyUpdateComunicationService = formlyUpdateComunicationService;
        /**
         * Default Page setttings
         */
        this.page = {
            pageNumber: 1,
            pageSize: 25,
            totalPages: 0
        };
        /**
         * Id of the top pagination control
         */
        this.top = { id: 'topPagination' };
        /**
         * Id of the bottom pagination control
         */
        this.bottom = { id: 'bottomPagination' };
        /**
         * Page event listener
         */
        this.paginationChange = new BehaviorSubject(this.page);
        /**
         * List of items to be displayed
         */
        this.items = [];
        /**
         * sort value
         */
        this.sortField = '';
    }
    /**
     * @return {?}
     */
    SearchListLayoutComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.page.pageSize = this.configuration.pageSize;
        this.sortField = this.configuration.defaultSortValue;
        this.paginationChange.subscribe((/**
         * @return {?}
         */
        function () {
            _this.updateContent();
        }));
        if (this.formlyUpdateComunicationService) {
            this.formlyUpdateComunicationService.filterUpdate.subscribe((/**
             * @param {?} filter
             * @return {?}
             */
            function (filter) {
                _this.updateFilter(filter);
            }));
        }
    };
    /**
     * updates the filter and set the page number to 1 and calls imported service
     * @param filter
     */
    /**
     * updates the filter and set the page number to 1 and calls imported service
     * @param {?} filter
     * @return {?}
     */
    SearchListLayoutComponent.prototype.updateFilter = /**
     * updates the filter and set the page number to 1 and calls imported service
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        this.filterData = filter;
        this.page.pageNumber = 1;
        this.updateContent();
    };
    /**
     * Sorty by change event
     */
    /**
     * Sorty by change event
     * @return {?}
     */
    SearchListLayoutComponent.prototype.onSelectChange = /**
     * Sorty by change event
     * @return {?}
     */
    function () {
        this.page.pageNumber = 1;
        this.updateContent();
    };
    /**
     * calls service when updated
     */
    /**
     * calls service when updated
     * @private
     * @return {?}
     */
    SearchListLayoutComponent.prototype.updateContent = /**
     * calls service when updated
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.service.getData({ 'page': this.page, sortField: this.sortField, filter: this.filterData }).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.items = result.items;
            _this.page.totalPages = Math.ceil(result.totalItems / _this.page.pageSize);
        }));
    };
    SearchListLayoutComponent.decorators = [
        { type: Component, args: [{
                    selector: 'search-list-layout',
                    template: "<div class=\"grid-row\" *ngIf=\"items?.length\">\n  <div class=\"grid-col\">\n    <div class=\"grid-row\">\n      <div class=\"grid-col-auto\">\n        <sds-pagination class=\"tablet:grid-col\" [paginationConfiguration]=\"top\" [(page)]=\"page\" (pageChange)=\"paginationChange.next($event)\">\n        </sds-pagination>\n      </div>\n      <div class=\"grid-col-fill\"></div>\n      <div class=\"grid-col-auto float-right\">\n        <div class=\"margin-left-1\">\n          <label class=\"usa-label font-sans-3xs text-italic text-base margin-top-1\" for=\"options\">\n            Sort by\n          </label>\n          <select (change)=\"onSelectChange()\" [(ngModel)]=\"sortField\" class=\"usa-select usa-select--small sds-min-width-160 border-base-light\" id=\"options\">\n            <option *ngFor=\"let item of configuration.sortList\" [ngValue]=\"item.value\">\n              {{ item.text }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"grid-row\">\n  <div class=\"grid-col-12\">\n    <sds-search-result-list [model]=\"items\">\n      <ng-template #resultContent let-item>\n        <ng-container *ngTemplateOutlet=\"resultContentTemplate,\n                context: { $implicit: item }\"></ng-container>\n      </ng-template>\n    </sds-search-result-list>\n    <sds-pagination *ngIf=\"items?.length\" [paginationConfiguration]=\"bottom\" [(page)]=\"page\" (pageChange)=\"paginationChange.next($event)\">\n    </sds-pagination>\n  </div>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SearchListLayoutComponent.ctorParameters = function () { return [
        { type: SDSFormlyUpdateComunicationService, decorators: [{ type: Optional }] }
    ]; };
    SearchListLayoutComponent.propDecorators = {
        resultContentTemplate: [{ type: ContentChild, args: ['resultContent',] }],
        service: [{ type: Input }],
        configuration: [{ type: Input }]
    };
    return SearchListLayoutComponent;
}());
export { SearchListLayoutComponent };
if (false) {
    /**
     * Child Template to be used to display the data for each item in the list of items
     * @type {?}
     */
    SearchListLayoutComponent.prototype.resultContentTemplate;
    /**
     * Input service to be called when items change
     * @type {?}
     */
    SearchListLayoutComponent.prototype.service;
    /**
     * configuration
     * @type {?}
     */
    SearchListLayoutComponent.prototype.configuration;
    /**
     * Filter information
     * @type {?}
     * @private
     */
    SearchListLayoutComponent.prototype.filterData;
    /**
     * Default Page setttings
     * @type {?}
     */
    SearchListLayoutComponent.prototype.page;
    /**
     * Id of the top pagination control
     * @type {?}
     */
    SearchListLayoutComponent.prototype.top;
    /**
     * Id of the bottom pagination control
     * @type {?}
     */
    SearchListLayoutComponent.prototype.bottom;
    /**
     * Page event listener
     * @type {?}
     */
    SearchListLayoutComponent.prototype.paginationChange;
    /**
     * List of items to be displayed
     * @type {?}
     */
    SearchListLayoutComponent.prototype.items;
    /**
     * sort value
     * @type {?}
     */
    SearchListLayoutComponent.prototype.sortField;
    /**
     * @type {?}
     * @private
     */
    SearchListLayoutComponent.prototype.formlyUpdateComunicationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWxpc3QtbGF5b3V0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL2xheW91dHMvIiwic291cmNlcyI6WyJsaWIvZmVhdHVyZS9zZWFyY2gtbGlzdC1sYXlvdXQvc2VhcmNoLWxpc3QtbGF5b3V0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUN2QyxPQUFPLEVBQXVCLHVCQUF1QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDaEcsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFekU7SUFZRSxtQ0FBZ0MsK0JBQW1FO1FBQW5FLG9DQUErQixHQUEvQiwrQkFBK0IsQ0FBb0M7Ozs7UUF1Q25HLFNBQUksR0FBRztZQUNMLFVBQVUsRUFBRSxDQUFDO1lBQ2IsUUFBUSxFQUFFLEVBQUU7WUFDWixVQUFVLEVBQUUsQ0FBQztTQUNkLENBQUE7Ozs7UUF1QkQsUUFBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLGVBQWUsRUFBRSxDQUFDOzs7O1FBSzlCLFdBQU0sR0FBRyxFQUFFLEVBQUUsRUFBRSxrQkFBa0IsRUFBRSxDQUFDOzs7O1FBSzdCLHFCQUFnQixHQUFHLElBQUksZUFBZSxDQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7OztRQUtqRSxVQUFLLEdBQUcsRUFBRSxDQUFDOzs7O1FBS0osY0FBUyxHQUFHLEVBQUUsQ0FBQztJQXRGaUYsQ0FBQzs7OztJQW1CeEcsNENBQVE7OztJQUFSO1FBQUEsaUJBZUM7UUFkQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUM7UUFDckQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVM7OztRQUM3QjtZQUNFLEtBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDLEVBQ0YsQ0FBQztRQUNGLElBQUksSUFBSSxDQUFDLCtCQUErQixFQUFFO1lBQ3hDLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxZQUFZLENBQUMsU0FBUzs7OztZQUN6RCxVQUFDLE1BQU07Z0JBQ0wsS0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM1QixDQUFDLEVBQ0YsQ0FBQTtTQUNGO0lBQ0gsQ0FBQztJQVdEOzs7T0FHRzs7Ozs7O0lBQ0ksZ0RBQVk7Ozs7O0lBQW5CLFVBQW9CLE1BQVc7UUFDN0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0gsa0RBQWM7Ozs7SUFBZDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQTJCRDs7T0FFRzs7Ozs7O0lBQ0ssaURBQWE7Ozs7O0lBQXJCO1FBQUEsaUJBT0M7UUFOQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxTQUFTOzs7O1FBQ3ZHLFVBQUMsTUFBTTtZQUNMLEtBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUMxQixLQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzRSxDQUFDLEVBQ0YsQ0FBQztJQUNKLENBQUM7O2dCQTlHRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIscWdEQUFrRDs7aUJBRW5EOzs7O2dCQU5RLGtDQUFrQyx1QkFjNUIsUUFBUTs7O3dDQUZwQixZQUFZLFNBQUMsZUFBZTswQkFPNUIsS0FBSztnQ0FNTCxLQUFLOztJQXdGUixnQ0FBQztDQUFBLEFBL0dELElBK0dDO1NBMUdZLHlCQUF5Qjs7Ozs7O0lBS3BDLDBEQUF1RTs7Ozs7SUFPdkUsNENBQzZCOzs7OztJQUs3QixrREFDdUM7Ozs7OztJQUt2QywrQ0FBd0I7Ozs7O0lBc0J4Qix5Q0FJQzs7Ozs7SUF1QkQsd0NBQThCOzs7OztJQUs5QiwyQ0FBb0M7Ozs7O0lBS3BDLHFEQUFpRTs7Ozs7SUFLakUsMENBQVc7Ozs7O0lBS1gsOENBQXNCOzs7OztJQXRGVixvRUFBdUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIENvbnRlbnRDaGlsZCwgVGVtcGxhdGVSZWYsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgU2VhcmNoTGlzdEludGVyZmFjZSwgU2VhcmNoTGlzdENvbmZpZ3VyYXRpb24gfSBmcm9tICcuL21vZGVsL3NlYXJjaC1saXN0LWxheW91dC5tb2RlbCc7XG5pbXBvcnQgeyBTRFNGb3JtbHlVcGRhdGVDb211bmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnQGdzYS1zYW0vc2FtLWZvcm1seSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NlYXJjaC1saXN0LWxheW91dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWFyY2gtbGlzdC1sYXlvdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9zZWFyY2gtbGlzdC1sYXlvdXQuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBTZWFyY2hMaXN0TGF5b3V0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgKiBDaGlsZCBUZW1wbGF0ZSB0byBiZSB1c2VkIHRvIGRpc3BsYXkgdGhlIGRhdGEgZm9yIGVhY2ggaXRlbSBpbiB0aGUgbGlzdCBvZiBpdGVtc1xuICAqL1xuICBAQ29udGVudENoaWxkKCdyZXN1bHRDb250ZW50JykgcmVzdWx0Q29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHByaXZhdGUgZm9ybWx5VXBkYXRlQ29tdW5pY2F0aW9uU2VydmljZTogU0RTRm9ybWx5VXBkYXRlQ29tdW5pY2F0aW9uU2VydmljZSkgeyB9XG5cbiAgLyoqXG4gICAqIElucHV0IHNlcnZpY2UgdG8gYmUgY2FsbGVkIHdoZW4gaXRlbXMgY2hhbmdlXG4gICAqL1xuICBASW5wdXQoKVxuICBzZXJ2aWNlOiBTZWFyY2hMaXN0SW50ZXJmYWNlO1xuXG4gIC8qKlxuICAgKiBjb25maWd1cmF0aW9uXG4gICAqL1xuICBASW5wdXQoKVxuICBjb25maWd1cmF0aW9uOiBTZWFyY2hMaXN0Q29uZmlndXJhdGlvbjtcblxuICAvKipcbiAgICogRmlsdGVyIGluZm9ybWF0aW9uXG4gICAqL1xuICBwcml2YXRlIGZpbHRlckRhdGE6IGFueTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnBhZ2UucGFnZVNpemUgPSB0aGlzLmNvbmZpZ3VyYXRpb24ucGFnZVNpemU7XG4gICAgdGhpcy5zb3J0RmllbGQgPSB0aGlzLmNvbmZpZ3VyYXRpb24uZGVmYXVsdFNvcnRWYWx1ZTtcbiAgICB0aGlzLnBhZ2luYXRpb25DaGFuZ2Uuc3Vic2NyaWJlKFxuICAgICAgKCkgPT4ge1xuICAgICAgICB0aGlzLnVwZGF0ZUNvbnRlbnQoKTtcbiAgICAgIH1cbiAgICApO1xuICAgIGlmICh0aGlzLmZvcm1seVVwZGF0ZUNvbXVuaWNhdGlvblNlcnZpY2UpIHtcbiAgICAgIHRoaXMuZm9ybWx5VXBkYXRlQ29tdW5pY2F0aW9uU2VydmljZS5maWx0ZXJVcGRhdGUuc3Vic2NyaWJlKFxuICAgICAgICAoZmlsdGVyKSA9PiB7XG4gICAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoZmlsdGVyKTtcbiAgICAgICAgfVxuICAgICAgKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEZWZhdWx0IFBhZ2Ugc2V0dHRpbmdzXG4gICAqL1xuICBwYWdlID0ge1xuICAgIHBhZ2VOdW1iZXI6IDEsXG4gICAgcGFnZVNpemU6IDI1LFxuICAgIHRvdGFsUGFnZXM6IDBcbiAgfVxuXG4gIC8qKlxuICAgKiB1cGRhdGVzIHRoZSBmaWx0ZXIgYW5kIHNldCB0aGUgcGFnZSBudW1iZXIgdG8gMSBhbmQgY2FsbHMgaW1wb3J0ZWQgc2VydmljZVxuICAgKiBAcGFyYW0gZmlsdGVyIFxuICAgKi9cbiAgcHVibGljIHVwZGF0ZUZpbHRlcihmaWx0ZXI6IGFueSkge1xuICAgIHRoaXMuZmlsdGVyRGF0YSA9IGZpbHRlcjtcbiAgICB0aGlzLnBhZ2UucGFnZU51bWJlciA9IDE7XG4gICAgdGhpcy51cGRhdGVDb250ZW50KCk7XG4gIH1cblxuICAvKipcbiAgICogU29ydHkgYnkgY2hhbmdlIGV2ZW50XG4gICAqL1xuICBvblNlbGVjdENoYW5nZSgpIHtcbiAgICB0aGlzLnBhZ2UucGFnZU51bWJlciA9IDE7XG4gICAgdGhpcy51cGRhdGVDb250ZW50KCk7XG4gIH1cblxuICAvKipcbiAgICogSWQgb2YgdGhlIHRvcCBwYWdpbmF0aW9uIGNvbnRyb2xcbiAgICovXG4gIHRvcCA9IHsgaWQ6ICd0b3BQYWdpbmF0aW9uJyB9O1xuXG4gIC8qKlxuICAgKiBJZCBvZiB0aGUgYm90dG9tIHBhZ2luYXRpb24gY29udHJvbFxuICAgKi9cbiAgYm90dG9tID0geyBpZDogJ2JvdHRvbVBhZ2luYXRpb24nIH07XG5cbiAgLyoqXG4gICAqIFBhZ2UgZXZlbnQgbGlzdGVuZXJcbiAgICovXG4gIHB1YmxpYyBwYWdpbmF0aW9uQ2hhbmdlID0gbmV3IEJlaGF2aW9yU3ViamVjdDxvYmplY3Q+KHRoaXMucGFnZSk7XG5cbiAgLyoqXG4gICAqIExpc3Qgb2YgaXRlbXMgdG8gYmUgZGlzcGxheWVkXG4gICAqL1xuICBpdGVtcyA9IFtdO1xuXG4gIC8qKlxuICAgKiBzb3J0IHZhbHVlIFxuICAgKi9cbiAgcHVibGljIHNvcnRGaWVsZCA9ICcnO1xuXG4gIC8qKlxuICAgKiBjYWxscyBzZXJ2aWNlIHdoZW4gdXBkYXRlZFxuICAgKi9cbiAgcHJpdmF0ZSB1cGRhdGVDb250ZW50KCkge1xuICAgIHRoaXMuc2VydmljZS5nZXREYXRhKHsgJ3BhZ2UnOiB0aGlzLnBhZ2UsIHNvcnRGaWVsZDogdGhpcy5zb3J0RmllbGQsIGZpbHRlcjogdGhpcy5maWx0ZXJEYXRhIH0pLnN1YnNjcmliZShcbiAgICAgIChyZXN1bHQpID0+IHtcbiAgICAgICAgdGhpcy5pdGVtcyA9IHJlc3VsdC5pdGVtcztcbiAgICAgICAgdGhpcy5wYWdlLnRvdGFsUGFnZXMgPSBNYXRoLmNlaWwocmVzdWx0LnRvdGFsSXRlbXMgLyB0aGlzLnBhZ2UucGFnZVNpemUpO1xuICAgICAgfVxuICAgICk7XG4gIH1cbn1cbiJdfQ==