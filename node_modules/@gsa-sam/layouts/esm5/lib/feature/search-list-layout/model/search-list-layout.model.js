/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SearchParameters = /** @class */ (function () {
    function SearchParameters() {
    }
    return SearchParameters;
}());
export { SearchParameters };
if (false) {
    /**
     * page
     * @type {?}
     */
    SearchParameters.prototype.page;
    /**
     * Sort value
     * @type {?}
     */
    SearchParameters.prototype.sortField;
    /**
     * filter data
     * @type {?}
     */
    SearchParameters.prototype.filter;
}
/**
 * @record
 */
export function Page() { }
if (false) {
    /**
     * Page number
     * @type {?}
     */
    Page.prototype.pageNumber;
    /**
     * Page size
     * @type {?}
     */
    Page.prototype.pageSize;
    /**
     * Total number of pages
     * @type {?}
     */
    Page.prototype.totalPages;
}
var SearchResult = /** @class */ (function () {
    function SearchResult() {
    }
    return SearchResult;
}());
export { SearchResult };
if (false) {
    /**
     * Total number of items (beyond the page)
     * @type {?}
     */
    SearchResult.prototype.totalItems;
    /**
     * Items to be displayed
     * @type {?}
     */
    SearchResult.prototype.items;
}
/**
 * @record
 */
export function SearchListInterface() { }
if (false) {
    /**
     * Method to get the takes it takes in the SearchParameters and returns SearchResult object
     * @param {?} search
     * @return {?}
     */
    SearchListInterface.prototype.getData = function (search) { };
}
var sortItem = /** @class */ (function () {
    function sortItem() {
    }
    return sortItem;
}());
export { sortItem };
if (false) {
    /**
     * Text to be displayed
     * @type {?}
     */
    sortItem.prototype.text;
    /**
     * Value of Item
     * @type {?}
     */
    sortItem.prototype.value;
}
var SearchListConfiguration = /** @class */ (function () {
    function SearchListConfiguration() {
        /**
         * Starting page size
         */
        this.pageSize = 25;
    }
    return SearchListConfiguration;
}());
export { SearchListConfiguration };
if (false) {
    /**
     * List of sort by items
     * @type {?}
     */
    SearchListConfiguration.prototype.sortList;
    /**
     * default sort value
     * @type {?}
     */
    SearchListConfiguration.prototype.defaultSortValue;
    /**
     * Starting page size
     * @type {?}
     */
    SearchListConfiguration.prototype.pageSize;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWxpc3QtbGF5b3V0Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzYS1zYW0vbGF5b3V0cy8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlL3NlYXJjaC1saXN0LWxheW91dC9tb2RlbC9zZWFyY2gtbGlzdC1sYXlvdXQubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBO0lBQUE7SUFpQkEsQ0FBQztJQUFELHVCQUFDO0FBQUQsQ0FBQyxBQWpCRCxJQWlCQzs7Ozs7OztJQVpHLGdDQUFXOzs7OztJQUtYLHFDQUFpQjs7Ozs7SUFLakIsa0NBQVk7Ozs7O0FBSWhCLDBCQWlCQzs7Ozs7O0lBWkcsMEJBQW1COzs7OztJQUtuQix3QkFBaUI7Ozs7O0lBS2pCLDBCQUFtQjs7QUFJdkI7SUFBQTtJQVdBLENBQUM7SUFBRCxtQkFBQztBQUFELENBQUMsQUFYRCxJQVdDOzs7Ozs7O0lBTkcsa0NBQW1COzs7OztJQUtuQiw2QkFBYTs7Ozs7QUFLakIseUNBT0M7Ozs7Ozs7SUFERyw4REFBNEQ7O0FBR2hFO0lBQUE7SUFZQSxDQUFDO0lBQUQsZUFBQztBQUFELENBQUMsQUFaRCxJQVlDOzs7Ozs7O0lBUkcsd0JBQWE7Ozs7O0lBS2IseUJBQWM7O0FBS2xCO0lBQUE7Ozs7UUFlSSxhQUFRLEdBQVcsRUFBRSxDQUFDO0lBRTFCLENBQUM7SUFBRCw4QkFBQztBQUFELENBQUMsQUFqQkQsSUFpQkM7Ozs7Ozs7SUFaRywyQ0FBcUI7Ozs7O0lBS3JCLG1EQUF5Qjs7Ozs7SUFLekIsMkNBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGNsYXNzIFNlYXJjaFBhcmFtZXRlcnMge1xuXG4gICAgLyoqXG4gICAgICogcGFnZSAgXG4gICAgICovXG4gICAgcGFnZTogUGFnZTtcblxuICAgIC8qKlxuICAgICAqIFNvcnQgdmFsdWVcbiAgICAgKi9cbiAgICBzb3J0RmllbGQ6IHN0cmluZ1xuXG4gICAgLyoqXG4gICAgICogZmlsdGVyIGRhdGFcbiAgICAgKi9cbiAgICBmaWx0ZXI6IGFueTtcblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2Uge1xuXG4gICAgLyoqXG4gICAgICogUGFnZSBudW1iZXJcbiAgICAgKi9cbiAgICBwYWdlTnVtYmVyOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBQYWdlIHNpemVcbiAgICAgKi9cbiAgICBwYWdlU2l6ZTogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogVG90YWwgbnVtYmVyIG9mIHBhZ2VzXG4gICAgICovXG4gICAgdG90YWxQYWdlczogbnVtYmVyO1xuXG59XG5cbmV4cG9ydCBjbGFzcyBTZWFyY2hSZXN1bHQge1xuXG4gICAgLyoqXG4gICAgICogVG90YWwgbnVtYmVyIG9mIGl0ZW1zIChiZXlvbmQgdGhlIHBhZ2UpXG4gICAgICovXG4gICAgdG90YWxJdGVtczogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogSXRlbXMgdG8gYmUgZGlzcGxheWVkXG4gICAgICovXG4gICAgaXRlbXM6IGFueVtdO1xufVxuXG5cblxuZXhwb3J0IGludGVyZmFjZSBTZWFyY2hMaXN0SW50ZXJmYWNlIHtcblxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBnZXQgdGhlIHRha2VzIGl0IHRha2VzIGluIHRoZSBTZWFyY2hQYXJhbWV0ZXJzIGFuZCByZXR1cm5zIFNlYXJjaFJlc3VsdCBvYmplY3RcbiAgICAgKiBAcGFyYW0gc2VhcmNoIFxuICAgICAqL1xuICAgIGdldERhdGEoc2VhcmNoOiBTZWFyY2hQYXJhbWV0ZXJzKTogT2JzZXJ2YWJsZTxTZWFyY2hSZXN1bHQ+O1xufVxuXG5leHBvcnQgY2xhc3Mgc29ydEl0ZW0ge1xuICAgIC8qKlxuICAgICAqIFRleHQgdG8gYmUgZGlzcGxheWVkXG4gICAgICovXG4gICAgdGV4dDogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogVmFsdWUgb2YgSXRlbVxuICAgICAqL1xuICAgIHZhbHVlOiBzdHJpbmc7XG5cblxufVxuXG5leHBvcnQgY2xhc3MgU2VhcmNoTGlzdENvbmZpZ3VyYXRpb24ge1xuXG4gICAgLyoqXG4gICAgICogTGlzdCBvZiBzb3J0IGJ5IGl0ZW1zXG4gICAgICovXG4gICAgc29ydExpc3Q6IHNvcnRJdGVtW107XG5cbiAgICAvKipcbiAgICAgKiBkZWZhdWx0IHNvcnQgdmFsdWVcbiAgICAgKi9cbiAgICBkZWZhdWx0U29ydFZhbHVlOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBTdGFydGluZyBwYWdlIHNpemVcbiAgICAgKi9cbiAgICBwYWdlU2l6ZTogbnVtYmVyID0gMjU7XG5cbn0iXX0=