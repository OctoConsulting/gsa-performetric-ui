/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject, HostBinding, HostListener } from '@angular/core';
import { SDS_TRUNCATED_TEXT_DATA } from './truncates-text-base';
import { sdsTruncateTextAnimations } from './truncate-text-animations';
/**
 * @record
 */
export function SdsTruncateTextData() { }
if (false) {
    /** @type {?} */
    SdsTruncateTextData.prototype.text;
}
export class SdsTruncatedTextContainerComponent {
    /**
     * @param {?} data
     */
    constructor(data) {
        this.data = data;
        this._animationState = 'void';
    }
    /**
     * Starts the animation.
     * @return {?}
     */
    startAnimation() {
        this._animationState = 'enter';
    }
    /**
     * Resets the animation to its initial state.
     * @return {?}
     */
    resetAnimation() {
        this._animationState = 'void';
    }
    /**
     * Intentionally left empty to trigger change detection
     * @return {?}
     */
    _onAnimationDone() { }
}
SdsTruncatedTextContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-truncated-text-container',
                template: `
    <div class="sds-overlay maxw-mobile radius-overlay padding-2">{{ data.text }}</div>
  `,
                animations: [sdsTruncateTextAnimations.container]
            }] }
];
/** @nocollapse */
SdsTruncatedTextContainerComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [SDS_TRUNCATED_TEXT_DATA,] }] }
];
SdsTruncatedTextContainerComponent.propDecorators = {
    _animationState: [{ type: HostBinding, args: ['@container',] }],
    _onAnimationDone: [{ type: HostListener, args: ['@container.done',] }]
};
if (false) {
    /** @type {?} */
    SdsTruncatedTextContainerComponent.prototype._animationState;
    /** @type {?} */
    SdsTruncatedTextContainerComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1bmNhdGUtdGV4dC1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzYS1zYW0vY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi90cnVuY2F0ZS10ZXh0L3RydW5jYXRlLXRleHQtY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7OztBQUV2RSx5Q0FFQzs7O0lBREMsbUNBQWE7O0FBVWYsTUFBTSxPQUFPLGtDQUFrQzs7OztJQUc3QyxZQUFvRCxJQUF5QjtRQUF6QixTQUFJLEdBQUosSUFBSSxDQUFxQjtRQUZsRCxvQkFBZSxHQUFHLE1BQU0sQ0FBQztJQUU0QixDQUFDOzs7OztJQUdqRixjQUFjO1FBQ1osSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUM7SUFDakMsQ0FBQzs7Ozs7SUFHRCxjQUFjO1FBQ1osSUFBSSxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFJRCxnQkFBZ0IsS0FBSSxDQUFDOzs7WUF4QnRCLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsOEJBQThCO2dCQUN4QyxRQUFRLEVBQUU7O0dBRVQ7Z0JBQ0QsVUFBVSxFQUFFLENBQUMseUJBQXlCLENBQUMsU0FBUyxDQUFDO2FBQ2xEOzs7OzRDQUljLE1BQU0sU0FBQyx1QkFBdUI7Ozs4QkFGMUMsV0FBVyxTQUFDLFlBQVk7K0JBZXhCLFlBQVksU0FBQyxpQkFBaUI7Ozs7SUFmL0IsNkRBQW9EOztJQUV4QyxrREFBaUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU0RTX1RSVU5DQVRFRF9URVhUX0RBVEEgfSBmcm9tICcuL3RydW5jYXRlcy10ZXh0LWJhc2UnO1xuaW1wb3J0IHsgc2RzVHJ1bmNhdGVUZXh0QW5pbWF0aW9ucyB9IGZyb20gJy4vdHJ1bmNhdGUtdGV4dC1hbmltYXRpb25zJztcblxuZXhwb3J0IGludGVyZmFjZSBTZHNUcnVuY2F0ZVRleHREYXRhIHtcbiAgdGV4dDogc3RyaW5nO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzZHMtdHJ1bmNhdGVkLXRleHQtY29udGFpbmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwic2RzLW92ZXJsYXkgbWF4dy1tb2JpbGUgcmFkaXVzLW92ZXJsYXkgcGFkZGluZy0yXCI+e3sgZGF0YS50ZXh0IH19PC9kaXY+XG4gIGAsXG4gIGFuaW1hdGlvbnM6IFtzZHNUcnVuY2F0ZVRleHRBbmltYXRpb25zLmNvbnRhaW5lcl1cbn0pXG5leHBvcnQgY2xhc3MgU2RzVHJ1bmNhdGVkVGV4dENvbnRhaW5lckNvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZygnQGNvbnRhaW5lcicpIF9hbmltYXRpb25TdGF0ZSA9ICd2b2lkJztcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KFNEU19UUlVOQ0FURURfVEVYVF9EQVRBKSBwdWJsaWMgZGF0YTogU2RzVHJ1bmNhdGVUZXh0RGF0YSkge31cblxuICAvKiogU3RhcnRzIHRoZSBhbmltYXRpb24uICovXG4gIHN0YXJ0QW5pbWF0aW9uKCkge1xuICAgIHRoaXMuX2FuaW1hdGlvblN0YXRlID0gJ2VudGVyJztcbiAgfVxuXG4gIC8qKiBSZXNldHMgdGhlIGFuaW1hdGlvbiB0byBpdHMgaW5pdGlhbCBzdGF0ZS4gKi9cbiAgcmVzZXRBbmltYXRpb24oKSB7XG4gICAgdGhpcy5fYW5pbWF0aW9uU3RhdGUgPSAndm9pZCc7XG4gIH1cblxuICAvKiogSW50ZW50aW9uYWxseSBsZWZ0IGVtcHR5IHRvIHRyaWdnZXIgY2hhbmdlIGRldGVjdGlvbiAqL1xuICBASG9zdExpc3RlbmVyKCdAY29udGFpbmVyLmRvbmUnKVxuICBfb25BbmltYXRpb25Eb25lKCkge31cbn1cbiJdfQ==