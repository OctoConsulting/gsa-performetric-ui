/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SelectionMode } from '../../selected-result/models/sds-selected-item-model-helper';
export class SDSAutocompleteSearchConfiguration {
    /**
     * sets the default debounce time to 250 milliseconds
     */
    constructor() {
        /**
         * Mode of the model either allows a single item or multiple items
         */
        this.selectionMode = SelectionMode.SINGLE;
        /**
         * Allows option to allow user text not in the standard results
         */
        this.isFreeTextEnabled = false;
        /**
         * Text appeneded ad the end of free text
         */
        this.freeTextSubtext = 'search';
        /**
         * Focus into autocomplete search
         */
        this.focusInSearch = true;
        /**
         * The aria-label for the auto-complete
         */
        this.ariaLabelText = 'Auto Complete';
        /**
         * To enable the tag mode
         */
        this.isTagModeEnabled = false;
        /**
         * To make input readonly
         */
        this.inputReadOnly = false;
        this.debounceTime = 250;
        this.minimumCharacterCountSearch = 0;
    }
}
if (false) {
    /**
     * Used to describe the drop down (Text should match the label that will be supplied)
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.labelText;
    /**
     * Used for the Id of the control
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.id;
    /**
     *  This is the primary field used to identify each object in the results
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.primaryKeyField;
    /**
     *  Property from supplied model used for the top part of the basic template
     *  and the text for single selection
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.primaryTextField;
    /**
     *  Property from supplied model used for the bottom part of the basic template
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.secondaryTextField;
    /**
     *  Sets the time waited for addional key actions Default is 250 milliseconds
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.debounceTime;
    /**
     * Place holder text for autocomplete input
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.autocompletePlaceHolderText;
    /**
     * Mininumn Characters for search
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.minimumCharacterCountSearch;
    /**
     * Mode of the model either allows a single item or multiple items
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.selectionMode;
    /**
     * Allows option to allow user text not in the standard results
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.isFreeTextEnabled;
    /**
     * Text appeneded ad the end of free text
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.freeTextSubtext;
    /**
     * Focus into autocomplete search
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.focusInSearch;
    /**
     * The aria-label for the auto-complete
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.ariaLabelText;
    /**
     * To enable the tag mode
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.isTagModeEnabled;
    /**
     * To make input readonly
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.inputReadOnly;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU0RTQXV0b2NvbXBsZXRlQ29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvYXV0b2NvbXBsZXRlLXNlYXJjaC9tb2RlbHMvU0RTQXV0b2NvbXBsZXRlQ29uZmlndXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBRTVGLE1BQU0sT0FBTyxrQ0FBa0M7Ozs7SUFLN0M7Ozs7UUFpRE8sa0JBQWEsR0FBa0IsYUFBYSxDQUFDLE1BQU0sQ0FBQzs7OztRQUtwRCxzQkFBaUIsR0FBWSxLQUFLLENBQUM7Ozs7UUFLbkMsb0JBQWUsR0FBVyxRQUFRLENBQUM7Ozs7UUFLbkMsa0JBQWEsR0FBWSxJQUFJLENBQUM7Ozs7UUFLOUIsa0JBQWEsR0FBVyxlQUFlLENBQUM7Ozs7UUFLeEMscUJBQWdCLEdBQVcsS0FBSyxDQUFDOzs7O1FBS2pDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBOUUzQixJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQztRQUN4QixJQUFJLENBQUMsMkJBQTJCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0E4RUY7Ozs7OztJQXpFQyx1REFBeUI7Ozs7O0lBS3pCLGdEQUFrQjs7Ozs7SUFLbEIsNkRBQStCOzs7Ozs7SUFNL0IsOERBQWdDOzs7OztJQUtoQyxnRUFBa0M7Ozs7O0lBS2xDLDBEQUE0Qjs7Ozs7SUFLNUIseUVBQTJDOzs7OztJQUszQyx5RUFBMkM7Ozs7O0lBSzNDLDJEQUEyRDs7Ozs7SUFLM0QsK0RBQTBDOzs7OztJQUsxQyw2REFBMEM7Ozs7O0lBSzFDLDJEQUFxQzs7Ozs7SUFLckMsMkRBQStDOzs7OztJQUsvQyw4REFBd0M7Ozs7O0lBS3hDLDJEQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlbGVjdGlvbk1vZGUgfSBmcm9tICcuLi8uLi9zZWxlY3RlZC1yZXN1bHQvbW9kZWxzL3Nkcy1zZWxlY3RlZC1pdGVtLW1vZGVsLWhlbHBlcic7XG5cbmV4cG9ydCBjbGFzcyBTRFNBdXRvY29tcGxldGVTZWFyY2hDb25maWd1cmF0aW9uIHtcblxuICAvKipcbiAgICogc2V0cyB0aGUgZGVmYXVsdCBkZWJvdW5jZSB0aW1lIHRvIDI1MCBtaWxsaXNlY29uZHMgXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmRlYm91bmNlVGltZSA9IDI1MDtcbiAgICB0aGlzLm1pbmltdW1DaGFyYWN0ZXJDb3VudFNlYXJjaCA9IDA7XG4gIH1cblxuICAvKipcbiAgICogVXNlZCB0byBkZXNjcmliZSB0aGUgZHJvcCBkb3duIChUZXh0IHNob3VsZCBtYXRjaCB0aGUgbGFiZWwgdGhhdCB3aWxsIGJlIHN1cHBsaWVkKVxuICAgKi9cbiAgcHVibGljIGxhYmVsVGV4dDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBVc2VkIGZvciB0aGUgSWQgb2YgdGhlIGNvbnRyb2xcbiAgICovXG4gIHB1YmxpYyBpZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiAgVGhpcyBpcyB0aGUgcHJpbWFyeSBmaWVsZCB1c2VkIHRvIGlkZW50aWZ5IGVhY2ggb2JqZWN0IGluIHRoZSByZXN1bHRzXG4gICAqL1xuICBwdWJsaWMgcHJpbWFyeUtleUZpZWxkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqICBQcm9wZXJ0eSBmcm9tIHN1cHBsaWVkIG1vZGVsIHVzZWQgZm9yIHRoZSB0b3AgcGFydCBvZiB0aGUgYmFzaWMgdGVtcGxhdGUgXG4gICAqICBhbmQgdGhlIHRleHQgZm9yIHNpbmdsZSBzZWxlY3Rpb25cbiAgICovXG4gIHB1YmxpYyBwcmltYXJ5VGV4dEZpZWxkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqICBQcm9wZXJ0eSBmcm9tIHN1cHBsaWVkIG1vZGVsIHVzZWQgZm9yIHRoZSBib3R0b20gcGFydCBvZiB0aGUgYmFzaWMgdGVtcGxhdGVcbiAgICovXG4gIHB1YmxpYyBzZWNvbmRhcnlUZXh0RmllbGQ6IHN0cmluZztcblxuICAvKipcbiAgICogIFNldHMgdGhlIHRpbWUgd2FpdGVkIGZvciBhZGRpb25hbCBrZXkgYWN0aW9ucyBEZWZhdWx0IGlzIDI1MCBtaWxsaXNlY29uZHNcbiAgICovXG4gIHB1YmxpYyBkZWJvdW5jZVRpbWU6IG51bWJlcjtcblxuICAvKipcbiAgICogUGxhY2UgaG9sZGVyIHRleHQgZm9yIGF1dG9jb21wbGV0ZSBpbnB1dFxuICAgKi9cbiAgcHVibGljIGF1dG9jb21wbGV0ZVBsYWNlSG9sZGVyVGV4dDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBNaW5pbnVtbiBDaGFyYWN0ZXJzIGZvciBzZWFyY2hcbiAgICovXG4gIHB1YmxpYyBtaW5pbXVtQ2hhcmFjdGVyQ291bnRTZWFyY2g6IG51bWJlcjtcblxuICAvKipcbiAgICogTW9kZSBvZiB0aGUgbW9kZWwgZWl0aGVyIGFsbG93cyBhIHNpbmdsZSBpdGVtIG9yIG11bHRpcGxlIGl0ZW1zXG4gICAqL1xuICBwdWJsaWMgc2VsZWN0aW9uTW9kZTogU2VsZWN0aW9uTW9kZSA9IFNlbGVjdGlvbk1vZGUuU0lOR0xFO1xuXG4gIC8qKlxuICAgKiBBbGxvd3Mgb3B0aW9uIHRvIGFsbG93IHVzZXIgdGV4dCBub3QgaW4gdGhlIHN0YW5kYXJkIHJlc3VsdHNcbiAgICovXG4gIHB1YmxpYyBpc0ZyZWVUZXh0RW5hYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBUZXh0IGFwcGVuZWRlZCBhZCB0aGUgZW5kIG9mIGZyZWUgdGV4dFxuICAgKi9cbiAgcHVibGljIGZyZWVUZXh0U3VidGV4dDogc3RyaW5nID0gJ3NlYXJjaCc7XG5cbiAgLyoqXG4gICAqIEZvY3VzIGludG8gYXV0b2NvbXBsZXRlIHNlYXJjaFxuICAgKi9cbiAgcHVibGljIGZvY3VzSW5TZWFyY2g6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBUaGUgYXJpYS1sYWJlbCBmb3IgdGhlIGF1dG8tY29tcGxldGVcbiAgICovXG4gIHB1YmxpYyBhcmlhTGFiZWxUZXh0OiBzdHJpbmcgPSAnQXV0byBDb21wbGV0ZSc7XG5cbiAgLyoqXG4gICAqIFRvIGVuYWJsZSB0aGUgdGFnIG1vZGVcbiAgICovXG4gIHB1YmxpYyBpc1RhZ01vZGVFbmFibGVkOiBib29sZWFuID1mYWxzZTtcblxuICAgIC8qKlxuICAgKiBUbyBtYWtlIGlucHV0IHJlYWRvbmx5XG4gICAqL1xuICBwdWJsaWMgaW5wdXRSZWFkT25seSA9IGZhbHNlO1xuXG59XG4iXX0=