/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';
export class SDSTabOutsideDirective {
    /**
     * @param {?} _elementRef
     */
    constructor(_elementRef) {
        this._elementRef = _elementRef;
        /**
         * Emitter for tabOutside event
         */
        this.tabOutside = new EventEmitter();
    }
    /**
     * @param {?} target
     * @return {?}
     */
    hasFocusChanged(target) {
        /** @type {?} */
        const isInsideHost = this._elementRef.nativeElement.contains(target);
        if (!isInsideHost) {
            this.tabOutside.emit(undefined);
        }
    }
}
SDSTabOutsideDirective.decorators = [
    { type: Directive, args: [{
                selector: '[sds-tab-outside]'
            },] }
];
/** @nocollapse */
SDSTabOutsideDirective.ctorParameters = () => [
    { type: ElementRef }
];
SDSTabOutsideDirective.propDecorators = {
    tabOutside: [{ type: Output }],
    hasFocusChanged: [{ type: HostListener, args: ['document:keyup', ['$event.target'],] }]
};
if (false) {
    /**
     * Emitter for tabOutside event
     * @type {?}
     */
    SDSTabOutsideDirective.prototype.tabOutside;
    /**
     * @type {?}
     * @private
     */
    SDSTabOutsideDirective.prototype._elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFib3V0c2lkZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NhLXNhbS9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL3RhYi1vdXRzaWRlL3RhYm91dHNpZGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQzdCLFlBQVksRUFBRSxZQUFZLEVBQzNCLE1BQU0sZUFBZSxDQUFDO0FBTXZCLE1BQU0sT0FBTyxzQkFBc0I7Ozs7SUFNakMsWUFBb0IsV0FBdUI7UUFBdkIsZ0JBQVcsR0FBWCxXQUFXLENBQVk7Ozs7UUFGakMsZUFBVSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWQsQ0FBQzs7Ozs7SUFHekMsZUFBZSxDQUFDLE1BQU07O2NBQ3JCLFlBQVksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ3BFLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDakM7SUFDSCxDQUFDOzs7WUFqQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7YUFDOUI7Ozs7WUFQWSxVQUFVOzs7eUJBWXBCLE1BQU07OEJBSU4sWUFBWSxTQUFDLGdCQUFnQixFQUFFLENBQUMsZUFBZSxDQUFDOzs7Ozs7O0lBSmpELDRDQUE2RDs7Ozs7SUFFakQsNkNBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tzZHMtdGFiLW91dHNpZGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBTRFNUYWJPdXRzaWRlRGlyZWN0aXZlIHtcbiAgLyoqXG4gICAqIEVtaXR0ZXIgZm9yIHRhYk91dHNpZGUgZXZlbnRcbiAgICovXG4gIEBPdXRwdXQoKSB0YWJPdXRzaWRlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7IH1cblxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXl1cCcsIFsnJGV2ZW50LnRhcmdldCddKVxuICBwdWJsaWMgaGFzRm9jdXNDaGFuZ2VkKHRhcmdldCkge1xuICAgIGNvbnN0IGlzSW5zaWRlSG9zdCA9IHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jb250YWlucyh0YXJnZXQpO1xuICAgIGlmICghaXNJbnNpZGVIb3N0KSB7XG4gICAgICB0aGlzLnRhYk91dHNpZGUuZW1pdCh1bmRlZmluZWQpO1xuICAgIH1cbiAgfVxufVxuIl19