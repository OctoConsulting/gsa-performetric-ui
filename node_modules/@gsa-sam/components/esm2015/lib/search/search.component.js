/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ElementRef, Input, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { FocusMonitor } from '@angular/cdk/a11y';
import { ViewportRuler } from '@angular/cdk/overlay';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class SearchSettings {
    constructor() {
        this.placeholder = 'Search';
        this.dropdown = {
            placeholder: '-Select-',
            options: [],
            inverse: false
        };
    }
}
if (false) {
    /** @type {?} */
    SearchSettings.prototype.placeholder;
    /** @type {?} */
    SearchSettings.prototype.size;
    /** @type {?} */
    SearchSettings.prototype.dropdown;
}
export class SdsSearchComponent {
    /**
     * @param {?} cd
     * @param {?} focusMonitor
     * @param {?} viewportRuler
     */
    constructor(cd, focusMonitor, viewportRuler) {
        this.cd = cd;
        this.focusMonitor = focusMonitor;
        this.viewportRuler = viewportRuler;
        this.searchSettings = new SearchSettings();
        this.model = {};
        this.inputState = {
            initial: { visible: undefined },
            visible: undefined
        };
        this._onChange = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => { });
        this._onTouched = (/**
         * @return {?}
         */
        () => { });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.inputState.initial.visible = this.isInputVisible();
        this.inputState.visible = this.inputState.initial.visible;
        this.viewportRuler.change(0).subscribe((/**
         * @return {?}
         */
        () => {
            this.inputState.initial.visible = this.isInputVisible();
            this.inputState.visible = this.inputState.initial.visible;
        }));
    }
    /**
     * @return {?}
     */
    hasDropdown() {
        if (this.searchSettings &&
            this.searchSettings.dropdown &&
            this.searchSettings.dropdown.options &&
            this.searchSettings.dropdown.options.length) {
            return true;
        }
        else {
            return false;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleClick(event) {
        event.preventDefault();
        if (!this.inputState.visible) {
            this.setInputVisibleStyles();
            this.focusMonitor.focusVia(this.inputEl, 'program');
        }
        else if (this.inputEl.nativeElement.value || this.selectEl.nativeElement.value) {
            this.model.searchText = this.inputEl.nativeElement.value;
            if (this.selectEl && this.selectEl.nativeElement.value) {
                this.model.searchCatergory = this.selectEl.nativeElement.value;
            }
            this._onChange(this.model);
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (value && this.model !== value) {
            this.model = value;
            this.cd.markForCheck();
        }
        else {
            this.model = {};
            this.cd.markForCheck();
        }
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this._onChange = fn;
    }
    /**
     * @return {?}
     */
    isInputVisible() {
        return this.inputEl.nativeElement.getBoundingClientRect().width
            ? true
            : false;
    }
    /**
     * @return {?}
     */
    setInputVisibleStyles() {
        /** @type {?} */
        const inputWidth = this.calculateInputWidth();
        this.inputEl.nativeElement.style.display = 'block';
        this.inputEl.nativeElement.style.position = 'absolute';
        this.inputEl.nativeElement.style.left = `-${inputWidth}px`;
        this.inputEl.nativeElement.style.width = `${inputWidth}px`;
        this.inputState.visible = true;
    }
    /**
     * @return {?}
     */
    removeInputVisibleStyles() {
        this.inputEl.nativeElement.style.display = '';
        this.inputEl.nativeElement.style.position = '';
        this.inputEl.nativeElement.style.left = '';
        this.inputEl.nativeElement.style.width = '';
        this.inputState.visible = false;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    focusChange(event) {
        if (event === null && !this.inputState.initial.visible) {
            this.removeInputVisibleStyles();
        }
    }
    /**
     * @return {?}
     */
    calculateInputWidth() {
        /** @type {?} */
        const buttonElement = this.buttonEl.nativeElement;
        /** @type {?} */
        const inputElement = this.inputEl.nativeElement;
        /** @type {?} */
        const rightPosition = buttonElement.getBoundingClientRect().left;
        /** @type {?} */
        const leftPosition = this.parentSelector
            ? inputElement.closest(this.parentSelector).getBoundingClientRect().left
            : 0;
        return Math.floor(rightPosition - leftPosition);
    }
    /**
     * @return {?}
     */
    getClass() {
        /** @type {?} */
        const cls = this.searchSettings && this.searchSettings.size === 'large'
            ? 'usa-search--big'
            : 'usa-search--small';
        return this.searchSettings.dropdown && this.searchSettings.dropdown.inverse
            ? `${cls} sds-inverse`
            : cls;
    }
}
SdsSearchComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-search',
                template: "<form class=\"usa-form usa-search\" [ngClass]=\"getClass()\" role=\"search\">\n  <label class=\"usa-sr-only\" for=\"options\">Dropdown label</label>\n  <select *ngIf=\"hasDropdown()\" [value]=\"model.searchCategory? model.searchCategory :''\" #selectEl name=\"search options\"\n    class=\"usa-select\" id=\"search-options\">\n    <option [value]=\"\"> {{searchSettings.dropdown.placeholder ? searchSettings.dropdown.placeholder : '-Select-'}}</option>\n    <ng-container *ngFor=\"let item of searchSettings.dropdown.options\">\n      <optgroup *ngIf=\"item.group\" label=\"{{item.label}}\">\n        <option *ngFor=\"let child of item.group\" [value]=\"child.value\" [selected]=\"model.searchCategory == child.value\"\n          [disabled]=\"child.disabled\">\n          {{ child.label }}\n        </option>\n      </optgroup>\n      <option *ngIf=\"!item.group\" [value]=\"item.value\" [selected]=\"model.searchCategory == item.value\" [disabled]=\"item.disabled\">{{\n        item.label }}</option>\n    </ng-container>\n  </select>\n  <ng-container *ngIf=\"(searchSettings.dropdown && searchSettings.dropdown.inverse); then inverseTemplate else inputTemplate\">\n  </ng-container>\n</form>\n\n<ng-template #inputTemplate> <label class=\"usa-sr-only\" for=\"search-field\">Search</label>\n  <input #inputEl [value]=\"model.searchText? model.searchText :''\" [ngClass]=\"inputClass\" id=\"search-field\" type=\"search\" class=\"usa-input\"\n    name=\"search\" [placeholder]=\"searchSettings.placeholder? searchSettings.placeholder : 'type here'\" />\n  <button class=\"usa-button\" type=\"submit\"  (click)=\"handleClick($event)\">\n    <span class=\"usa-sr-only\">Search</span>\n  </button>\n</ng-template>\n<ng-template #inverseTemplate>\n  <div class=\"sds-inverse__search\">\n    <ng-container [ngTemplateOutlet]=\"inputTemplate\"></ng-container>\n  </div>\n</ng-template>",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => SdsSearchComponent)),
                        multi: true
                    }
                ],
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
SdsSearchComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: FocusMonitor },
    { type: ViewportRuler }
];
SdsSearchComponent.propDecorators = {
    inputEl: [{ type: ViewChild, args: ['inputEl', { read: ElementRef },] }],
    selectEl: [{ type: ViewChild, args: ['selectEl', { read: ElementRef },] }],
    buttonEl: [{ type: ViewChild, args: ['buttonEl', { read: ElementRef },] }],
    inputClass: [{ type: Input }],
    parentSelector: [{ type: Input }],
    searchSettings: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SdsSearchComponent.prototype.inputEl;
    /** @type {?} */
    SdsSearchComponent.prototype.selectEl;
    /** @type {?} */
    SdsSearchComponent.prototype.buttonEl;
    /** @type {?} */
    SdsSearchComponent.prototype.inputClass;
    /** @type {?} */
    SdsSearchComponent.prototype.parentSelector;
    /** @type {?} */
    SdsSearchComponent.prototype.searchSettings;
    /** @type {?} */
    SdsSearchComponent.prototype.model;
    /** @type {?} */
    SdsSearchComponent.prototype.inputState;
    /**
     * @type {?}
     * @private
     */
    SdsSearchComponent.prototype._onChange;
    /**
     * @type {?}
     * @private
     */
    SdsSearchComponent.prototype._onTouched;
    /**
     * @type {?}
     * @private
     */
    SdsSearchComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    SdsSearchComponent.prototype.focusMonitor;
    /**
     * @type {?}
     * @private
     */
    SdsSearchComponent.prototype.viewportRuler;
}
//# sourceMappingURL=data:application/json;base64,