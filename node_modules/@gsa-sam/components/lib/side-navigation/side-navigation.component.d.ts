import { EventEmitter, TemplateRef } from '@angular/core';
import { SideNavigationModel, NavigationLink } from './model/side-navigation-model';
import { INavigationLink } from '../common-navigation/common-navigation-model';
import { NavigationHelper } from '../common-navigation/navigation-helper';
export declare class SdsSideNavigationComponent {
    /**
     * Reference to the the Template used for internal links
     */
    private sideNavRouteLinkTemplate;
    /**
     * Reference to the the Template used for side menu items that are a label
     */
    private sideNavLabelLinkTemplate;
    /**
     * Reference to the the Template used for external href
     */
    private sideNavHREFLinkTemplate;
    /**
     * Reference to the the Template used for event response
     */
    private sideNavEVENTLinkTemplate;
    /**
     * Takes the navigation item and returns the template to be used
     * @param item navigation item
     */
    getItemTemplate(item: NavigationLink): TemplateRef<any>;
    /**
     * Navigation helper
     */
    navigationHelper: NavigationHelper;
    /**
     * Model used for the different display portions of the side navigation
     */
    model: SideNavigationModel;
    /**
     * Selects new item and parents and deselects previous
     * @param id
     */
    select(id: string): void;
    /**
     * Selects item if matches passed in id and will select parent
     * @param id
     * @param item
     * @param parent
     */
    private selectItem;
    /**
     * Deselects all the items in the side navigation model
     */
    deselect(): void;
    /**
     * checks if item is selected and if selcted will check children and will unselect
     */
    private deselectItem;
    /**
     * event for event based
     */
    linkEvent: EventEmitter<INavigationLink>;
    /**
     * Link clicked and emits the link data into an event
     * @param link
     */
    linkClickEvent(link: INavigationLink): boolean;
    /**
     * creates url from provided route and query params
     * @param item
     */
    urlBuilder(item: NavigationLink): string;
    /**
     * creates query string
     * @param item
     */
    private queryStringBuilder;
}
