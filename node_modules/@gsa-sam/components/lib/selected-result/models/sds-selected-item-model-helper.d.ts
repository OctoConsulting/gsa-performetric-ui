export declare class SDSSelectedItemModelHelper {
    /**
      *  adds an item to the collection
      * if selected mode is single it removes any existing items
      * also checks to see if that item already exists
      * keyfield is used to determine uniqueness of the item added
      * @param itemToAdd
      * @param keyField
      * @param selectionMode
      * @param items
      */
    static addItem(itemToAdd: object, keyField: string, selectionMode: SelectionMode, items: object[]): void;
    /**
     * adds an array of items to the list and will not add duplicate items
     * keyfield is used to determine uniqueness of the item added
     * @param toAddItems
     * @param keyField
     * @param selectionMode
     * @param items
     */
    static addItems(toAddItems: object[], keyField: string, selectionMode: SelectionMode, items: object[]): void;
    /**
     * removes the item from the list
     * keyfield is used to determine uniqueness of the item added
     * @param item
     * @param keyField
     * @param items
     */
    static removeItem(item: object, keyField: string, items: object[]): void;
    /**
     * checks to see if a particular item exists by the provied key
     * keyfield is used to determine uniqueness of the item added
     * @param key
     * @param keyField
     * @param items
     */
    static contatinsItem(key: string, keyField: string, items: object[]): boolean;
    /**
     * Clears the list of items
     * @param items
     */
    static clearItems(items: object[]): void;
    /**
     * updates an array of items to the list and will not add duplicate items
     * keyfield is used to determine uniqueness of the item added
     * @param selectedItems
     * @param keyField
     * @param selectionMode
     * @param items
     */
    static replaceItems(selectedItems: object[], keyField: string, selectionMode: SelectionMode, items: object[]): void;
}
export declare enum SelectionMode {
    SINGLE = 0,
    MULTIPLE = 1
}
