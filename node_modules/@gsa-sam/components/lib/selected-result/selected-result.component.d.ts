import { TemplateRef } from '@angular/core';
import { SDSSelectedItemModel } from './models/sds-selectedItem.model';
import { SDSSelectedResultConfiguration } from './models/SDSSelectedResultConfiguration';
import { ControlValueAccessor } from '@angular/forms';
export declare class SDSSelectedResultComponent implements ControlValueAccessor {
    /**
    * Allow to insert a customized template for suggestions to use
    */
    itemTemplate: TemplateRef<any>;
    /**
     * The data model that has the selected item
     */
    model: SDSSelectedItemModel;
    /**
    * Configuration for the Selected Results control
    */
    configuration: SDSSelectedResultConfiguration;
    /**
     * Stored Event for ControlValueAccessor
     */
    onTouchedCallback: () => void;
    /**
     * Stored Event for ControlValueAccessor
     */
    propogateChange: (_: any) => void;
    disabled: boolean;
    /**
     * Removes item from the model
     * @param item
     */
    removeItem(item: object): void;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    /**
     * Gets the string value from the specifed properties of an object
     * @param object
     * @param propertyFields comma seperated list with periods depth of object
     */
    getObjectValue(object: Object, propertyFields: string): string;
}
