import { ElementRef, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { FocusMonitor } from '@angular/cdk/a11y';
import { ViewportRuler } from '@angular/cdk/overlay';
import { ControlValueAccessor } from '@angular/forms';
export declare class SearchSettings {
    placeholder: string;
    size: string;
    dropdown: any;
}
export declare class SdsSearchComponent implements AfterViewInit, ControlValueAccessor {
    private cd;
    private focusMonitor;
    private viewportRuler;
    inputEl: ElementRef;
    selectEl: ElementRef;
    buttonEl: ElementRef;
    inputClass: string;
    parentSelector: string;
    searchSettings: SearchSettings;
    model: any;
    inputState: {
        initial: {
            visible: any;
        };
        visible: any;
    };
    private _onChange;
    private _onTouched;
    constructor(cd: ChangeDetectorRef, focusMonitor: FocusMonitor, viewportRuler: ViewportRuler);
    ngAfterViewInit(): void;
    hasDropdown(): boolean;
    handleClick(event: any): void;
    writeValue(value: any): void;
    registerOnTouched(fn: any): void;
    registerOnChange(fn: any): void;
    isInputVisible(): boolean;
    setInputVisibleStyles(): void;
    removeInputVisibleStyles(): void;
    focusChange(event: any): void;
    calculateInputWidth(): number;
    getClass(): string;
}
