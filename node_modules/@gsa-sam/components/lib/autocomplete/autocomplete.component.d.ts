import { TemplateRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { SDSSelectedItemModel } from '../selected-result/models/sds-selectedItem.model';
import { SDSAutocompleteServiceInterface } from '../autocomplete-search/models/SDSAutocompleteServiceInterface';
import { SDSAutocompletelConfiguration } from './models/SDSAutocompletelConfiguration.model';
export declare class SDSAutocompleteComponent implements ControlValueAccessor {
    private cd;
    /**
     * Allow to insert a customized template for suggestions results
     */
    suggestionTemplate: TemplateRef<any>;
    /**
     * Allow to insert a customized template for selected items
     */
    selectedItemTemplate: TemplateRef<any>;
    /**
     * The data model that has the selected item
     */
    model: SDSSelectedItemModel;
    disabled: boolean;
    /**
     * Configuration for the control
     */
    configuration: SDSAutocompletelConfiguration;
    /**
     * Instance of the SamHiercarchicalServiceInterface provided
     */
    service: SDSAutocompleteServiceInterface;
    constructor(cd: ChangeDetectorRef);
    /**
     * Stored Event for ControlValueAccessor
     */
    onTouched: () => void;
    /**
     * Stored Event for ControlValueAccessor
     */
    onChange: (_: any) => void;
    writeValue(value: any): void;
    updateItems($event: any): void;
    updateModel(): void;
    getModel(): object[];
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    isSingleMode(): boolean;
}
