import { ElementRef, OnInit, OnDestroy, AfterViewInit, Injector, ViewContainerRef } from '@angular/core';
import { ViewportRuler, Overlay } from '@angular/cdk/overlay';
import { Subscription } from 'rxjs';
export declare class SdsTruncateTextByLineDirective implements OnInit, OnDestroy, AfterViewInit {
    private _overlay;
    private _injector;
    private _element;
    private _viewportRuler;
    private _viewContainerRef;
    /** Maximum lines of text limit */
    textLinesLimit: any;
    private _textLinesLimit;
    /** PortalOutlet */
    private _overlayRef;
    /** Holds subscription to stream of overlay closing events */
    private _closingActionsSubscription;
    /** Holds initial text */
    private initialText;
    /** Subscription to window resize stream */
    windowResize$: Subscription;
    /** Approximated character width of the host text */
    private approximatedCharacterWidth;
    constructor(_overlay: Overlay, _injector: Injector, _element: ElementRef, _viewportRuler: ViewportRuler, _viewContainerRef: ViewContainerRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /** Configures and creates the CDK overlay */
    private _createOverlay;
    /** Attach a ComponentPortal to the overlay **/
    private _attachContainer;
    /** Returns a stream that emits whenever an action that should close the overlay occurs. */
    private _overlayClosingActions;
    /** Width of host element */
    private _getHostWidth;
    /** Approximated number of characters that are visible in the container */
    private _getVisibleCharacters;
    private _isNotLongEnough;
    openOverlay(): void;
    updateUI(): void;
    closeOverlay(): void;
}
