import { FocusMonitor, FocusableOption, FocusOrigin } from "@angular/cdk/a11y";
import { ChangeDetectorRef, ElementRef, OnDestroy } from "@angular/core";
import { SdsAccordionItemComponent } from "./accordion-item.component";
export declare class SdsAccordionItemHeaderComponent implements OnDestroy, FocusableOption {
    accordionItem: SdsAccordionItemComponent;
    private _element;
    private _focusMonitor;
    private _changeDetectorRef;
    private _parentChangeSubscription;
    constructor(accordionItem: SdsAccordionItemComponent, _element: ElementRef, _focusMonitor: FocusMonitor, _changeDetectorRef: ChangeDetectorRef);
    /**
     * Whether the associated accordion item is disabled.
     * Implemented as a part of `FocusableOption`.
     */
    readonly disabled: any;
    /** Toggles the expanded state of the accordion item. */
    _toggle(): void;
    /** Gets whether the accordion item is expanded. */
    _isExpanded(): boolean;
    /** Gets the accordion item id. */
    _getAccordionItemId(): string;
    /** Handle keydown event calling to toggle() if appropriate. */
    _keydown(event: KeyboardEvent): void;
    /**
     * Focuses the item header. Implemented as a part of `FocusableOption`.
     * @param origin Origin of the action that triggered the focus.
     * @docs-private
     */
    focus(origin?: FocusOrigin): void;
    ngOnDestroy(): void;
}
