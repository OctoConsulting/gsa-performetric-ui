{"version":3,"file":"gsa-sam-components.js.map","sources":["ng://@gsa-sam/components/lib/accordion/accordion-base.ts","ng://@gsa-sam/components/lib/accordion/accordion-animations.ts","ng://@gsa-sam/components/lib/accordion/accordion-item-content.directive.ts","ng://@gsa-sam/components/lib/accordion/accordion-item.component.ts","ng://@gsa-sam/components/lib/accordion/accordion-item-header.component.ts","ng://@gsa-sam/components/lib/accordion/accordion.directive.ts","ng://@gsa-sam/components/lib/accordion/accordion.module.ts","ng://@gsa-sam/components/lib/page/page.component.ts","ng://@gsa-sam/components/lib/page/page.module.ts","ng://@gsa-sam/components/lib/toolbar/toolbar-animations.ts","ng://@gsa-sam/components/lib/toolbar/toolbar.component.ts","ng://@gsa-sam/components/lib/toolbar/toolbar-header.component.ts","ng://@gsa-sam/components/lib/toolbar/toolbar-expand.directive.ts","ng://@gsa-sam/components/lib/toolbar/toolbar.module.ts","ng://@gsa-sam/components/lib/common-navigation/common-navigation-model.ts","ng://@gsa-sam/components/lib/common-navigation/navigation-helper.ts","ng://@gsa-sam/components/lib/header/header.component.ts","ng://@gsa-sam/components/lib/top-banner/top-banner.component.ts","ng://@gsa-sam/components/lib/header/header.module.ts","ng://@gsa-sam/components/lib/footer/model/FooterModel.ts","ng://@gsa-sam/components/lib/footer/footer.component.ts","ng://@gsa-sam/components/lib/collapse/collapse.directive.ts","ng://@gsa-sam/components/lib/collapse/collapse.module.ts","ng://@gsa-sam/components/lib/footer/footer.module.ts","ng://@gsa-sam/components/lib/pagination/model/paginationModel.ts","ng://@gsa-sam/components/lib/pagination/pagination.component.ts","ng://@gsa-sam/components/lib/pagination/pagination.module.ts","ng://@gsa-sam/components/lib/selected-result/models/sds-selectedItem.model.ts","ng://@gsa-sam/components/lib/selected-result/models/sds-selected-item-model-helper.ts","ng://@gsa-sam/components/lib/autocomplete/models/SDSAutocompletelConfiguration.model.ts","ng://@gsa-sam/components/lib/autocomplete/autocomplete.component.ts","ng://@gsa-sam/components/lib/selected-result/models/SDSSelectedResultConfiguration.ts","ng://@gsa-sam/components/lib/selected-result/selected-result.component.ts","ng://@gsa-sam/components/lib/selected-result/selected-result.module.ts","ng://@gsa-sam/components/lib/key-helper/key-helper.ts","ng://@gsa-sam/components/lib/autocomplete-search/autocomplete-search.component.ts","ng://@gsa-sam/components/lib/click-outside/click-outside.directive.ts","ng://@gsa-sam/components/lib/click-outside/click-outside.module.ts","ng://@gsa-sam/components/lib/tab-outside/taboutside.directive.ts","ng://@gsa-sam/components/lib/tab-outside/taboutside.module.ts","ng://@gsa-sam/components/lib/autocomplete-search/autocomplete-search.module.ts","ng://@gsa-sam/components/lib/autocomplete/autocomplete.module.ts","ng://@gsa-sam/components/lib/autocomplete-search/models/SDSAutocompleteServiceInterface.ts","ng://@gsa-sam/components/lib/side-navigation/model/side-navigation-model.ts","ng://@gsa-sam/components/lib/side-navigation/side-navigation.component.ts","ng://@gsa-sam/components/lib/side-navigation/side-navigation.module.ts","ng://@gsa-sam/components/lib/search-result-list/search-result-list.component.ts","ng://@gsa-sam/components/lib/search-result-list/search-result-list.module.ts","ng://@gsa-sam/components/lib/header/model/HeaderModel.ts","ng://@gsa-sam/components/lib/menu/menu-animations.ts","ng://@gsa-sam/components/lib/menu/menu.component.ts","ng://@gsa-sam/components/lib/menu/menu-header.component.ts","ng://@gsa-sam/components/lib/menu/menu-item.component.ts","ng://@gsa-sam/components/lib/menu/menu-trigger.directive.ts","ng://@gsa-sam/components/lib/menu/menu.module.ts","ng://@gsa-sam/components/lib/search/search.component.ts","ng://@gsa-sam/components/lib/search/search.module.ts","ng://@gsa-sam/components/lib/observers/observe-width.directive.ts","ng://@gsa-sam/components/lib/observers/observer.module.ts","ng://@gsa-sam/components/lib/truncate-text/truncates-text-base.ts","ng://@gsa-sam/components/lib/truncate-text/truncate-text-animations.ts","ng://@gsa-sam/components/lib/truncate-text/truncate-text-container.component.ts","ng://@gsa-sam/components/lib/truncate-text/truncate-text.directive.ts","ng://@gsa-sam/components/lib/truncate-text/truncate.text.module.ts","ng://@gsa-sam/components/lib/dialog/dialog-config.ts","ng://@gsa-sam/components/lib/dialog/dialog-animations.ts","ng://@gsa-sam/components/lib/dialog/dialog-container.component.ts","ng://@gsa-sam/components/lib/dialog/dialog-ref.ts","ng://@gsa-sam/components/lib/dialog/dialog.ts","ng://@gsa-sam/components/lib/dialog/dialog-content.directives.ts","ng://@gsa-sam/components/lib/dialog/dialog.module.ts","ng://@gsa-sam/components/lib/external-link/external-link.directive.ts","ng://@gsa-sam/components/lib/external-link/external-link.module.ts","ng://@gsa-sam/components/lib/video-player/video-player.component.ts","ng://@gsa-sam/components/lib/video-player/video-player.module.ts","ng://@gsa-sam/components/lib/popup/popup.directive.ts","ng://@gsa-sam/components/lib/popup/popup.module.ts","ng://@gsa-sam/components/lib/text/text.component.ts","ng://@gsa-sam/components/lib/text/child.component.ts","ng://@gsa-sam/components/lib/text/text.module.ts"],"sourcesContent":["\nimport {InjectionToken} from '@angular/core';\nimport {CdkAccordion} from '@angular/cdk/accordion';\n\n/** Accordion's display modes. */\nexport type SdsAccordionDisplayMode = 'default' | 'basic';\n\n/**\n * Base interface for a `SdsAccordion`.\n */\nexport interface SdsAccordionBase extends CdkAccordion {\n  /** Display mode used for all accordion items in the accordion. */\n  displayMode: SdsAccordionDisplayMode;\n\n  /** Handles keyboard events coming in from the item headers. */\n  _handleHeaderKeydown: (event: KeyboardEvent) => void;\n\n  /** Handles focus events on the item headers. */\n  _handleHeaderFocus: (header: any) => void;\n}\n\n\n/**\n * Token used to provide a `SdsAccordion` to `SdsAccordionItem`.\n * Used primarily to avoid circular imports between `SdsAccordion` and `SdsAccordionItem`.\n */\nexport const SDS_ACCORDION = new InjectionToken<SdsAccordionBase>('SDS_ACCORDION');\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Time and timing curve for accordion item animations. */\nexport const ACCORDION_ITEM_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\nexport const sdsExpansionAnimations: {\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that expands and collapses the accordion item content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n    state('expanded', style({height: '*', visibility: 'visible'})),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(ACCORDION_ITEM_ANIMATION_TIMING)),\n  ])\n};","import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Accordion Item content that will be rendered lazily\n * after the accordion item is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[sdsAccordionItemContent]'\n})\nexport class SdsAccordionItemContentDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import {AnimationEvent} from '@angular/animations';\nimport { CdkAccordionItem } from \"@angular/cdk/accordion\";\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  ElementRef,\n  Inject,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ViewChild\n} from \"@angular/core\";\nimport {DOCUMENT} from '@angular/common';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {Subject} from 'rxjs';\nimport {filter, startWith, take, distinctUntilChanged} from 'rxjs/operators';\nimport {sdsExpansionAnimations} from './accordion-animations';\nimport {SdsAccordionItemContentDirective} from './accordion-item-content.directive';\nimport {SDS_ACCORDION, SdsAccordionBase} from './accordion-base';\n\n/** Accordion Item's states. */\nexport type SdsAccordionItemState = 'expanded' | 'collapsed';\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n\n@Component({\n  selector: \"sds-accordion-item\",\n  exportAs: \"sdsAccordionItem\",\n  templateUrl: \"accordion-item.component.html\",\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled', 'expanded'],\n  outputs: ['opened', 'closed', 'expandedChange'],\n  animations: [sdsExpansionAnimations.bodyExpansion],\n  host: {\n    'class': 'sds-accordion__item',\n    '[class.sds-accordion__item--expanded]': 'expanded',\n    '[class._sds-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n  }\n})\nexport class SdsAccordionItemComponent extends CdkAccordionItem\n  implements AfterContentInit, OnChanges, OnDestroy {\n  private _document: Document;\n\n  /** An event emitted after the body's expansion animation happens. */\n  @Output() afterExpand = new EventEmitter<void>();\n\n  /** An event emitted after the body's collapse animation happens. */\n  @Output() afterCollapse = new EventEmitter<void>();\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  /** Optionally defined accordion the accordion item belongs to. */\n  accordion: SdsAccordionBase;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(SdsAccordionItemContentDirective) _lazyContent: SdsAccordionItemContentDirective;\n\n  /** Element containing the accordion item's user-provided content. */\n  @ViewChild('body') _body: ElementRef<HTMLElement>;\n\n  /** Portal holding the user's content. */\n  _portal: TemplatePortal;\n\n  /** ID for the associated header element. Used for a11y labelling. */\n  _headerId = `sds-accordion-item-header-${uniqueId++}`;\n\n  /** Stream of body animation done events. */\n  _bodyAnimationDone = new Subject<AnimationEvent>();\n\n  constructor(@Optional() @SkipSelf() @Inject(SDS_ACCORDION) accordion: SdsAccordionBase,\n              _changeDetectorRef: ChangeDetectorRef,\n              _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(DOCUMENT) _document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode: string) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this.accordion = accordion;\n    this._document = _document;\n\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      if (event.fromState !== 'void') {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n      }\n    });\n  }\n\n  /** Gets the expanded state string. */\n  _getExpandedState(): SdsAccordionItemState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      // Render the content as soon as the accordion item becomes open.\n      this.opened.pipe(\n        startWith(null!),\n        filter(() => this.expanded && !this._portal),\n        take(1)\n      ).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._bodyAnimationDone.complete();\n    this._inputChanges.complete();\n  }\n\n  /** Checks whether the accordion item's content contains the currently-focused element. */\n  _containsFocus(): boolean {\n    if (this._body) {\n      const focusedElement = this._document.activeElement;\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n\n    return false;\n  }\n}\n","import { FocusMonitor, FocusableOption, FocusOrigin } from \"@angular/cdk/a11y\";\nimport { ENTER, SPACE, hasModifierKey } from \"@angular/cdk/keycodes\";\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Host,\n  OnDestroy,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { merge, Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\nimport { SdsAccordionItemComponent } from \"./accordion-item.component\";\n\n@Component({\n  selector: \"sds-accordion-item-header\",\n  templateUrl: \"./accordion-item-header.component.html\",\n  styleUrls:['./accordion-item-header.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: \"sds-accordion__trigger\",\n    role: \"button\",\n    \"[attr.id]\": \"accordionItem._headerId\",\n    \"[attr.tabindex]\": \"disabled ? -1 : 0\",\n    \"[attr.aria-controls]\": \"_getAccordionItemId()\",\n    \"[attr.aria-expanded]\": \"_isExpanded()\",\n    \"[attr.aria-disabled]\": \"accordionItem.disabled\",\n    \"(click)\": \"_toggle()\",\n    \"(keydown)\": \"_keydown($event)\"\n  }\n})\nexport class SdsAccordionItemHeaderComponent implements OnDestroy, FocusableOption {\n  private _parentChangeSubscription = Subscription.EMPTY;\n  constructor(\n    @Host() public accordionItem: SdsAccordionItemComponent,\n    private _element: ElementRef,\n    private _focusMonitor: FocusMonitor,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n\n    // Since the toggle state depends on an @Input on the accordion item, we\n    // need to subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(\n      accordionItem.opened,\n      accordionItem.closed,\n      accordionItem._inputChanges.pipe(\n        filter(changes => !!(changes[\"disabled\"]))\n      )\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n\n    _focusMonitor.monitor(_element).subscribe(origin => {\n      if (origin && accordionItem.accordion) {\n        accordionItem.accordion._handleHeaderFocus(this);\n      }\n    });\n\n  }\n\n  /**\n   * Whether the associated accordion item is disabled. \n   * Implemented as a part of `FocusableOption`.\n   */\n  get disabled() {\n    return this.accordionItem.disabled;\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  _toggle(): void {\n    this.accordionItem.toggle();\n  }\n\n  /** Gets whether the accordion item is expanded. */\n  _isExpanded(): boolean {\n    return this.accordionItem.expanded;\n  }\n\n  /** Gets the accordion item id. */\n  _getAccordionItemId(): string {\n    return this.accordionItem.id;\n  }\n\n  /** Handle keydown event calling to toggle() if appropriate. */\n  _keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n\n        break;\n      default:\n        if (this.accordionItem.accordion) {\n          this.accordionItem.accordion._handleHeaderKeydown(event);\n        }\n\n        return;\n    }\n  }\n\n  /**\n   * Focuses the item header. Implemented as a part of `FocusableOption`.\n   * @param origin Origin of the action that triggered the focus.\n   * @docs-private\n   */\n  focus(origin: FocusOrigin = \"program\") {\n    this._focusMonitor.focusVia(this._element, origin);\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n}\n","import {\n  Directive,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit\n} from \"@angular/core\";\n\nimport { CdkAccordion } from \"@angular/cdk/accordion\";\nimport { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport { HOME, END } from \"@angular/cdk/keycodes\";\nimport {\n  SDS_ACCORDION,\n  SdsAccordionBase,\n  SdsAccordionDisplayMode\n} from \"./accordion-base\";\nimport { SdsAccordionItemHeaderComponent } from \"./accordion-item-header.component\";\n\n@Directive({\n  selector: \"sds-accordion\",\n  exportAs: \"sdsAccordion\",\n  inputs: [\"multi\"],\n  providers: [\n    {\n      provide: SDS_ACCORDION,\n      useExisting: SdsAccordionDirective\n    }\n  ],\n  host: {\n    'class': 'sds-accordion',\n    '[class.sds-accordion--basic]': 'displayMode === \"basic\"',\n  }\n})\nexport class SdsAccordionDirective extends CdkAccordion\n  implements SdsAccordionBase, AfterContentInit {\n  private _keyManager: FocusKeyManager<SdsAccordionItemHeaderComponent>;\n\n  @ContentChildren(SdsAccordionItemHeaderComponent, { descendants: true })\n  _headers: QueryList<SdsAccordionItemHeaderComponent>;\n\n  @Input() displayMode: SdsAccordionDisplayMode = \"default\";\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\n  }\n\n  /** Handles keyboard events coming in from the item headers. */\n  _handleHeaderKeydown(event: KeyboardEvent) {\n    const { keyCode } = event;\n    if (keyCode === HOME) {\n      this._keyManager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  _handleHeaderFocus(header: SdsAccordionItemHeaderComponent) {\n    this._keyManager.updateActiveItem(header);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { PortalModule } from \"@angular/cdk/portal\";\n\nimport { SdsAccordionDirective } from \"./accordion.directive\";\nimport { SdsAccordionItemComponent } from \"./accordion-item.component\";\nimport { SdsAccordionItemHeaderComponent } from \"./accordion-item-header.component\";\nimport { SdsAccordionItemContentDirective } from \"./accordion-item-content.directive\";\n\n@NgModule({\n  imports: [CommonModule, PortalModule],\n  exports: [\n    SdsAccordionDirective,\n    SdsAccordionItemComponent,\n    SdsAccordionItemHeaderComponent,\n    SdsAccordionItemContentDirective\n  ],\n  declarations: [\n    SdsAccordionDirective,\n    SdsAccordionItemComponent,\n    SdsAccordionItemHeaderComponent,\n    SdsAccordionItemContentDirective\n  ],\n  providers: []\n})\nexport class SdsAccordionModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sds-page',\n  template: `\n    <div class=\"grid-container\"><ng-content></ng-content></div>\n  `\n})\nexport class SdsPageComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n@Component({\n  selector: 'sds-page-options',\n  template: `\n    <div class=\"grid-row position-relative\"><ng-content></ng-content></div>\n  `\n})\nexport class SdsPageOptionsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\n\nimport { SdsPageComponent, SdsPageOptionsComponent } from './page.component';\n\n@NgModule({\n  imports: [],\n  exports: [SdsPageComponent, SdsPageOptionsComponent],\n  declarations: [SdsPageComponent, SdsPageOptionsComponent],\n  providers: [],\n})\nexport class SdsPageModule { }\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Time and timing curve for accordion item animations. */\nexport const TOOLBAR_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n\nexport const sdsToolbarAnimations: {\n  readonly bodyExpansion: AnimationTriggerMetadata;\n} = {\n  /** Animation that expands and collapses the accordion item content. */\n  bodyExpansion: trigger('bodyExpansion', [\n    state('collapsed, void', style({width: '0px', height: '0px', opacity: '0', visibility: 'hidden'})),\n    state('expanded', style({width: '{{expandedWidth}}', height: '*', opacity: '1', visibility: 'visible'}), {\n      params: { expandedWidth: '300px' }\n    }),\n    transition('expanded <=> collapsed, void => collapsed',\n      animate(TOOLBAR_ANIMATION_TIMING)),\n  ])\n};","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { sdsToolbarAnimations } from \"./toolbar-animations\";\n\n/** Toolbar's states. */\nexport type SdsToolbarState = \"expanded\" | \"collapsed\";\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n\n@Component({\n  selector: \"sds-toolbar\",\n  exportAs: \"sdsToolbar\",\n  templateUrl: \"toolbar.component.html\",\n  animations: [sdsToolbarAnimations.bodyExpansion],\n  host: {\n    class: \"sds-toolbar\",\n    \"[class.sds-toolbar--expanded]\": \"expanded\"\n  }\n})\nexport class SdsToolbarComponent {\n  /** The unique Toolbar id. */\n  readonly id = uniqueId++;\n\n  /** ID for the header element. Used for a11y labelling. */\n  readonly _headerId: string = `sds-toolbar-header-${this.id}`;\n\n  /** ID for the content element. Used for a11y labelling. */\n  readonly _contentId: string = `sds-toolbar-content-${this.id}`;\n\n  constructor() {}\n\n  /** Emits whenever the expanded state of the toolbar changes. */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Whether the toolbar is expanded. */\n  @Input()\n  get expanded(): any {\n    return this._expanded;\n  }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the toolbar is disabled. */\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled: any) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  private _disabled: boolean = false;\n\n  /** Width of the toolbar when is expanded. */\n  @Input() expandedWidth: string = \"300px\";\n\n  // Elements that surround the toolbar need to make space for the expanded toolbar.\n  // Adding 20 more pixes to provide padding\n  @Input() expandedSpace: string = \"20px\";\n\n  /** Toggles the expanded state of the toolbar. */\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n\n  /** Gets the expanded state string. */\n  _getExpandedState(): SdsToolbarState {\n    return this.expanded ? \"expanded\" : \"collapsed\";\n  }\n}\n","import { Component, Host } from \"@angular/core\";\nimport { SdsToolbarComponent } from \"./toolbar.component\";\n\n@Component({\n  selector: \"sds-toolbar-header\",\n  templateUrl: \"toolbar-header.component.html\",\n  host: {\n    class: \"sds-toolbar__header\"\n  }\n})\nexport class SdsToolbarHeaderComponent {\n  constructor(@Host() public toolbar: SdsToolbarComponent) {}\n\n  /** Toggles the expanded state of the toolbar. */\n  _toggle() {\n    this.toolbar.toggle();\n  }\n\n  /** Gets whether the toolbar is expanded. */\n  get _isExpanded(): boolean {\n    return this.toolbar.expanded;\n  }\n\n  /** Whether the toolbar is disabled. */\n  get _disabled(): boolean {\n    return this.toolbar.disabled;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2, OnInit } from \"@angular/core\";\nimport { SdsToolbarComponent } from \"./toolbar.component\";\n\n@Directive({\n  selector: \"[sdsToolbarExpand]\"\n})\nexport class SdsToolbarExpandDirective implements OnInit {\n  /** Width of the toolbar while expanded. */\n  _expandedWidth: string;\n\n  /** References the toolbar instance that the element its associated with. */\n  @Input(\"sdsToolbarExpand\")\n  get toolbar() {\n    return this._toolbar;\n  }\n  set toolbar(toolbar: SdsToolbarComponent) {\n    if (toolbar === this._toolbar) {\n      return;\n    }\n    this._toolbar = toolbar;\n    /** Sets toolbar expanded width */\n\n    this._expandedWidth = this._toolbar.expandedSpace;\n  }\n  private _toolbar: SdsToolbarComponent;\n\n  constructor(private renderer: Renderer2, private _element: ElementRef) { }\n  ngOnInit() {\n    this.setStyle(this.toolbar.expanded);\n    this.toolbar.expandedChange.subscribe(value => {\n      this.setStyle(value);\n    });\n  }\n\n  private setStyle(value: any) {\n    if (value) {\n      this.renderer.setStyle(this._element.nativeElement, \"margin-left\", `${this._expandedWidth}`);\n    }\n    else {\n      this.renderer.removeStyle(this._element.nativeElement, \"margin-left\");\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SdsToolbarComponent } from './toolbar.component';\nimport { SdsToolbarHeaderComponent } from './toolbar-header.component';\nimport { SdsToolbarExpandDirective } from './toolbar-expand.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [SdsToolbarComponent, SdsToolbarExpandDirective],\n  declarations: [\n    SdsToolbarComponent,\n    SdsToolbarHeaderComponent,\n    SdsToolbarExpandDirective\n  ],\n  providers: []\n})\nexport class SdsToolbarModule {}\n","export interface INavigationLink {\n    /**\n     * Text to be displayed in the link\n     */\n    text: string;\n\n    /**\n     * Navigation Route \n     */\n    route: string;\n\n    /**\n     * Internal Angualr Routes, External HREF, EVENT: event on parent component\n     */\n    mode: NavigationMode;\n}\n\nexport enum NavigationMode {\n    INTERNAL, EXTERNAL, EVENT, LABEL\n}\n\nexport interface Selectable {\n    /**\n     * Identifier for the item when search for selected \n     */\n    id: string;\n\n    /**\n     * Status of if the item is selected \n     */\n    selected?: boolean;\n}\n","import { INavigationLink, NavigationMode } from './common-navigation-model';\nexport class NavigationHelper {\n\n    /**\n     * checks if link is internal\n     * @param link \n     */\n    isLinkInternal(link: INavigationLink) {\n        return link.mode === NavigationMode.INTERNAL;\n    }\n\n    /**\n     * checks if link is external\n     * @param link \n     */\n    isLinkExternal(link: INavigationLink) {\n        return link.mode === NavigationMode.EXTERNAL;\n    }\n}","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { HeaderModel, HeaderNavigationLink, HeaderSecondaryLink } from './model/HeaderModel';\nimport { INavigationLink, NavigationMode, Selectable } from '../common-navigation/common-navigation-model';\nimport { NavigationHelper } from '../common-navigation/navigation-helper';\n@Component({\n  selector: 'sds-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class SdsHeaderComponent {\n\n  @ViewChild('usaNavOpen') openNavBtn: ElementRef;\n  @ViewChild('usaNavClose') closeNavBtn: ElementRef;\n  mobileNavActive = false;\n  /**\n  * Navigation helper\n  */\n  navigationHelper = new NavigationHelper();\n\n  /**\n   * determines if the top banner is shown\n   */\n  @Input() showTopBanner: boolean = true;\n\n  /**\n   * Model used for the different display portions of the header\n   */\n  @Input() model: HeaderModel;\n\n  @Input() topBannerDescription: string = '';\n  /**\n   * Takes in a text string and removes all white space characters and returns the new string\n   * @param text\n   */\n  removeWhiteSpace(text: string) {\n    return text.replace(/ /g, '');\n  }\n\n  /**\n   * seeif any secondary link has a counter\n   */\n  hasCounter(): boolean {\n    let hasCounter = false;\n    if (this.model) {\n      if (this.model.secondaryLinks) {\n        this.model.secondaryLinks.forEach(function (item: HeaderSecondaryLink) {\n          if (item.hasCounter) {\n            hasCounter = true;\n          }\n        });\n      }\n    }\n    return hasCounter;\n  }\n\n  /**\n   * Deselects previous seletion\n   * @param id\n   */\n  select(id: string) {\n    this.deselect();\n    let item = this.find(id);\n    if (item) {\n      item.selected = true;\n    }\n  }\n\n  /**\n   * Deselects all the items in the header model\n   */\n  deselect() {\n    if (this.model) {\n      if (this.model.home) {\n        this.model.home.selected = false;\n      }\n      if (this.model.navigationLinks) {\n        this.model.navigationLinks.forEach(function (item: HeaderNavigationLink) {\n          item.selected = false;\n          if (item.children) {\n            item.children.forEach(function (child: HeaderNavigationLink) {\n              child.selected = false;\n            });\n          }\n        });\n      }\n      if (this.model.secondaryLinks) {\n        this.model.secondaryLinks.forEach(function (item: HeaderSecondaryLink) {\n          item.selected = false;\n        });\n      }\n    }\n  }\n\n  /**\n   * Finds the navigation element by id in the header model\n   * @param id of the navigation item\n   */\n  find(id: string): Selectable {\n    let toReturn = null;\n    if (this.model) {\n      if (this.model.home) {\n        if (this.model.home.id === id) {\n          toReturn = this.model.home;\n        }\n      }\n      toReturn = this.findNavigationLinks(id, toReturn);\n      if (this.model.secondaryLinks) {\n        this.model.secondaryLinks.forEach(function (item: HeaderSecondaryLink) {\n          if (item.id === id) {\n            toReturn = item;\n          }\n        });\n      }\n    }\n    return toReturn;\n  }\n\n  /**\n   * Searchs the items in the navigation links\n   * @param id\n   */\n  private findNavigationLinks(id: string, toReturn: Selectable): Selectable {\n    if (this.model.navigationLinks) {\n      this.model.navigationLinks.forEach(function (item: HeaderNavigationLink) {\n        if (item.id === id) {\n          toReturn = item;\n        }\n        if (item.children) {\n          item.children.forEach(function (child: HeaderNavigationLink) {\n            if (child.id === id) {\n              toReturn = child;\n            }\n          });\n        }\n      });\n    }\n    return toReturn;\n  }\n\n  /**\n   * event for event based\n   */\n  @Output()\n  linkEvent = new EventEmitter<INavigationLink>();\n\n  /**\n   * Link clicked and emits the link data into an event\n   * @param link\n   */\n  linkClickEvent(link: INavigationLink) {\n    this.linkEvent.emit(link);\n    return false;\n  }\n\n  // When the mobile nav is active, and the close box isn't visible,\n  // we know the user's viewport has been resized to be larger.\n  // Let's make the page state consistent by deactivating the mobile nav.\n  @HostListener('window:resize', ['$event'])\n  onBrowserResize(event) {\n    if (\n      this.mobileNavActive &&\n      this.closeNavBtn.nativeElement.getBoundingClientRect().width === 0\n    ) {\n      this.mobileNavActive = false;\n    }\n  }\n\n  openMobileNav() {\n    this.mobileNavActive = true;\n  }\n\n  closeMobileNav() {\n    this.mobileNavActive = false;\n    // The mobile nav was just deactivated, and focus was on the close\n    // button, which is no longer visible. We don't want the focus to\n    // disappear into the void, so focus on the menu button if it's\n    // visible (this may have been what the user was just focused on,\n    // if they triggered the mobile nav by mistake).\n    this.openNavBtn.nativeElement.focus();\n  }\n\n  // The mobile nav was just activated, so focus on the close button,\n  navAnimationEnd() {\n    this.closeNavBtn.nativeElement.focus();\n  }\n\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sds-top-banner',\n  templateUrl: './top-banner.component.html',\n  styleUrls: ['./top-banner.component.scss']\n})\nexport class SdsTopBannerComponent {\n  showDetail = false;\n  @Input() description = '';\n\n  toggleDetails() {\n    this.showDetail = !this.showDetail;\n  }\n\n  closeDetail() {\n    if (this.showDetail) {\n      this.showDetail = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SdsHeaderComponent } from './header.component';\nimport { RouterModule } from '@angular/router';\nimport { SdsTopBannerComponent } from '../top-banner/top-banner.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { A11yModule } from '@angular/cdk/a11y';\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, FontAwesomeModule, A11yModule\n  ],\n  declarations: [SdsHeaderComponent, SdsTopBannerComponent],\n  exports: [SdsHeaderComponent]\n})\nexport class SdsHeaderModule { }\n","import {\n  INavigationLink,\n  NavigationMode\n} from '../../common-navigation/common-navigation-model';\n\nexport class FooterModel {\n  /**\n   * List of sections and their links\n   */\n  linkSections: FooterLinkSection[];\n\n  /**\n   * Footer text and logo\n   */\n\n  footerLogo?: FooterLogo;\n}\n\nexport class FooterLinkSection {\n  /**\n   * Title text for the section\n   */\n  text: string;\n\n  /**\n   * Links in the section\n   */\n  links: FooterLink[];\n}\n\nexport class FooterLink implements INavigationLink {\n  /**\n   * Internal Angualr Routes, External HREF, EVENT: event on parent component\n   */\n  mode: NavigationMode;\n\n  /**\n   * Text to be displayed in the link\n   */\n  text: string;\n\n  /**\n   * Navigation Route\n   */\n  route: string;\n}\n\nexport interface FooterLogo {\n  /**\n   * Text for the Header\n   */\n\n  text: string;\n\n  /**\n   * Image Source Path for the Image button\n   */\n\n  imageSourcePath: string;\n\n  /**\n   * Alt text for image\n   */\n\n  imageAltText: string;\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FooterModel } from './model/FooterModel';\nimport { INavigationLink, NavigationMode } from '../common-navigation/common-navigation-model';\nimport { NavigationHelper } from '../common-navigation/navigation-helper';\n\n@Component({\n  selector: 'sds-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class SdsFooterComponent {\n\n  /**\n   * Navigation helper\n   */\n  navigationHelper = new NavigationHelper();\n\n  /**\n   * Model used for the different display portions of the footer\n   */\n  @Input() model: FooterModel;\n  @Input() isCollapsedContent: boolean = true;\n\n  /**\n   * event for event based\n   */\n  @Output()\n  linkEvent = new EventEmitter<INavigationLink>();\n\n  /**\n   * Link clicked and emits the link data into an event\n   * @param link\n   */\n  linkClickEvent(link: INavigationLink) {\n    this.linkEvent.emit(link);\n    return false;\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[sdsCollapse]',\n  exportAs: 'sdsCollapse',\n  host: {'[class.display-none]':'collapsed'}\n})\nexport class CollapseDirective {\n\n  @Input('sdsCollapse') collapsed: boolean = true;\n\n  constructor() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollapseDirective } from './collapse.directive';\n\n@NgModule({\n  declarations: [ CollapseDirective],\n  imports: [\n    CommonModule\n  ],\n  exports: [CollapseDirective]\n})\nexport class SdsCollapseModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SdsFooterComponent } from './footer.component';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SdsCollapseModule } from '../collapse/collapse.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, SdsCollapseModule, FontAwesomeModule\n  ],\n  declarations: [SdsFooterComponent],\n  exports: [SdsFooterComponent]\n})\nexport class SdsFooterModule { }\n","\nexport class PaginationConfigurationModel {\n\n    /**\n     * used to distinguish fields\n     */\n    id: string;\n}\n\nexport class PaginationModel {\n\n    /**\n     * current page number\n     */\n    pageNumber: number;\n\n    /**\n     * size of page ex 25, 50,100\n     */\n    pageSize: number;\n\n    /**\n     * total number of pages\n     */\n    totalPages: number;\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectorRef, ViewChild, ElementRef } from '@angular/core';\nimport { PaginationConfigurationModel, PaginationModel } from './model/paginationModel';\n\n@Component({\n  selector: 'sds-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit {\n\n  ngOnInit(): void {\n    this.maintainPreviousValue();\n  }\n\n  constructor(private change: ChangeDetectorRef) { }\n\n\n  /**\n   * Stores the previous number. Used when focus out if field empty\n   */\n  private maintainPreviousValue() {\n    this.previousNumber = this.page.pageNumber.valueOf();\n  }\n\n  /**\n   * Input field for the current page\n   */\n  @ViewChild('currentPage') currentPageField: ElementRef;\n\n  /**\n   * Output of the page model object\n   */\n  @Output()\n  pageChange = new EventEmitter<PaginationModel>();\n\n  /**\n   * Pagination model\n   */\n  @Input()\n  page: PaginationModel = new PaginationModel();\n\n  /**\n   * configuration for the pagination\n   */\n  @Input()\n  paginationConfiguration: PaginationConfigurationModel;\n\n\n  /**\n   * debounce time for current page input\n   */\n  debounceTime: number = 500;\n\n  /**\n   * Stores the previous number\n   */\n  private previousNumber: number;\n\n  /**\n   * timeout id of the debounce time \n   */\n  timeoutNumber: number;\n\n  /**\n   * Drop down options for page size\n   */\n  public options = [\n    { label: '25', value: 25 },\n    { label: '50', value: 50 },\n    { label: '100', value: 100 }\n  ];\n\n  /**\n   * previous page lowers page number by one within range\n   */\n  previousPage() {\n    if (this.page.pageNumber > 1) {\n      this.page.pageNumber--;\n      this.maintainPreviousValue();\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  /**\n   * next page increase page number by one within range\n   */\n  nextPage() {\n    if (this.page.pageNumber < this.page.totalPages) {\n      this.page.pageNumber++;\n      this.maintainPreviousValue();\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  /**\n   * current page changes sets new value if within range\n   * @param newValue \n   */\n  valuechange(newValue?: number) {\n    window.clearTimeout(this.timeoutNumber);\n    this.timeoutNumber = window.setTimeout(() => {\n      if (newValue || newValue === 0) {\n        newValue = this.handleInputOutsideBounds(newValue);\n        if (newValue >= 1 && newValue <= this.page.totalPages) {\n          this.page.pageNumber = newValue;\n          this.maintainPreviousValue();\n          this.pageChange.emit(this.page);\n          this.change.detectChanges();\n        }\n      } else {\n\n        if (this.page.pageNumber) {\n          this.maintainPreviousValue();\n        }\n      }\n    }, this.debounceTime);\n  }\n\n  /**\n   * adjusts the value if not within the page limit above or below\n   * @param newValue handles\n   */\n  private handleInputOutsideBounds(newValue?: number) {\n    if (newValue < 1) {\n      newValue = 1;\n      this.currentPageField.nativeElement.value = newValue;\n    }\n    else if (newValue > this.page.totalPages) {\n      newValue = this.page.totalPages;\n      this.currentPageField.nativeElement.value = newValue;\n    }\n    return newValue;\n  }\n\n  /**\n   * current page focus out will replace with previous valid if empty\n   */\n  currentPageFocusOut() {\n    if (this.currentPageField.nativeElement.value === '') {\n      this.currentPageField.nativeElement.value = this.page.pageNumber = this.previousNumber;\n      this.change.detectChanges();\n    }\n  }\n\n  /**\n   * page size selection change\n   */\n  onSelectChange() {\n    this.page.pageNumber = 1;\n    this.pageChange.emit(this.page);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [\n    CommonModule, FormsModule\n  ],\n  exports: [PaginationComponent]\n})\nexport class PaginationModule { }\n","export class SDSSelectedItemModel {\n  /**\n   * List of items selected\n   */\n  public items: object[];\n\n  constructor(items?: object[]) {\n    this.items = items ? [...items] : [];\n  }\n\n}\n","export class SDSSelectedItemModelHelper {\n\n    /**\n      *  adds an item to the collection\n      * if selected mode is single it removes any existing items\n      * also checks to see if that item already exists\n      * keyfield is used to determine uniqueness of the item added\n      * @param itemToAdd \n      * @param keyField \n      * @param selectionMode \n      * @param items \n      */\n    public static addItem(itemToAdd: object, keyField: string, selectionMode: SelectionMode, items: object[]) {\n        if (!SDSSelectedItemModelHelper.contatinsItem(itemToAdd[keyField], keyField, items)) {\n            if (selectionMode === SelectionMode.SINGLE) {\n                SDSSelectedItemModelHelper.clearItems(items);\n            }\n            items.push(itemToAdd);\n        }\n    }\n\n    /**\n     * adds an array of items to the list and will not add duplicate items\n     * keyfield is used to determine uniqueness of the item added\n     * @param toAddItems \n     * @param keyField \n     * @param selectionMode \n     * @param items \n     */\n    public static addItems(toAddItems: object[], keyField: string, selectionMode: SelectionMode, items: object[]) {\n        for (let i = 0; i < toAddItems.length; i++) {\n            SDSSelectedItemModelHelper.addItem(toAddItems[i], keyField, selectionMode, items);\n        }\n    }\n\n    /**\n     * removes the item from the list\n     * keyfield is used to determine uniqueness of the item added\n     * @param item \n     * @param keyField \n     * @param items \n     */\n    public static removeItem(item: object, keyField: string, items: object[]) {\n        if (SDSSelectedItemModelHelper.contatinsItem(item[keyField], keyField, items)) {\n            items.splice(items.indexOf(item), 1)\n        }\n    }\n\n    /**\n     * checks to see if a particular item exists by the provied key\n     * keyfield is used to determine uniqueness of the item added\n     * @param key \n     * @param keyField \n     * @param items \n     */\n    public static contatinsItem(key: string, keyField: string, items: object[]): boolean {\n        let item = items.find(o => o[keyField] === key);\n        return item !== null && item !== undefined;\n    }\n\n    /**\n     * Clears the list of items\n     * @param items \n     */\n    public static clearItems(items: object[]) {\n        while (items.length > 0) {\n            items.pop();\n        }\n    }\n\n    /**\n     * updates an array of items to the list and will not add duplicate items\n     * keyfield is used to determine uniqueness of the item added\n     * @param selectedItems \n     * @param keyField \n     * @param selectionMode \n     * @param items \n     */\n    public static replaceItems(selectedItems: object[], keyField: string, selectionMode: SelectionMode, items: object[]) {\n        //Clears Old List\n        SDSSelectedItemModelHelper.clearItems(items);\n        //Adds new List\n        SDSSelectedItemModelHelper.addItems(selectedItems, keyField, selectionMode, items);\n    }\n}\n\nexport enum SelectionMode {\n    SINGLE, MULTIPLE\n}\n","import { SDSSelectedResultConfiguration } from '../../selected-result/models/SDSSelectedResultConfiguration';\nimport { SDSAutocompleteSearchConfiguration } from '../../autocomplete-search/models/SDSAutocompleteConfiguration';\nimport { SelectionMode } from '../../selected-result/models/sds-selected-item-model-helper';\n\nexport class SDSAutocompletelConfiguration implements SDSSelectedResultConfiguration, SDSAutocompleteSearchConfiguration {\n  /**\n     * sets the default debounce time to 250 milliseconds \n     */\n  constructor() {\n    this.debounceTime = 250;\n    this.minimumCharacterCountSearch = 0;\n  }\n\n  /**\n   * Used to describe the drop down (Text should match the label that will be supplied)\n   */\n  public labelText: string;\n\n  /**\n   * Used for the Id of the control\n   */\n  public id: string;\n\n  /**\n   *  This is the primary field used to identify each object in the results\n   */\n  public primaryKeyField: string;\n\n  /**\n   *  Property from supplied model used for the top part of the basic template\n   */\n  public primaryTextField: string;\n\n  /**\n   *  Property from supplied model used for the bottom part of the basic template\n   */\n  public secondaryTextField: string;\n\n  /**\n   *  Sets the time waited for addional key actions Default is 250 milliseconds\n   */\n  public debounceTime: number;\n\n  /**\n   * Place holder text for autocomplete input\n   */\n  public autocompletePlaceHolderText: string;\n\n  /**\n   * Mininumn Characters for search\n   */\n  public minimumCharacterCountSearch: number;\n\n  /**\n   * Mode of the model either allows a single item or multiple items\n   */\n  public selectionMode: SelectionMode = SelectionMode.SINGLE;\n\n\n  /**\n   * Allows option to allow user text not in the standard results\n   */\n  public isFreeTextEnabled: boolean = false;\n\n  /**\n   * Text appeneded ad the end of free text\n   */\n  public freeTextSubtext: string = 'search';\n\n  /**\n   * Focus into autocomplete search\n   */\n  public focusInSearch: boolean = true;\n\n  /**\n   * The aria-label for the auto-complete\n   */\n  public ariaLabelText: string = 'Auto Complete';\n\n   /**\n   * To enable the tag mode\n   */\n  public isTagModeEnabled: boolean =false;\n\n    /**\n   * To make input readonly\n   */\n  public inputReadOnly = false;\n\n}","import {\n  Component,\n  Input,\n  ViewChild,\n  TemplateRef,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n  FormControl\n} from '@angular/forms';\nimport { SDSSelectedItemModel } from '../selected-result/models/sds-selectedItem.model';\nimport { SDSAutocompleteServiceInterface } from '../autocomplete-search/models/SDSAutocompleteServiceInterface';\nimport { SDSAutocompletelConfiguration } from './models/SDSAutocompletelConfiguration.model';\nimport { SelectionMode } from '../selected-result/models/sds-selected-item-model-helper';\n\nconst Autocomplete_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SDSAutocompleteComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'sds-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [Autocomplete_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SDSAutocompleteComponent implements ControlValueAccessor {\n  /**\n   * Allow to insert a customized template for suggestions results\n   */\n  @Input() suggestionTemplate: TemplateRef<any>;\n\n  /**\n   * Allow to insert a customized template for selected items\n   */\n  @Input() selectedItemTemplate: TemplateRef<any>;\n\n  /**\n   * The data model that has the selected item\n   */\n  public model: SDSSelectedItemModel;\n\n  public disabled: boolean;\n\n  /**\n   * Configuration for the control\n   */\n  @Input()\n  public configuration: SDSAutocompletelConfiguration;\n\n  /**\n   * Instance of the SamHiercarchicalServiceInterface provided\n   */\n  @Input()\n  public service: SDSAutocompleteServiceInterface;\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  /**\n   * Stored Event for ControlValueAccessor\n   */\n  @HostListener('focusout')\n  public onTouched = () => { };\n\n  /**\n   * Stored Event for ControlValueAccessor\n   */\n  public onChange = (_: any) => { };\n\n  // ControlValueAccessor (and Formly) is trying to update the value of the FormControl (our custom component) programatically\n  // If there is a value we will just overwrite items\n  // If there is no value we reset the items array to be empty\n  writeValue(value: any) {\n    if (value instanceof SDSSelectedItemModel && value.items && value.items.length && this.model.items !== value.items) {\n      this.model.items = [...value.items];\n      this.cd.markForCheck();\n    }\n    else if(value && value.length && this.model.items !== value) {\n      this.model.items = value;\n      this.cd.markForCheck();\n    } else {\n      if(!this.model || !(this.model instanceof SDSSelectedItemModel)) {\n        this.model = new SDSSelectedItemModel();\n      }\n      this.model.items = value && value.items ? value.items : [];\n      this.cd.markForCheck();\n    }\n  }\n\n  // Method that is fired when the child component event notifies us that the items array has been modified within the child component\n  updateItems($event) {\n    this.updateModel();\n  }\n\n  // Helper method that gets a new instance of the model and notifies ControlValueAccessor that we have a new model for this FormControl (our custom component)\n  updateModel() {\n    const model = this.getModel();\n    this.onChange(model);\n  }\n\n  // Helper method to return a new instance of an array that contains our items\n  getModel() {\n    return [...this.model.items];\n  }\n\n  // ControlValueAccessor hook that lets us call this._onChange(var) to let the form know our variable has changed (in this case model)\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  // ControlValueAccessor hook (not used)\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  isSingleMode(): boolean {\n    if (this.configuration) {\n      return this.configuration.selectionMode === SelectionMode.SINGLE;\n    } else {\n      return false;\n    }\n  }\n}","import { SelectionMode } from './sds-selected-item-model-helper';\n\nexport class SDSSelectedResultConfiguration {\n\n  /**\n   * Used to describe the drop down (Text should match the label that will be supplied)\n   */\n  public labelText: string;\n\n  /**\n   *  This is the primary field used to identify each object in the results\n   */\n  public primaryKeyField: string;\n\n  /**\n   *  Property from supplied model used for the top part of the basic template\n   */\n  public primaryTextField: string;\n\n  /**\n   *  Property from supplied model used for the bottom part of the basic template\n   */\n  public secondaryTextField: string;\n\n  /**\n   * Mode of the model either allows a single item or multiple items\n   */\n  public selectionMode: SelectionMode = SelectionMode.SINGLE;\n}\n","import { Component, Input, TemplateRef, forwardRef } from '@angular/core';\nimport { SDSSelectedItemModel } from './models/sds-selectedItem.model';\nimport { SDSSelectedResultConfiguration } from './models/SDSSelectedResultConfiguration';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { SDSSelectedItemModelHelper } from './models/sds-selected-item-model-helper';\nconst SDS_SelectedResult_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SDSSelectedResultComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'sds-selected-result',\n  templateUrl: './selected-result.component.html',\n  styleUrls: ['./selected-result.component.scss'],\n  providers: [SDS_SelectedResult_VALUE_ACCESSOR]\n})\nexport class SDSSelectedResultComponent implements ControlValueAccessor {\n\n  /**\n  * Allow to insert a customized template for suggestions to use\n  */\n  @Input() itemTemplate: TemplateRef<any>;\n\n  /**\n   * The data model that has the selected item\n   */\n  public model: SDSSelectedItemModel;\n\n\n  /**\n  * Configuration for the Selected Results control \n  */\n  @Input()\n  public configuration: SDSSelectedResultConfiguration;\n\n  /**\n   * Stored Event for ControlValueAccessor\n   */\n  public onTouchedCallback: () => void = () => null;\n\n  /**\n   * Stored Event for ControlValueAccessor\n   */\n  public propogateChange: (_: any) => void = (_: any) => null;\n\n  @Input()\n  public disabled: boolean;\n\n  /**\n   * Removes item from the model\n   * @param item \n   */\n  removeItem(item: object) {\n    if (!this.disabled) {\n      SDSSelectedItemModelHelper.removeItem(item, this.configuration.primaryKeyField, this.model.items);\n      this.propogateChange(this.model);\n      this.onTouchedCallback();\n    }\n  }\n\n  writeValue(obj: any): void {\n    if (obj instanceof SDSSelectedItemModel) {\n      this.model = obj as SDSSelectedItemModel;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propogateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n\n  /**\n   * Gets the string value from the specifed properties of an object\n   * @param object \n   * @param propertyFields comma seperated list with periods depth of object\n   */\n  getObjectValue(object: Object, propertyFields: string): string {\n    let value = '';\n    let current = object;\n    let fieldSplit = propertyFields.split(',');\n    for (let i = 0; i < fieldSplit.length; i++) {\n      let fieldValue = fieldSplit[i];\n      let fieldPartSplit = fieldValue.split('.');\n      for (let j = 0; j < fieldPartSplit.length; j++) {\n        let fieldCheckValue = fieldPartSplit[j];\n        if (current) {\n          current = current[fieldCheckValue];\n        }\n      }\n\n      if (current) {\n        value += current.toString() + ' ';\n      }\n      current = object;\n    }\n    return value.trim();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SDSSelectedResultComponent } from './selected-result.component';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, RouterModule, FontAwesomeModule],\n  declarations: [SDSSelectedResultComponent],\n  exports: [SDSSelectedResultComponent]\n})\nexport class SdsSelectedResultsModule {}\n","export class KeyHelper {\n\n  private _allowedKeys: string[] = [];\n\n  private _currentlySupported = [\n    'enter','up','down','left','right','tab','esc','space',\n    'shift','backspace','1','2','3','4','5','6','7','8',\n    '9','0', 'delete'\n  ];\n\n  constructor (...keys) {\n    this._setAllowedKeys(...keys);\n  }\n\n  public isAllowed (event): boolean {\n    const val = this._allowedKeys\n      .reduce(\n        (val, key) => {\n          return KeyHelper.is(key, event) || val;\n        },\n        false\n      );\n    return val;\n  }\n\n  private _setAllowedKeys(...keys) {\n    keys.forEach(\n      key => {\n        if (this._currentlySupported.indexOf(key) !== -1) {\n          this._allowedKeys.push(key);\n        } else {\n          const ok = this._allowedToString();\n          const msg = `Only supports ${ok} at this time`;\n          throw new TypeError(msg);\n        }\n      }\n    );\n  }\n\n  private _allowedToString (): string {\n    return this._allowedKeys.join(', ');\n  }\n\n  public static getKeyCode (event: any): string {\n\n    if (!event) {\n      return undefined;\n    } else if (event.key) {\n      return event.key;\n    } else if (event.code) {\n      return event.code;\n    } else if (event.keyIdentifier) {\n      return event.keyIdentifier;\n    } else {\n      return undefined;\n    }\n\n  }\n\n  public static getNumberFromKey (event): number {\n    const tests = [\n      KeyHelper._zero, KeyHelper._one, KeyHelper._two,\n      KeyHelper._three, KeyHelper._four, KeyHelper._five,\n      KeyHelper._six, KeyHelper._seven, KeyHelper._eight,\n      KeyHelper._nine\n    ];\n\n    return tests.reduce(\n      (val: number | undefined, test: Function) => {\n        return val !== undefined\n          ? val\n          : test(event);\n      }, undefined\n    );\n  }\n\n  public static is (\n    validKeyParam: string,\n    event: KeyboardEvent | any): boolean {\n    let lowercased = validKeyParam.toLowerCase();\n    switch (lowercased) {\n      case 'enter':\n        return this._isEnter(event);\n      case 'up':\n        return this._isArrowUp(event);\n      case 'down':\n        return this._isArrowDown(event);\n      case 'left':\n        return this._isArrowLeft(event);\n      case 'right':\n        return this._isArrowRight(event);\n      case 'tab':\n        return this._isTab(event);\n      case 'esc':\n        return this._isEscape(event);\n      case 'space':\n        return this._isSpace(event);\n      case 'shift':\n        return this._isShift(event);\n      case 'backspace':\n        return this._isBackspace(event);\n      case 'delete':\n        return this._isDelete(event);\n      case '0':\n        return this._isExpectedNumber(0, event);\n      case '1':\n        return this._isExpectedNumber(1, event);\n      case '2':\n        return this._isExpectedNumber(2, event);\n      case '3':\n        return this._isExpectedNumber(3, event);\n      case '4':\n        return this._isExpectedNumber(4, event);\n      case '5':\n        return this._isExpectedNumber(5, event);\n      case '6':\n        return this._isExpectedNumber(6, event);\n      case '7':\n        return this._isExpectedNumber(7, event);\n      case '8':\n        return this._isExpectedNumber(8, event);\n      case '9':\n        return this._isExpectedNumber(9, event);\n      default:\n        return false;\n    }\n  }\n\n  private static _isEnter (e: KeyboardEvent | any) {\n    if (e.code === 'Enter'\n      || e.key === 'Enter'\n      || e.keyIdentifier === 'Enter'\n      || e.which === 13\n      || e.charCode === 13\n      || e.keyCode === 13) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isArrowUp (e: KeyboardEvent | any) {\n    if (e.code === 'ArrowUp'\n      || e.key === 'ArrowUp'\n      || e.key === 'Up'\n      || e.keyIdentifier === 'Up'\n      || e.which === 38\n      || e.keyCode === 38) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isArrowDown (e: KeyboardEvent | any) {\n    if (e.code === 'ArrowDown'\n      || e.key === 'ArrowDown'\n      || e.key === 'Down'\n      || e.keyIdentifier === 'Down'\n      || e.which === 40\n      || e.keyCode === 40) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isArrowLeft (e: KeyboardEvent | any) {\n    if (e.code === 'ArrowLeft'\n      || e.key === 'ArrowLeft'\n      || e.key === 'Left'\n      || e.keyIdentifier === 'Left'\n      || e.which === 37\n      || e.keyCode === 37) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isArrowRight (e: KeyboardEvent | any) {\n    if (e.code === 'ArrowRight'\n      || e.key === 'ArrowRight'\n      || e.key === 'Right'\n      || e.keyIdentifier === 'Right'\n      || e.which === 39\n      || e.keyCode === 39) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isTab (e: KeyboardEvent | any) {\n    if (e.code === 'Tab'\n      || e.key === 'Tab'\n      || e.keyIdentifier === 'U+0009'\n      || e.which === 9\n      || e.keyCode === 9) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isEscape (e: KeyboardEvent | any) {\n    if (e.code === 'Escape'\n      || e.key === 'Escape'\n      || e.key === 'Esc'\n      || e.keyIdentifier === 'U+001B'\n      || e.which === 27\n      || e.keyCode === 27) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isSpace (e: KeyboardEvent | any) {\n    if (e.code === 'Space'\n      || e.key === ' '\n      || e.key === 'Spacebar'\n      || e.keyIdentifier === 'U+0020'\n      || e.which === 32\n      || e.keyCode === 32) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isShift (e: KeyboardEvent | any) {\n    if (e.code === 'ShiftLeft'\n      || e.code === 'ShiftRight'\n      || e.key === 'Shift'\n      || e.keyIdentifier === 'Shift'\n      || e.which === 16\n      || e.keyCode === 16) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isBackspace (e: KeyboardEvent | any) {\n    if (e.code === 'Backspace'\n      || e.key === 'Backspace'\n      || e.keyIdentifier === 'U+0008'\n      || e.which === 8\n      || e.keyCode === 8) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _isDelete (e: KeyboardEvent | any) {\n    if (e.code === 'Delete'\n      || e.key === 'Delete'\n      || e.keyIdentifier === 'U+007F'\n      || e.which === 46\n      || e.keyCode === 46) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private static _zero (e): number {\n    if (e.code === 'Digit0'\n      || e.code === 'Numpad0'\n      || e.key === 0\n      || e.keyCode === 48\n      || e.keyCode === 96\n      || e.keyIdentifier === 'U+0030'\n      || e.which === 48) {\n      return 0;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _one (e): number {\n    if (e.code === 'Digit1'\n      || e.code === 'Numpad1'\n      || e.key === 1\n      || e.keyCode === 49\n      || e.keyCode === 97\n      || e.keyIdentifier === 'U+0031'\n      || e.which === 49) {\n      return 1;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _two (e): number {\n    if (e.code === 'Digit2'\n      || e.code === 'Numpad2'\n      || e.key === 2\n      || e.keyCode === 50\n      || e.keyCode === 98\n      || e.keyIdentifier === 'U+0032'\n      || e.which === 50) {\n      return 2;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _three (e): number {\n    if (e.code === 'Digit3'\n      || e.code === 'Numpad3'\n      || e.key === 3\n      || e.keyCode === 51\n      || e.keyCode === 99\n      || e.keyIdentifier === 'U+0033'\n      || e.which === 51) {\n      return 3;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _four (e): number {\n    if (e.code === 'Digit4'\n      || e.code === 'Numpad4'\n      || e.key === 4\n      || e.keyCode === 52\n      || e.keyCode === 100\n      || e.keyIdentifier === 'U+0034'\n      || e.which === 52) {\n      return 4;\n    } else {\n      return undefined;\n    }\n  }\n  private static _five (e): number {\n    if (e.code === 'Digit5'\n      || e.code === 'Numpad5'\n      || e.key === 5\n      || e.keyCode === 53\n      || e.keyCode === 101\n      || e.keyIdentifier === 'U+0035'\n      || e.which === 53) {\n      return 5;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _six (e): number {\n    if (e.code === 'Digit6'\n      || e.code === 'Numpad6'\n      || e.key === 6\n      || e.keyCode === 54\n      || e.keyCode === 102\n      || e.keyIdentifier === 'U+0036'\n      || e.which === 54) {\n      return 6;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _seven (e): number {\n    if (e.code === 'Digit7'\n      || e.code === 'Numpad7'\n      || e.key === 7\n      || e.keyCode === 55\n      || e.keyCode === 103\n      || e.keyIdentifier === 'U+0037'\n      || e.which === 55) {\n      return 7;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _eight (e): number {\n    if (e.code === 'Digit8'\n      || e.code === 'Numpad8'\n      || e.key === 8\n      || e.keyCode === 56\n      || e.keyCode === 104\n      || e.keyIdentifier === 'U+0038'\n      || e.which === 56) {\n      return 8;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _nine (e): number {\n    if (e.code === 'Digit9'\n      || e.code === 'Numpad9'\n      || e.key === 9\n      || e.keyCode === 57\n      || e.keyCode === 105\n      || e.keyIdentifier === 'U+0039'\n      || e.which === 57) {\n      return 9;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static _isExpectedNumber (expected, event)\n    : boolean {\n    return expected === KeyHelper.getNumberFromKey(event);\n  }\n\n}\n\nexport enum KEYS {\n  'ENTER' = 'enter',\n  'UP' = 'up',\n  'DOWN' = 'down',\n  'LEFT' = 'left',\n  'RIGHT' = 'right',\n  'TAB' = 'tab',\n  'ESC' = 'esc',\n  'SPACE' = 'space',\n  'SHIFT' = 'shift',\n  'BACKSPACE' = 'backspace',\n  'ONE' = '1',\n  'TWO' = '2',\n  'THREE' = '3',\n  'FOUR' = '4',\n  'FIVE' = '5',\n  'SIX' = '6',\n  'SEVEN' = '7',\n  'EIGHT' = '8',\n  'NINE' = '9',\n  'ZERO' = '0',\n  'DELETE' = 'delete'\n}\n\n","import {\n  Component,\n  Input,\n  ViewChild,\n  TemplateRef,\n  ElementRef,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { SDSAutocompleteServiceInterface } from './models/SDSAutocompleteServiceInterface';\nimport { KeyHelper, KEYS } from '../key-helper/key-helper';\nimport { SDSSelectedItemModel } from '../selected-result/models/sds-selectedItem.model';\nimport {\n  SelectionMode,\n  SDSSelectedItemModelHelper\n} from '../selected-result/models/sds-selected-item-model-helper';\nimport { SDSAutocompleteSearchConfiguration } from './models/SDSAutocompleteConfiguration';\nconst Autocomplete_Autocomplete_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SDSAutocompleteSearchComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'sds-search-autocomplete',\n  templateUrl: './autocomplete-search.component.html',\n  styleUrls: ['./autocomplete-search.component.scss'],\n  providers: [Autocomplete_Autocomplete_VALUE_ACCESSOR]\n})\nexport class SDSAutocompleteSearchComponent implements ControlValueAccessor {\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n  /**\n   * Ul list of elements\n   */\n  @ViewChild('resultsList') resultsListElement: ElementRef;\n\n  /**\n   * input control\n   */\n  @ViewChild('input') input: ElementRef;\n\n  /**\n   * Allow to insert a customized template for suggestions to use\n   */\n  @Input() itemTemplate: TemplateRef<any>;\n\n  /**\n   * The data model that has the selected item\n   */\n  public model: SDSSelectedItemModel;\n\n  /**\n   * Configuration for the Autocomplete control\n   */\n  @Input()\n  public configuration: SDSAutocompleteSearchConfiguration;\n\n  /**\n   * Instance of the SamHiercarchicalServiceInterface provided\n   */\n  @Input()\n  public service: SDSAutocompleteServiceInterface;\n\n  /**\n   * Timer id for the timer awaiting the service call for more typeing\n   */\n  private timeoutNumber: number;\n\n  /**\n   *  result set to be rendered\n   */\n  results: object[];\n\n  /**\n   * max number of results to be shown\n   */\n  private maxResults: number;\n\n  /**\n   * selected index\n   */\n  public highlightedIndex: number = 0;\n\n  /**\n   * highlighted object in drop down\n   */\n  private highlightedItem: object;\n\n  /**\n   * value of the input field\n   */\n  public inputValue: string = '';\n\n  /**\n   * Proprty being set on the object is highlighted\n   */\n  private HighlightedPropertyName = 'highlighted';\n\n  public showLoad: boolean = true;\n\n  /**\n   * Search string\n   */\n  private searchString: string = null;\n\n  /**\n   * Message announced by screen readers when\n   * autocomplete results are updated or new item\n   * is highlighted\n   */\n  public srOnlyText: string;\n\n  /**\n   * To make input readonly\n   */\n  @Input() public inputReadOnly = false;\n\n  /**\n   * Used to store selected items\n   */\n  items = [];\n  /**\n   * Stored Event for ControlValueAccessor\n   */\n  public onTouchedCallback: () => void = () => null;\n\n  /**\n   * Stored Event for ControlValueAccessor\n   */\n  public propogateChange: (_: any) => void = (_: any) => null;\n\n  @Input()\n  public disabled: boolean;\n\n  private resultsAvailableMessage: string =\n    ' results available. Use up and down arrows\\\n  to scroll through results. Hit enter to select.';\n\n  private index = 0;\n  /**\n   * Gets the string value from the specifed properties of an object\n   * @param object\n   * @param propertyFields comma seperated list with periods depth of object\n   */\n  getObjectValue(object: Object, propertyFields: string): string {\n    let value = '';\n    let current = object;\n    let fieldSplit = propertyFields.split(',');\n    for (let i = 0; i < fieldSplit.length; i++) {\n      let fieldValue = fieldSplit[i];\n      let fieldPartSplit = fieldValue.split('.');\n      for (let j = 0; j < fieldPartSplit.length; j++) {\n        let fieldCheckValue = fieldPartSplit[j];\n        if (current) {\n          current = current[fieldCheckValue];\n        }\n      }\n\n      if (current) {\n        value += current.toString() + ' ';\n      }\n      current = object;\n    }\n    return value.trim();\n  }\n\n  /**\n   * Determines if the dropdown should be shown\n   */\n  public showResults = false;\n\n  /**\n   * Clears the input fields and value\n   */\n  public clearInput(): void {\n    this.inputValue = '';\n    this.onTouchedCallback();\n    this.clearAndHideResults();\n  }\n\n  /**\n   *\n   * @param event\n   */\n  checkForFocus(event): void {\n    this.focusRemoved();\n    this.showResults = false;\n  }\n\n  /**\n   *\n   */\n  private focusRemoved() {\n    if (this.configuration) {\n      if (this.configuration.selectionMode === SelectionMode.SINGLE) {\n        if (this.model.items.length > 0) {\n          if (this.inputValue.length === 0) {\n            SDSSelectedItemModelHelper.clearItems(this.model.items);\n            this.propogateChange(this.model);\n          } else {\n            this.inputValue = this.getObjectValue(\n              this.model.items[0],\n              this.configuration.primaryTextField\n            );\n          }\n        }\n      } else {\n        this.inputValue = '';\n      }\n    } else {\n      this.inputValue = '';\n    }\n  }\n\n  onkeypress(ev) {\n    return this.configuration.inputReadOnly ? false : true;\n  }\n  textChange(event) {\n    if (!this.configuration.isTagModeEnabled) {\n      // ie 11 placeholders will incorrectly trigger input events (known bug)\n      // if input isn't active element then don't do anything\n      if (event.target != document.activeElement) {\n        event.preventDefault();\n        return;\n      }\n      const searchString = event.target.value || '';\n      this.getResults(searchString);\n    }\n  }\n\n  /**\n   * Event method used when focus is gained to the input\n   */\n  inputFocusHandler(): void {\n    if (!this.configuration.isTagModeEnabled) {\n      if (this.configuration.focusInSearch) {\n        this.getResults(this.inputValue || '');\n      }\n      this.onTouchedCallback();\n    }\n  }\n\n  /**\n   * Key event\n   * @param event\n   */\n  onKeydown(event): void {\n    if (KeyHelper.is(KEYS.TAB, event)) {\n      return;\n    } else if (KeyHelper.is(KEYS.BACKSPACE, event)) {\n      if (this.configuration.inputReadOnly) {\n        event.preventDefault();\n      }\n    } else if (KeyHelper.is(KEYS.DOWN, event)) {\n      this.onArrowDown();\n    } else if (KeyHelper.is(KEYS.UP, event)) {\n      event.preventDefault();\n      this.onArrowUp();\n    } else if (KeyHelper.is(KEYS.ENTER, event) && this.highlightedIndex >= 0) {\n      if (this.configuration.isTagModeEnabled) {\n        const val = this.createFreeTextItem();\n        this.selectItem(val);\n      } else {\n        this.selectItem(this.highlightedItem);\n      }\n    } else if (KeyHelper.is(KEYS.ENTER, event) && this.highlightedIndex < 0) {\n      const val = this.createFreeTextItem();\n      this.selectItem(val);\n    } else if (KeyHelper.is(KEYS.ESC, event)) {\n      if (this.showResults) {\n        this.clearAndHideResults();\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n      }\n    }\n  }\n\n  /**\n   * selects the item adding it to the model and closes the results\n   * @param item\n   */\n  public selectItem(item: object): void {\n    SDSSelectedItemModelHelper.addItem(\n      item,\n      this.configuration.primaryKeyField,\n      this.configuration.selectionMode,\n      this.items\n    );\n\n    setTimeout(() => {\n      this.model.items = [...this.items];\n      this.propogateChange(this.model);\n    }, 0);\n    let message = this.getObjectValue(\n      item,\n      this.configuration.primaryTextField\n    );\n    this.inputValue = message;\n    this.focusRemoved();\n    this.showResults = false;\n  }\n\n  /**\n   *  clears the results and closes result drop down\n   */\n  private clearAndHideResults(): void {\n    this.results = [];\n    this.showResults = false;\n    this.focusRemoved();\n  }\n\n  /**\n   *  handles the arrow up key event\n   */\n  private onArrowUp(): void {\n    if (this.results && this.results.length > 0) {\n      if (this.highlightedIndex >= 0) {\n        this.highlightedIndex--;\n        this.setHighlightedItem(this.results[this.highlightedIndex]);\n        this.scrollSelectedItemIntoView();\n      }\n    }\n  }\n\n  /**\n   *  handles the arrow down key event\n   */\n  private onArrowDown(): void {\n    if (this.results && this.results.length > 0) {\n      if (this.highlightedIndex < this.results.length - 1) {\n        this.highlightedIndex++;\n        this.setHighlightedItem(this.results[this.highlightedIndex]);\n        this.scrollSelectedItemIntoView();\n      }\n    }\n  }\n\n  showFreeText() {\n    if (this.configuration.isFreeTextEnabled) {\n      if (this.inputValue) {\n        if (this.inputValue.length !== 0) {\n          let foundItem = false;\n          if (this.results) {\n            for (var i = 0; i < this.results.length && !foundItem; i++) {\n              let item = this.results[i];\n              foundItem =\n                item[this.configuration.primaryTextField] === this.inputValue;\n            }\n          }\n          if (this.model.items.length > 0 && !foundItem) {\n            for (var i = 0; i < this.model.items.length && !foundItem; i++) {\n              let item = this.model.items[i];\n              foundItem =\n                item[this.configuration.primaryTextField] === this.inputValue;\n            }\n          }\n\n          return !foundItem;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return this.configuration.isFreeTextEnabled;\n    }\n  }\n\n  private createFreeTextItem() {\n    let item = { type: 'custom' };\n    item[this.configuration.primaryTextField] = this.inputValue;\n    item[this.configuration.primaryKeyField] = this.inputValue;\n    return item;\n  }\n\n  /**\n   *  gets the inital results\n   * @param searchString\n   */\n  private getResults(searchString: string): void {\n    if (searchString.length >= this.configuration.minimumCharacterCountSearch) {\n      if (\n        !this.matchPastSearchString(searchString) ||\n        (this.matchPastSearchString(searchString) && !this.showResults) ||\n        this.matchPastSearchString('')\n      ) {\n        this.searchString = searchString;\n        window.clearTimeout(this.timeoutNumber);\n        this.timeoutNumber = window.setTimeout(() => {\n          this.showLoad = true;\n          this.service.getDataByText(0, searchString).subscribe(result => {\n            this.results = result.items;\n            this.showLoad = false;\n            this.maxResults = result.totalItems;\n\n            this.highlightedIndex = this.configuration.isFreeTextEnabled\n              ? -1\n              : 0;\n            if (!this.configuration.isFreeTextEnabled) {\n              this.setHighlightedItem(this.results[this.highlightedIndex]);\n            }\n            this.showResults = true;\n            this.addScreenReaderMessage(\n              this.maxResults + ' ' + this.resultsAvailableMessage\n            );\n            this._changeDetectorRef.markForCheck();\n          });\n        }, this.configuration.debounceTime);\n      }\n    }\n  }\n\n  /**\n   * Checks if the new search string matches the old search string\n   * @param searchString\n   */\n  private matchPastSearchString(searchString: string) {\n    return this.searchString === searchString;\n  }\n\n  /**\n   * highlights the index being hovered\n   * @param index\n   */\n  listItemHover(index: number): void {\n    this.highlightedIndex = index;\n    this.setHighlightedItem(this.results[this.highlightedIndex]);\n  }\n\n  /**\n   * Scroll Event Handler (Calculates if mpre items should be asked for from service on scrolling down)\n   */\n  onScroll() {\n    if (this.maxResults > this.results.length) {\n      let scrollAreaHeight = this.resultsListElement.nativeElement.offsetHeight;\n      let scrollTopPos = this.resultsListElement.nativeElement.scrollTop;\n      let scrollAreaMaxHeight = this.resultsListElement.nativeElement\n        .scrollHeight;\n      if (scrollTopPos + scrollAreaHeight * 2 >= scrollAreaMaxHeight) {\n        this.getAdditionalResults();\n      }\n    }\n  }\n\n  /**\n   * gets more results based when scrolling and adds the items\n   */\n  private getAdditionalResults() {\n    this.showLoad = true;\n    this.service\n      .getDataByText(this.results.length, this.searchString)\n      .subscribe(result => {\n        for (let i = 0; i < result.items.length; i++) {\n          this.addResult(result.items[i]);\n        }\n        this.showLoad = false;\n        this.maxResults = result.totalItems;\n      });\n  }\n\n  /**\n   * adds a single item to the list\n   * @param item\n   */\n  private addResult(item: object) {\n    //add check to make sure item does not exist\n    this.results.push(item);\n  }\n\n  /**\n   * When paging up and down with arrow key it sets the highlighted item into view\n   */\n  private scrollSelectedItemIntoView() {\n    if (this.highlightedIndex >= 0) {\n      const selectedChild = this.resultsListElement.nativeElement.children[\n        this.highlightedIndex\n      ];\n      selectedChild.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'start'\n      });\n    }\n  }\n\n  /**\n   * Sets the highlighted item by keyboard or mouseover\n   * @param item\n   */\n  private setHighlightedItem(item: Object): void {\n    if (this.results && this.results.length > 0) {\n      if (this.highlightedItem) {\n        this.highlightedItem[this.HighlightedPropertyName] = false;\n      }\n      let message = '';\n      if (item) {\n        this.highlightedItem = item;\n        this.highlightedItem[this.HighlightedPropertyName] = true;\n        message = item[this.configuration.primaryTextField];\n        if (\n          this.configuration.secondaryTextField &&\n          item[this.configuration.secondaryTextField]\n        ) {\n          message += ': ' + item[this.configuration.secondaryTextField];\n        }\n      } else {\n        this.highlightedItem = undefined;\n        message = 'No item selected';\n      }\n      this.addScreenReaderMessage(message);\n    }\n  }\n\n  /**\n   * Adds message to be read by screen reader\n   * @param message\n   */\n  private addScreenReaderMessage(message: string) {\n    this.srOnlyText = message;\n  }\n\n  writeValue(obj: any): void {\n    if (obj instanceof SDSSelectedItemModel) {\n      this.model = obj as SDSSelectedItemModel;\n      this._changeDetectorRef.markForCheck();\n      if (this.model.items.length === 0) {\n        this.inputValue = '';\n      } else {\n        if (this.configuration.selectionMode === SelectionMode.SINGLE) {\n          this.inputValue = this.getObjectValue(\n            this.model.items[0],\n            this.configuration.primaryTextField\n          );\n        }\n      }\n    }\n  }\n  getClass() {\n    return this.configuration.inputReadOnly &&\n      this.configuration.selectionMode === SelectionMode.MULTIPLE\n      ? 'hide-cursor'\n      : '';\n  }\n\n  registerOnChange(fn: any): void {\n    this.propogateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import {\n  Directive, ElementRef,\n  Output, EventEmitter,\n  HostListener\n} from '@angular/core';\n\n/**\n * The <sam-click-outside> directive can detect whether a click is made inside \n * the target\n */\n@Directive({\n  selector: '[sds-click-outside]'\n})\nexport class SDSClickOutsideDirective {\n  /**\n  * Event emitted when clicked outside the target\n  */\n  @Output() clickOutside = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) { }\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(targetElement) {\n    const clickedInside =\n      this._elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.clickOutside.emit(undefined);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SDSClickOutsideDirective } from './click-outside.directive';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule\n  ],\n  declarations: [SDSClickOutsideDirective],\n  exports: [SDSClickOutsideDirective]\n})\nexport class SDSClickOutsideModule { }\n","import {\n  Directive, ElementRef, Output,\n  EventEmitter, HostListener\n} from '@angular/core';\n\n\n@Directive({\n  selector: '[sds-tab-outside]'\n})\nexport class SDSTabOutsideDirective {\n  /**\n   * Emitter for tabOutside event\n   */\n  @Output() tabOutside: EventEmitter<any> = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) { }\n\n  @HostListener('document:keyup', ['$event.target'])\n  public hasFocusChanged(target) {\n    const isInsideHost = this._elementRef.nativeElement.contains(target);\n    if (!isInsideHost) {\n      this.tabOutside.emit(undefined);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SDSTabOutsideDirective } from './taboutside.directive';\n@NgModule({\n  imports: [\n    CommonModule, FormsModule\n  ],\n  declarations: [SDSTabOutsideDirective],\n  exports: [SDSTabOutsideDirective]\n})\nexport class SdsTabOutsideModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SDSAutocompleteSearchComponent } from './autocomplete-search.component';\nimport { SDSClickOutsideModule } from '../click-outside/click-outside.module';\nimport { SdsTabOutsideModule } from '../tab-outside/taboutside.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SDSClickOutsideModule,\n    SdsTabOutsideModule,\n    FontAwesomeModule\n  ],\n  declarations: [SDSAutocompleteSearchComponent],\n  exports: [SDSAutocompleteSearchComponent]\n})\nexport class SdsAutocompleteSearchModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SDSAutocompleteComponent } from './autocomplete.component';\nimport { RouterModule } from '@angular/router';\nimport { SdsSelectedResultsModule } from '../selected-result/selected-result.module';\nimport { SdsAutocompleteSearchModule } from '../autocomplete-search/autocomplete-search.module';\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, SdsSelectedResultsModule, SdsAutocompleteSearchModule\n  ],\n  declarations: [SDSAutocompleteComponent],\n  exports: [SDSAutocompleteComponent]\n})\nexport class SdsAutocompleteModule { }\n","import { Observable } from 'rxjs';\nexport interface SDSAutocompleteServiceInterface {\n    /**\n     * \n     * @param searchValue \n     */\n    getDataByText(currentItems: number, searchValue?: string): Observable<SDSHiercarchicalServiceResult>;\n}\n\nexport interface SDSHiercarchicalServiceResult {\n    /**\n     * \n     */\n    items: object[];\n\n    /**\n     * \n     */\n    totalItems: number;\n}\n\nexport class SDSHiercarchicalServiceSearchItem {\n\n    /**\n     * \n     */\n    id: string;\n\n    /**\n     * \n     */\n    searchValue: string;\n\n    /**\n     * \n     */\n    // sort: Sort;\n\n    /**\n     * \n     */\n    currentItemCount: number;\n}\n\n","import { INavigationLink, NavigationMode, Selectable } from '../../common-navigation/common-navigation-model';\n\nexport class SideNavigationModel {\n\n    /**\n     * \n     */\n    navigationLinks: NavigationLink[];\n}\n\n\nexport class NavigationLink implements Selectable, INavigationLink {\n\n    /**\n     * Internal Angualr Routes, External HREF, EVENT: event on parent component\n     */\n    mode: NavigationMode;\n\n    /**\n     * Text to be displayed in the link or button\n     */\n    text: string;\n\n    /**\n     * Navigation Route \n     */\n    route: string;\n\n    /**\n     * List of child navigation items that will show when no route is provieded\n     */\n    children?: NavigationLink[];\n\n    /**\n     * Identifier for the item when search for selected \n     */\n    id: string;\n\n    /**\n     * Status of if the item is selected \n     */\n    selected?: boolean;\n\n\n    /**\n     * Query string paramaters supporeted with external and internal links\n     * ex. { 'name': 'value',...}\n     */\n    queryParams?: {\n        [k: string]: any;\n    }\n\n}\n\n\n\n\n","import { Component, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\nimport { SideNavigationModel, NavigationLink } from './model/side-navigation-model';\nimport { INavigationLink, NavigationMode } from '../common-navigation/common-navigation-model';\nimport { NavigationHelper } from '../common-navigation/navigation-helper';\n\n@Component({\n  selector: 'sds-side-navigation',\n  templateUrl: './side-navigation.component.html',\n  styleUrls: ['./side-navigation.component.scss']\n})\nexport class SdsSideNavigationComponent {\n\n  /**\n   * Reference to the the Template used for internal links\n   */\n  @ViewChild('sideNavRouteLinkTemplate')\n  private sideNavRouteLinkTemplate: TemplateRef<any>;\n\n  /**\n   * Reference to the the Template used for side menu items that are a label\n   */\n  @ViewChild('sideNavLabelLinkTemplate')\n  private sideNavLabelLinkTemplate: TemplateRef<any>;\n\n  /**\n   * Reference to the the Template used for external href \n   */\n  @ViewChild('sideNavHREFLinkTemplate')\n  private sideNavHREFLinkTemplate: TemplateRef<any>;\n\n  /**\n   * Reference to the the Template used for event response\n   */\n  @ViewChild('sideNavEVENTLinkTemplate')\n  private sideNavEVENTLinkTemplate: TemplateRef<any>;\n\n  /**\n   * Takes the navigation item and returns the template to be used\n   * @param item navigation item\n   */\n  getItemTemplate(item: NavigationLink): TemplateRef<any> {\n    let template = null;\n    switch (item.mode) {\n      case NavigationMode.EVENT:\n        template = this.sideNavEVENTLinkTemplate;\n        break;\n      case NavigationMode.EXTERNAL:\n        template = this.sideNavHREFLinkTemplate;\n        break;\n      case NavigationMode.INTERNAL:\n        template = this.sideNavRouteLinkTemplate;\n        break;\n      case NavigationMode.LABEL:\n        template = this.sideNavLabelLinkTemplate;\n        break;\n      default:\n        template = null;\n        break;\n    }\n    return template;\n  }\n\n  /**\n   * Navigation helper\n   */\n  navigationHelper = new NavigationHelper();\n\n  /**\n   * Model used for the different display portions of the side navigation \n   */\n  @Input() model: SideNavigationModel;\n\n  /**\n   * Selects new item and parents and deselects previous\n   * @param id \n   */\n  select(id: string) {\n    this.deselect();\n    for (let i = 0; i < this.model.navigationLinks.length; i++) {\n      let item = this.model.navigationLinks[i];\n      this.selectItem(id, item, null);\n    }\n  }\n\n  /**\n   * Selects item if matches passed in id and will select parent\n   * @param id \n   * @param item \n   * @param parent \n   */\n  private selectItem(id: string, item: NavigationLink, parent: NavigationLink) {\n    if (item.id === id) {\n      item.selected = true;\n      if (parent) {\n        parent.selected = true;\n      }\n    } else {\n      if (item.children) {\n        for (let i = 0; i < item.children.length; i++) {\n          let childItem = item.children[i];\n          this.selectItem(id, childItem, item);\n        }\n        if (item.selected) {\n          if (parent) {\n            parent.selected = true;\n          }\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Deselects all the items in the side navigation model\n   */\n  deselect() {\n    if (this.model) {\n      if (this.model.navigationLinks) {\n        for (let i = 0; i < this.model.navigationLinks.length; i++) {\n          this.deselectItem(this.model.navigationLinks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * checks if item is selected and if selcted will check children and will unselect\n   */\n  private deselectItem(item: NavigationLink) {\n    if (item.selected) {\n      item.selected = false;\n      if (item.children) {\n        for (let i = 0; i < item.children.length; i++) {\n          this.deselectItem(item.children[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * event for event based\n   */\n  @Output()\n  linkEvent = new EventEmitter<INavigationLink>();\n\n  /**\n   * Link clicked and emits the link data into an event\n   * @param link \n   */\n  linkClickEvent(link: INavigationLink) {\n    this.linkEvent.emit(link);\n    return false;\n  }\n\n  /**\n   * creates url from provided route and query params\n   * @param item \n   */\n  urlBuilder(item: NavigationLink) {\n    let url = item.route;\n    let queryParams = this.queryStringBuilder(item);\n    if (queryParams) {\n      if (url.indexOf('?') === -1) {\n        url += '?' + queryParams;\n      } else if (url.indexOf('?') === url.length - 1) {\n        url += queryParams;\n      } else {\n        url += '&' + queryParams;\n      }\n    }\n    return url;\n  }\n\n  /**\n   * creates query string\n   * @param item \n   */\n  private queryStringBuilder(item: NavigationLink) {\n    const ret = [];\n    for (let d in item.queryParams) {\n      ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(item.queryParams[d]));\n    }\n    return ret.join('&');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SdsSideNavigationComponent } from './side-navigation.component';\nimport { RouterModule } from '@angular/router';\nimport { SdsAccordionModule } from '../accordion/accordion.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, SdsAccordionModule\n  ],\n  declarations: [SdsSideNavigationComponent],\n  exports: [SdsSideNavigationComponent]\n})\nexport class SdsSideNavigationModule { }\n","import { Component, Input, ContentChild, TemplateRef } from '@angular/core';\n@Component({\n  selector: 'sds-search-result-list',\n  templateUrl: './search-result-list.component.html',\n  styleUrls: ['./search-result-list.component.scss']\n})\nexport class SdsSearchResultListComponent {\n\n  /**\n   * List of items\n   */\n  @Input() model: any[];\n\n  /**\n   * Show divider between results\n   */\n  @Input() divider = true;\n\n  /**\n   * Child Template to be used to display the data for each item in the list of items\n   */\n  @ContentChild('resultContent') resultContentTemplate: TemplateRef<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SdsSearchResultListComponent } from './search-result-list.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, FontAwesomeModule\n  ],\n  declarations: [SdsSearchResultListComponent],\n  exports: [SdsSearchResultListComponent]\n})\nexport class SdsSearchResultListModule {\n \n }\n","import { INavigationLink, NavigationMode, Selectable } from '../../common-navigation/common-navigation-model';\n\n\nexport interface HeaderModel {\n\n    /**\n     * Header logo and header logo home link\n     */\n    home: HeaderHome;\n\n    /**\n     * List of secondary links\n     */\n    secondaryLinks: HeaderSecondaryLink[];\n\n    /**\n     * List of main navigaation links/drop downs\n     */\n    navigationLinks: HeaderNavigationLink[];\n}\n\n\nexport class HeaderHome implements Selectable, INavigationLink {\n\n    /**\n     * Internal Angualr Routes, External HREF, EVENT: event on parent component\n    */\n    mode: NavigationMode;\n\n    /**\n     * Text for the Header\n     */\n    text: string;\n\n    /**\n     * Agency Logo for the Header\n     */\n    logo: string;\n\n    /**\n     * Navigation Route for Home image button\n     */\n    route: string;\n\n    /**\n    * Identifier for the item when search for selected\n    */\n    id: string;\n\n    /**\n     * Status of if the item is selected\n     */\n    selected?: boolean;\n}\n\n/**\n *\n */\nexport class HeaderNavigationLink implements Selectable, INavigationLink {\n\n    /**\n     * Internal Angualr Routes, External HREF, EVENT: event on parent component\n     */\n    mode: NavigationMode;\n\n    /**\n     * Text to be displayed in the link or button\n     */\n    text: string;\n\n    /**\n     * Navigation Route\n     */\n    route: string;\n\n    /**\n     * List of child navigation items that will show when no route is provieded\n     */\n    children?: HeaderNavigationLink[];\n\n    /**\n     * Identifier for the item when search for selected\n     */\n    id: string;\n\n    /**\n     * Status of if the item is selected\n     */\n    selected?: boolean;\n}\n\n\nexport class HeaderSecondaryLink implements Selectable, INavigationLink {\n\n    /**\n     * Internal Angualr Routes, External HREF, EVENT: event on parent component\n     */\n    mode: NavigationMode;\n\n    /**\n     * Text to be displayed in the link\n     */\n    text: string;\n\n    /**\n     * Navigation Route\n     */\n    route: string;\n\n    /**\n     * image class eg. fas\n     */\n    imageClassPrefix: string;\n\n    /**\n     * image class\n     */\n    imageClass: string;\n\n    /**\n     * displays counter with image\n     */\n    hasCounter?: boolean;\n\n    /**\n     * Identifier for the item when search for selected\n     */\n    id: string;\n\n    /**\n     * Status of if the item is selected\n     */\n    selected?: boolean;\n}\n","import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  group,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const sdsMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n} = {\n  transformMenu: trigger('transformMenu', [\n    state(\n      'void',\n      style({\n        opacity: 0,\n        transform: 'scale(0.8)'\n      })\n    ),\n    transition(\n      'void => enter',\n      group([\n        query(\n          '.sds-menu',\n          animate(\n            '100ms linear',\n            style({\n              opacity: 1\n            })\n          )\n        ),\n        animate(\n          '120ms cubic-bezier(0, 0, 0.2, 1)',\n          style({ transform: 'scale(1)' })\n        )\n      ])\n    ),\n    transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n  ])\n};\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  OnInit\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport {\n  ESCAPE,\n  DOWN_ARROW,\n  UP_ARROW,\n  HOME,\n  END,\n  hasModifierKey\n} from '@angular/cdk/keycodes';\nimport { FocusKeyManager, FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subscription } from 'rxjs';\nimport { sdsMenuAnimations } from './menu-animations';\nimport { SdsMenuItemComponent } from './menu-item.component';\n\n/** Menu Positions */\nexport type MenuPositionX = 'before' | 'after';\nexport type MenuPositionY = 'above' | 'below';\n\n/** Menu available sizes */\n// sm = 'small'\nexport type MenuSizes = 'sm';\n\n/** Injection token used to provide the parent menu to menu items. */\nexport const SDS_MENU_TOKEN = new InjectionToken<SdsMenuInterface>(\n  'SDS_MENU_TOKEN'\n);\n\n/** Menu Interface */\nexport interface SdsMenuInterface<T = any> {\n  xPosition: MenuPositionX;\n  yPosition: MenuPositionY;\n  overlapTrigger: boolean;\n  templateRef: TemplateRef<any>;\n  closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n  parentMenu?: SdsMenuInterface;\n  size?: MenuSizes;\n  focusFirstItem: (origin?: FocusOrigin) => void;\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\n  addItem?: (item: T) => void;\n  insertItem?: (item: T, index: number) => void;\n  removeItem?: (item: T) => void;\n}\n\n@Component({\n  selector: 'sds-menu',\n  exportAs: 'sdsMenu',\n  templateUrl: 'menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [sdsMenuAnimations.transformMenu],\n  providers: [\n    { provide: SDS_MENU_TOKEN, useExisting: SdsMenuComponent }\n  ]\n})\nexport class SdsMenuComponent\n  implements\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    SdsMenuInterface<SdsMenuItemComponent> {\n  /** After | Before the menu triger element */\n  private _xPosition: MenuPositionX = 'after';\n\n  /** Above | Below the menu triger element */\n  private _yPosition: MenuPositionY = 'below';\n\n  /** Manage browser focus */\n  private _keyManager: FocusKeyManager<SdsMenuItemComponent>;\n\n  /** Menu items inside the current menu. */\n  private _items: SdsMenuItemComponent[] = [];\n\n  /** Subscription to tab events on the menu panel */\n  private _tabSubscription = Subscription.EMPTY;\n\n  /** Stores <sds-menu> classes */\n  private _previousPanelClass: string;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: { [key: string]: boolean } = {};\n\n  /** Current state of the panel animation. */\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  /** Grab the component template */\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  /**\n   * Size of menu component.\n   * Affects the font-size of the menu items and\n   * the size of the close button in the menu header\n   */\n  @Input() size: MenuSizes;\n\n  /** Position of the menu in the X axis. */\n  @Input()\n  get xPosition(): MenuPositionX {\n    return this._xPosition;\n  }\n  set xPosition(value: MenuPositionX) {\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  @Input()\n  get yPosition(): MenuPositionY {\n    return this._yPosition;\n  }\n  set yPosition(value: MenuPositionY) {\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Whether menu panel overlaps trigger element */\n  @Input()\n  get overlapTrigger(): boolean {\n    return this._overlapTrigger;\n  }\n  set overlapTrigger(value: boolean) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  private _overlapTrigger = false;\n\n  /** Transfer classes from the sds-menu to the overlay container */\n  @Input('class')\n  set panelClass(classes: string) {\n    const previousPanelClass = this._previousPanelClass;\n    // Remove previous classes from current set of classes\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach((className: string) => {\n        this._classList[className] = false;\n      });\n    }\n\n    this._previousPanelClass = classes;\n\n    // Adds new classes to current set of classes\n    if (classes && classes.length) {\n      classes.split(' ').forEach((className: string) => {\n        this._classList[className] = true;\n      });\n\n      // Remove all classes from <sds-menu>\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n\n  /** Event emitted when the menu is closed. */\n  @Output() closed = new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>) {}\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<SdsMenuItemComponent>(\n      this._items\n    ).withWrap();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() =>\n      this.closed.emit('tab')\n    );\n  }\n\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  /** Focus the first item in the menu */\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n  }\n\n  /** Adds classes to the menu panel based on its position */\n  setPositionClasses(\n    posX: MenuPositionX = this.xPosition,\n    posY: MenuPositionY = this.yPosition\n  ) {\n    const classes = this._classList;\n    classes['sds-menu-before'] = posX === 'before';\n    classes['sds-menu-after'] = posX === 'after';\n    classes['sds-menu-above'] = posY === 'above';\n    classes['sds-menu-below'] = posY === 'below';\n  }\n\n  /** Adds a menu item with the menu. */\n  addItem(item: SdsMenuItemComponent) {\n    if (this._items.indexOf(item) === -1) {\n      this._items.push(item);\n    }\n  }\n\n  /** Inserts a menu item at an index */\n  insertItem(item: SdsMenuItemComponent, index: number) {\n    if (this._items.indexOf(item) === -1 && index < this._items.length) {\n      this._items.splice(index, 0, item);\n    }\n  }\n\n  /** Removes an item from the menu. */\n  removeItem(item: SdsMenuItemComponent) {\n    const index = this._items.indexOf(item);\n    if (this._items.indexOf(item) > -1) {\n      this._items.splice(index, 1);\n    }\n  }\n\n  /** Handle a keyboard event from the menu */\n  _handleKeydown(event: KeyboardEvent) {\n    // tslint:disable-next-line: deprecation\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    switch (keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n        break;\n      case HOME:\n      case END:\n        if (!hasModifierKey(event)) {\n          keyCode === HOME\n            ? manager.setFirstItemActive()\n            : manager.setLastItemActive();\n          event.preventDefault();\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event: AnimationEvent) {}\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    this._panelAnimationState = 'void';\n  }\n\n  _onAnimationStart(event: AnimationEvent) {\n    // Scroll the content element to the top as soon as the animation starts.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sds-menu-header',\n  templateUrl: 'menu-header.component.html'\n})\nexport class SdsMenuHeaderComponent {\n  @Input() hideClose = false;\n}\n","import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  Inject,\n  Input,\n  HostBinding,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Optional\n} from '@angular/core';\nimport { FocusableOption, FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SDS_MENU_TOKEN, SdsMenuInterface } from './menu.component';\nimport { SdsMenuHeaderComponent } from './menu-header.component';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: '[sds-menu-item]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SdsMenuItemComponent implements FocusableOption, OnDestroy {\n  /** Menu item class */\n  @HostBinding('class') class = this._getClass();\n\n  /** ARIA role for the menu item. */\n  @HostBinding('attr.role') @Input() role: 'menuitem' = 'menuitem';\n\n  /** Menu item tab index */\n  @HostBinding('attr.tabIndex') tabIndex = this.disabled ? '-1' : '0';\n\n  /** Holds the disable status value */\n  private _disabled = false;\n\n  /** Whether the menu item should be disabled */\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _focusMonitor: FocusMonitor,\n    @Inject(SDS_MENU_TOKEN)\n    private _parentMenu: SdsMenuInterface<SdsMenuItemComponent>,\n    @Optional() private _parentMenuHeader: SdsMenuHeaderComponent\n  ) {\n    // Start listening to focus changes\n    _focusMonitor.monitor(this._elementRef, false);\n    // Add this menu item to its parent menu\n    // If item its inside a header\n    // add it as the first item in the list\n    if (_parentMenuHeader) {\n      _parentMenu.insertItem(this, 0);\n    } else {\n      _parentMenu.addItem(this);\n    }\n  }\n\n  /** Get item class */\n  _getClass(): string {\n    const headerButtonSmall =\n      this._parentMenu.size === 'sm' ? 'sds-button--small' : '';\n    return this._parentMenuHeader\n      ? `sds-button sds-button--circular ${headerButtonSmall}`\n      : 'sds-menu__item';\n  }\n\n  /** Focuses the menu item. */\n  focus(origin: FocusOrigin = 'program'): void {\n    this._focusMonitor.focusVia(this._elementRef.nativeElement, origin);\n  }\n\n  /** Stop listening to focus changes and remove item from parent */\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._parentMenu.removeItem(this);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n  HostBinding,\n  HostListener,\n} from '@angular/core';\nimport {\n  FocusMonitor,\n  FocusOrigin,\n  isFakeMousedownFromScreenReader\n} from '@angular/cdk/a11y';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  VerticalConnectionPos\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { merge, Subscription } from 'rxjs';\nimport {\n  SdsMenuInterface,\n  SdsMenuComponent,\n  MenuPositionX,\n  MenuPositionY\n} from './menu.component';\n\n@Directive({\n  selector: '[sdsMenuTriggerFor]'\n})\nexport class SdsMenuTriggerForDirective implements OnDestroy {\n  /** ARIA haspopup for the menu trigger. */\n  @HostBinding('attr.aria-haspopup') ariaHasPopup = true;\n\n  /** ARIA expanded for the menu trigger. */\n  @HostBinding('attr.aria-expanded')\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  /** Holds the menu instance */\n  private _menu: SdsMenuInterface;\n\n  /** Holds value for menuOpen variable */\n  private _menuOpen = false;\n\n  /** CDK Portal for menu panel */\n  private _portal: TemplatePortal;\n\n  /** PortalOutlet */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** Tracks input type  */\n  private _openedBy: 'mouse' | 'touch' | null = null;\n\n  private _closingActionsSubscription = Subscription.EMPTY;\n  private _menuCloseSubscription = Subscription.EMPTY;\n\n  /** References the menu instance that the trigger is associated with. */\n  @Input('sdsMenuTriggerFor')\n  get menu() {\n    return this._menu;\n  }\n  set menu(menu: SdsMenuInterface) {\n    if (menu === this._menu) {\n      return;\n    }\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n\n    if (menu) {\n      this._menuCloseSubscription = menu.closed.asObservable().subscribe(() => {\n        this._destroyMenu();\n      });\n    }\n  }\n\n  /** Event emitted when the associated menu is opened. */\n  @Output() menuOpened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the associated menu is closed. */\n  @Output() menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Handles mouse presses on the trigger. */\n  @HostListener('mousedown', ['$event'])\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : null;\n    }\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  @HostListener('click')\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  constructor(\n    private _overlay: Overlay,\n    private _element: ElementRef<HTMLElement>,\n    private _viewContainerRef: ViewContainerRef,\n    private _focusMonitor: FocusMonitor\n  ) {\n    // On touch devices set _openedBy to 'touch'\n    _element.nativeElement.addEventListener(\n      'touchstart',\n      () => (this._openedBy = 'touch'),\n      normalizePassiveListenerOptions({ passive: true })\n    );\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._element.nativeElement.removeEventListener(\n      'touchstart',\n      () => (this._openedBy = 'touch'),\n      normalizePassiveListenerOptions({ passive: true })\n    );\n\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n  }\n\n  /** Opens the menu. */\n  openMenu(): void {\n    if (this._menuOpen) {\n      return;\n    }\n    const overlayRef = this._createOverlay();\n    const overlayConfig = overlayRef.getConfig();\n    this._setPosition(\n      overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy\n    );\n    overlayRef.attach(this._getPortal());\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(\n      () => this.closeMenu()\n    );\n    this._initMenu();\n    if (this.menu instanceof SdsMenuComponent) {\n      this.menu._startAnimation();\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu(): void {\n    this.menu.closed.emit();\n  }\n\n  /** Focuses the menu trigger. */\n  focus(origin: FocusOrigin = 'program'): void {\n    this._focusMonitor.focusVia(this._element, origin);\n  }\n\n  /** This method sets the menu state to open and focuses the first item */\n  private _initMenu(): void {\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedBy || 'program');\n  }\n\n  /** sets open state */\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n  }\n\n  /**\n   * This method resets the menu when it's closed,\n   * most importantly restoring focus to the menu trigger\n   */\n  private _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    if (!this._openedBy) {\n      this.focus();\n    } else {\n      this.focus(this._openedBy);\n    }\n\n    this._openedBy = null;\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  private _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    this._closingActionsSubscription.unsubscribe();\n\n    this._overlayRef.detach();\n\n    if (this.menu instanceof SdsMenuComponent) {\n      this.menu._resetAnimation();\n      this._resetMenu();\n    }\n    \n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  private _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions(\n        config.positionStrategy as FlexibleConnectedPositionStrategy\n      );\n      this._overlayRef = this._overlay.create(config);\n      this._overlayRef.keydownEvents().subscribe();\n    }\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._overlay\n        .position()\n        .flexibleConnectedTo(this._element)\n        .withLockedPosition()\n        .withTransformOriginOn('.sds-overlay'),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._overlay.scrollStrategies.reposition()\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position.\n   */\n  private _subscribeToPositions(\n    position: FlexibleConnectedPositionStrategy\n  ): void {\n    position.positionChanges.subscribe(change => {\n      const posX: MenuPositionX =\n        change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n      const posY: MenuPositionY =\n        change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   */\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n    const [originX, originFallbackX]: HorizontalConnectionPos[] =\n      this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n      this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    const offsetY = 0;\n\n    if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    // Positions from most to least desirable\n    positionStrategy.withPositions([\n      { originX, originY, overlayX, overlayY, offsetY },\n      {\n        originX: originFallbackX,\n        originY,\n        overlayX: overlayFallbackX,\n        overlayY,\n        offsetY\n      },\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      },\n      {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }\n    ]);\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  private _menuClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n    const detachments = this._overlayRef.detachments();\n    return merge(backdrop, detachments);\n  }\n\n  /** Gets the portal that should be attached to the overlay. */\n  private _getPortal(): TemplatePortal {\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(\n        this.menu.templateRef,\n        this._viewContainerRef\n      );\n    }\n    return this._portal;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { SdsMenuComponent } from './menu.component';\nimport { SdsMenuItemComponent } from './menu-item.component';\nimport { SdsMenuTriggerForDirective } from './menu-trigger.directive';\nimport { SdsMenuHeaderComponent } from './menu-header.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, FontAwesomeModule],\n  exports: [\n    SdsMenuComponent,\n    SdsMenuItemComponent,\n    SdsMenuTriggerForDirective,\n    SdsMenuHeaderComponent\n  ],\n  declarations: [\n    SdsMenuComponent,\n    SdsMenuItemComponent,\n    SdsMenuTriggerForDirective,\n    SdsMenuHeaderComponent\n  ],\n  providers: []\n})\nexport class SdsMenuModule {}\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ViewportRuler } from '@angular/cdk/overlay';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nexport class SearchSettings {\n  public placeholder = 'Search';\n  public size: string;\n  public dropdown: any = {\n    placeholder: '-Select-',\n    options: [],\n    inverse: false\n  };\n}\n@Component({\n  selector: 'sds-search',\n  templateUrl: 'search.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SdsSearchComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SdsSearchComponent implements AfterViewInit, ControlValueAccessor {\n  @ViewChild('inputEl', { read: ElementRef }) inputEl: ElementRef;\n  @ViewChild('selectEl', { read: ElementRef }) selectEl: ElementRef;\n  @ViewChild('buttonEl', { read: ElementRef }) buttonEl: ElementRef;\n\n  @Input() inputClass: string;\n  @Input() parentSelector: string;\n  @Input() searchSettings: SearchSettings = new SearchSettings();\n\n  model: any = {};\n  inputState = {\n    initial: { visible: undefined },\n    visible: undefined\n  };\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor,\n    private viewportRuler: ViewportRuler\n  ) {}\n\n  ngAfterViewInit() {\n    this.inputState.initial.visible = this.isInputVisible();\n    this.inputState.visible = this.inputState.initial.visible;\n    this.viewportRuler.change(0).subscribe(() => {\n      this.inputState.initial.visible = this.isInputVisible();\n      this.inputState.visible = this.inputState.initial.visible;\n    });\n  }\n\n  hasDropdown() {\n    if (\n      this.searchSettings &&\n      this.searchSettings.dropdown &&\n      this.searchSettings.dropdown.options &&\n      this.searchSettings.dropdown.options.length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  handleClick(event) {\n    event.preventDefault();\n    if (!this.inputState.visible) {\n      this.setInputVisibleStyles();\n      this.focusMonitor.focusVia(this.inputEl, 'program');\n    } else if (this.inputEl.nativeElement.value || this.selectEl.nativeElement.value) {\n      this.model.searchText = this.inputEl.nativeElement.value;\n      if (this.selectEl && this.selectEl.nativeElement.value) {\n        this.model.searchCatergory = this.selectEl.nativeElement.value;\n      }\n      this._onChange(this.model);\n    }\n  }\n\n  writeValue(value: any) {\n    if (value && this.model !== value) {\n      this.model = value;\n      this.cd.markForCheck();\n    } else {\n      this.model = {};\n      this.cd.markForCheck();\n    }\n  }\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  isInputVisible(): boolean {\n    return this.inputEl.nativeElement.getBoundingClientRect().width\n      ? true\n      : false;\n  }\n\n  setInputVisibleStyles() {\n    const inputWidth = this.calculateInputWidth();\n    this.inputEl.nativeElement.style.display = 'block';\n    this.inputEl.nativeElement.style.position = 'absolute';\n    this.inputEl.nativeElement.style.left = `-${inputWidth}px`;\n    this.inputEl.nativeElement.style.width = `${inputWidth}px`;\n    this.inputState.visible = true;\n  }\n\n  removeInputVisibleStyles() {\n    this.inputEl.nativeElement.style.display = '';\n    this.inputEl.nativeElement.style.position = '';\n    this.inputEl.nativeElement.style.left = '';\n    this.inputEl.nativeElement.style.width = '';\n    this.inputState.visible = false;\n  }\n\n  focusChange(event) {\n    if (event === null && !this.inputState.initial.visible) {\n      this.removeInputVisibleStyles();\n    }\n  }\n\n  calculateInputWidth(): number {\n    const buttonElement = this.buttonEl.nativeElement;\n    const inputElement = this.inputEl.nativeElement;\n    const rightPosition = buttonElement.getBoundingClientRect().left;\n    const leftPosition = this.parentSelector\n      ? inputElement.closest(this.parentSelector).getBoundingClientRect().left\n      : 0;\n    return Math.floor(rightPosition - leftPosition);\n  }\n  getClass() {\n    const cls =\n      this.searchSettings && this.searchSettings.size === 'large'\n        ? 'usa-search--big'\n        : 'usa-search--small';\n    return this.searchSettings.dropdown && this.searchSettings.dropdown.inverse\n      ? `${cls} sds-inverse`\n      : cls;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SdsSearchComponent } from './search.component';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, A11yModule,FormsModule],\n  exports: [SdsSearchComponent],\n  declarations: [SdsSearchComponent],\n  providers: []\n})\nexport class SdsSearchModule {}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { ViewportRuler } from '@angular/cdk/overlay';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n/**\n * Directive that triggers a callback whenever the width of\n * its associated element has changed.\n */\n@Directive({ selector: '[sdsObserveWidth]' })\nexport class SdsObserveWidthDirective implements OnInit, OnDestroy {\n  /** Event emitted for each change in the element's width. */\n  @Output('sdsObserveWidth') elementWidth = new EventEmitter<number>();\n\n  /** Subscription to window resize stream */\n  windowResize$: Subscription;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private viewportRuler: ViewportRuler\n  ) {}\n\n  ngOnInit() {\n    this.windowResize$ = this.viewportRuler\n      .change(0)\n      .pipe(startWith(this._getElementWidth()))\n      .subscribe(() => this._emitEvent());\n  }\n\n  ngOnDestroy() {\n    this.windowResize$.unsubscribe();\n  }\n\n  _emitEvent() {\n    const width = this._getElementWidth();\n    this.elementWidth.emit(width);\n  }\n\n  _getElementWidth(): number {\n    return this._elementRef.nativeElement.offsetWidth;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SdsObserveWidthDirective } from './observe-width.directive';\n\n@NgModule({\n  imports: [],\n  exports: [SdsObserveWidthDirective],\n  declarations: [SdsObserveWidthDirective],\n  providers: [],\n})\nexport class SdsObserversModule { }\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Used primarily to avoid circular imports between `SdsAccordion` and `SdsAccordionItem`.\n */\nexport const SDS_TRUNCATED_TEXT_DATA = new InjectionToken<any>(\n  'SdsTruncatedTextData'\n);\n","import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  group,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const sdsTruncateTextAnimations: {\n  readonly container: AnimationTriggerMetadata;\n} = {\n  container: trigger('container', [\n    state(\n      'void',\n      style({\n        opacity: 0,\n        transform: 'scale(0.8)'\n      })\n    ),\n    transition(\n      'void => enter',\n      group([\n        query(\n          '.sds-overlay',\n          animate(\n            '100ms linear',\n            style({\n              opacity: 1\n            })\n          )\n        ),\n        animate(\n          '120ms cubic-bezier(0, 0, 0.2, 1)',\n          style({ transform: 'scale(1)' })\n        )\n      ])\n    ),\n    transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n  ])\n};\n","import { Component, Inject, HostBinding, HostListener } from '@angular/core';\nimport { SDS_TRUNCATED_TEXT_DATA } from './truncates-text-base';\nimport { sdsTruncateTextAnimations } from './truncate-text-animations';\n\nexport interface SdsTruncateTextData {\n  text: string;\n}\n\n@Component({\n  selector: 'sds-truncated-text-container',\n  template: `\n    <div class=\"sds-overlay maxw-mobile radius-overlay padding-2\">{{ data.text }}</div>\n  `,\n  animations: [sdsTruncateTextAnimations.container]\n})\nexport class SdsTruncatedTextContainerComponent {\n  @HostBinding('@container') _animationState = 'void';\n\n  constructor(@Inject(SDS_TRUNCATED_TEXT_DATA) public data: SdsTruncateTextData) {}\n\n  /** Starts the animation. */\n  startAnimation() {\n    this._animationState = 'enter';\n  }\n\n  /** Resets the animation to its initial state. */\n  resetAnimation() {\n    this._animationState = 'void';\n  }\n\n  /** Intentionally left empty to trigger change detection */\n  @HostListener('@container.done')\n  _onAnimationDone() {}\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Input,\n  OnDestroy,\n  AfterViewInit,\n  HostListener,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  ViewportRuler,\n  OverlayConfig,\n  Overlay,\n  OverlayRef,\n  ConnectedPosition\n} from '@angular/cdk/overlay';\nimport { Subscription, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { SdsTruncatedTextContainerComponent } from './truncate-text-container.component';\nimport { SDS_TRUNCATED_TEXT_DATA } from './truncates-text-base';\n\n@Directive({ selector: '[sdsTruncateTextByLine]' })\nexport class SdsTruncateTextByLineDirective\n  implements OnInit, OnDestroy, AfterViewInit {\n  /** Maximum lines of text limit */\n  @Input('sdsTruncateTextByLine')\n  get textLinesLimit(): any {\n    return this._textLinesLimit;\n  }\n  set textLinesLimit(_textLinesLimit: any) {\n    _textLinesLimit = coerceNumberProperty(_textLinesLimit);\n    if (this._textLinesLimit !== _textLinesLimit) {\n      this._textLinesLimit = _textLinesLimit;\n    }\n  }\n  private _textLinesLimit: number;\n\n  /** PortalOutlet */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** Holds subscription to stream of overlay closing events */\n  private _closingActionsSubscription = Subscription.EMPTY;\n\n  /** Holds initial text */\n  private initialText: string;\n\n  /** Subscription to window resize stream */\n  windowResize$: Subscription;\n\n  /** Approximated character width of the host text */\n  private approximatedCharacterWidth: number;\n\n  constructor(\n    private _overlay: Overlay,\n    private _injector: Injector,\n    private _element: ElementRef,\n    private _viewportRuler: ViewportRuler,\n    private _viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit() {\n    this.initialText = this._element.nativeElement.innerText.trim();\n\n    // Clone element to facilitate calculations\n    const hostCloneEl = this._element.nativeElement.cloneNode() as HTMLElement;\n\n    // Add 1 character to calculate character width\n    hostCloneEl.innerHTML = 'x';\n\n    // Render the clone to get character width\n    this._element.nativeElement.parentElement.appendChild(hostCloneEl);\n\n    // Set the clone to inline to prevent cases where the clone\n    // expands to 100% width of the container\n    hostCloneEl.setAttribute('style', 'display: inline');\n\n    // These are close approximations that are used to better guess\n    // how many characters fit in X number of lines\n    this.approximatedCharacterWidth = hostCloneEl.offsetWidth;\n\n    // Remove clone after calculations\n    hostCloneEl.remove();\n  }\n\n  ngAfterViewInit(): void {\n    this.windowResize$ = this._viewportRuler\n      .change(0)\n      .pipe(startWith('Start'))\n      .subscribe(() => this.updateUI());\n  }\n\n  ngOnDestroy(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n    this._closingActionsSubscription.unsubscribe();\n    this.windowResize$.unsubscribe();\n  }\n\n  /** Configures and creates the CDK overlay */\n  private _createOverlay() {\n    const overlayPositions: ConnectedPosition = {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    };\n    const config = new OverlayConfig({\n      positionStrategy: this._overlay\n        .position()\n        .flexibleConnectedTo(this._element)\n        .withLockedPosition()\n        .withPositions([overlayPositions])\n        .withTransformOriginOn('.sds-overlay'),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._overlay.scrollStrategies.close()\n    });\n    return this._overlay.create(config);\n  }\n\n  /** Attach a ComponentPortal to the overlay **/\n  private _attachContainer(overlay: OverlayRef) {\n    const injector = new PortalInjector(\n      this._injector,\n      new WeakMap([[SDS_TRUNCATED_TEXT_DATA, { text: this.initialText }]])\n    );\n    const containerPortal = new ComponentPortal(\n      SdsTruncatedTextContainerComponent,\n      this._viewContainerRef,\n      injector\n    );\n    const containerRef = overlay.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  /** Returns a stream that emits whenever an action that should close the overlay occurs. */\n  private _overlayClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n    const detachments = this._overlayRef.detachments();\n    return merge(backdrop, detachments);\n  }\n\n  /** Width of host element */\n  private _getHostWidth(): number {\n    return this._element.nativeElement.offsetWidth;\n  }\n\n  /** Approximated number of characters that are visible in the container */\n  private _getVisibleCharacters(): number {\n    return Math.floor(\n      (this._getHostWidth() / this.approximatedCharacterWidth) *\n        this.textLinesLimit\n    );\n  }\n\n  private _isNotLongEnough(): boolean {\n    return this._getVisibleCharacters() > this.initialText.length;\n  }\n\n  @HostListener('click')\n  openOverlay(): void {\n    // Exit if all text can be visible in container\n    if (this._isNotLongEnough()) return;\n\n    this._overlayRef = this._createOverlay();\n    const container = this._attachContainer(this._overlayRef);\n    this._closingActionsSubscription = this._overlayClosingActions().subscribe(\n      () => this.closeOverlay()\n    );\n    // Wait for the next event loop tick to start the animation\n    setTimeout(() => {\n      container.startAnimation();\n    });\n  }\n\n  updateUI() {\n    // Exit if all text can be visible in container\n    if (this._isNotLongEnough()) return;\n\n    const wordCut = false;\n    const ellipsis = '...';\n    const limit = this._getVisibleCharacters() - ellipsis.length;\n\n    let visibleText = this.initialText.slice(0, limit);\n\n    if (!wordCut) {\n      const isEndofWord = this.initialText.substr(limit, limit + 1) === ' ';\n      if (!isEndofWord) {\n        const previousWord = visibleText.lastIndexOf(' ');\n        visibleText = visibleText.slice(0, previousWord);\n      }\n    }\n\n    this._element.nativeElement.innerText = visibleText + ellipsis;\n  }\n\n  closeOverlay() {\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SdsTruncateTextByLineDirective } from './truncate-text.directive';\nimport { SdsTruncatedTextContainerComponent } from './truncate-text-container.component';\n\n@NgModule({\n  imports: [],\n  exports: [SdsTruncateTextByLineDirective],\n  declarations: [\n    SdsTruncateTextByLineDirective,\n    SdsTruncatedTextContainerComponent\n  ],\n  providers: [],\n  entryComponents: [SdsTruncatedTextContainerComponent]\n})\nexport class SdsTruncateModule {}\n","import {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ScrollStrategy} from '@angular/cdk/overlay';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  /** Override for the dialog's top position. */\n  top?: string;\n\n  /** Override for the dialog's bottom position. */\n  bottom?: string;\n\n  /** Override for the dialog's left position. */\n  left?: string;\n\n  /** Override for the dialog's right position. */\n  right?: string;\n}\n\n/**\n * Configuration for opening a modal dialog with the SdsDialog service.\n */\nexport class SdsDialogConfig<D = any> {\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** The ARIA role of the dialog element. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class for the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop? = true;\n\n  /** Custom class for the backdrop, */\n  backdropClass? = '';\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose? = false;\n\n  /** Width of the dialog. */\n  width? = '';\n\n  /** Height of the dialog. */\n  height? = '';\n\n  /** Min-width of the dialog. If a number is provided, pixel units are assumed. */\n  minWidth?: number | string;\n\n  /** Min-height of the dialog. If a number is provided, pixel units are assumed. */\n  minHeight?: number | string;\n\n  /** Max-width of the dialog. If a number is provided, pixel units are assumed. Defaults to 80vw */\n  maxWidth?: number | string = '80vw';\n\n  /** Max-height of the dialog. If a number is provided, pixel units are assumed. */\n  maxHeight?: number | string;\n\n  /** Position overrides. */\n  position?: DialogPosition;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Layout direction for the dialog's content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus? = true;\n\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus? = true;\n\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy?: ScrollStrategy;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation? = true;\n\n  /**\n   * Wheter the dialog its an alert\n   */\n  alert?: 'warning' | 'info' | 'error';\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\nconst animationBody = [\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\n  // decimate the animation performance. Leaving it as `none` solves both issues.\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n  state('enter', style({transform: 'none'})),\n  transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n      style({transform: 'none', opacity: 1}))),\n  transition('* => void, * => exit',\n      animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n];\n\n/**\n * Animations used by SdsDialog.\n * @docs-private\n */\nexport const sdsDialogAnimations: {\n  readonly dialogContainer: AnimationTriggerMetadata;\n} = {\n  /** Animation that is applied on the dialog container by defalt. */\n  dialogContainer: trigger('dialogContainer', animationBody),\n};\n","import {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AnimationEvent} from '@angular/animations';\nimport {sdsDialogAnimations} from './dialog-animations';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  CdkPortalOutlet,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {SdsDialogConfig} from './dialog-config';\n\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nexport function throwSdsDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\n@Component({\n  selector: 'sds-dialog-container',\n  templateUrl: 'dialog-container.component.html',\n  encapsulation: ViewEncapsulation.None,\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [sdsDialogAnimations.dialogContainer],\n  // tslint:disable-next-line: use-host-property-decorator\n  host: {\n    'class': 'sds-dialog__container',\n    '[class.sds-dialog--alert]': '_config.alert',\n    '[class.sds-dialog--alert-error]':'_config.alert === \"error\"',\n    '[class.sds-dialog--alert-warning]':'_config.alert === \"warning\"',\n    '[class.sds-dialog--alert-info]':'_config.alert === \"info\"',\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[attr.id]': '_id',\n    '[attr.role]': '_config.role',\n    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n    '[attr.aria-label]': '_config.ariaLabel',\n    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n    '[@dialogContainer]': '_state',\n    '(@dialogContainer.start)': '_onAnimationStart($event)',\n    '(@dialogContainer.done)': '_onAnimationDone($event)',\n  },\n})\nexport class SdsDialogContainerComponent extends BasePortalOutlet {\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  @ViewChild(CdkPortalOutlet) _portalOutlet: CdkPortalOutlet;\n\n  /** The class that traps and manages focus within the dialog. */\n  private _focusTrap: FocusTrap;\n\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  /** ID of the element that should be considered as the dialog's label. */\n  _ariaLabelledBy: string | null = null;\n\n  /** ID for the container DOM element. */\n  _id: string;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _focusTrapFactory: FocusTrapFactory,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    /** The dialog configuration. */\n    public _config: SdsDialogConfig) {\n\n    super();\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throwSdsDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throwSdsDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Moves the focus inside the focus trap. */\n  private _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    if (this._config.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restores focus to the element that was focused before the dialog opened. */\n  private _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /** Saves a reference to the element that was focused before the dialog was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the dialog immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Callback, invoked when an animation on the host starts. */\n  _onAnimationStart(event: AnimationEvent) {\n    this._animationStateChanged.emit(event);\n  }\n\n  /** Starts the dialog exit animation. */\n  _startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import {ESCAPE} from '@angular/cdk/keycodes';\nimport {GlobalPositionStrategy, OverlayRef} from '@angular/cdk/overlay';\nimport {Location} from '@angular/common';\nimport {Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DialogPosition} from './dialog-config';\nimport {SdsDialogContainerComponent} from './dialog-container.component';\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/**\n * Reference to a dialog opened via the SdsDialog service.\n */\nexport class SdsDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined = this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    public _containerInstance: SdsDialogContainerComponent,\n    _location?: Location,\n    readonly id: string = `sds-dialog-${uniqueId++}`) {\n\n    // Pass the id along to the container.\n    _containerInstance._id = id;\n\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'enter'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'done' && event.toState === 'exit'),\n      take(1)\n    ).subscribe(() => this._overlayRef.dispose());\n\n    _overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      this._overlayRef.dispose();\n    });\n\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\n      .subscribe(() => this.close());\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(\n      filter(event => event.phaseName === 'start'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._overlayRef.detachBackdrop();\n    });\n\n    this._containerInstance._startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    const strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width: string = '', height: string = ''): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n","import {Directionality} from '@angular/cdk/bidi';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayRef,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {Location} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from '@angular/core';\nimport {defer, Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {SdsDialogConfig} from './dialog-config';\nimport {SdsDialogContainerComponent} from './dialog-container.component';\nimport {SdsDialogRef} from './dialog-ref';\n\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const SDS_DIALOG_DATA = new InjectionToken<any>('SdsDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const SDS_DIALOG_DEFAULT_OPTIONS =\n    new InjectionToken<SdsDialogConfig>('sds-dialog-default-options');\n\n/** Injection token that determines the scroll handling while the dialog is open. */\nexport const SDS_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('sds-dialog-scroll-strategy');\n\n/** @docs-private */\nexport function SDS_DIALOG_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport function SDS_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n  () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const SDS_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: SDS_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: SDS_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n\n/**\n * Service to open modal dialogs.\n */\n@Injectable()\nexport class SdsDialogService implements OnDestroy {\n  private _openDialogsAtThisLevel: SdsDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<SdsDialogRef<any>>();\n  private _ariaHiddenElements = new Map<Element, string|null>();\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): SdsDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<SdsDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  get _afterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer<void>(() => this.openDialogs.length ?\n      this._afterAllClosed :\n      this._afterAllClosed.pipe(startWith(undefined)));\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      @Optional() private _location: Location,\n      @Optional() @Inject(SDS_DIALOG_DEFAULT_OPTIONS) private _defaultOptions: SdsDialogConfig,\n      @Inject(SDS_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n      @Optional() @SkipSelf() private _parentDialog: SdsDialogService,\n      private _overlayContainer: OverlayContainer) {\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param componentOrTemplateRef Type of the component to load into the dialog,\n   *     or a TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: SdsDialogConfig<D>): SdsDialogRef<T, R> {\n\n    // Convenience widths names: small | medium | large\n    // added to help with standardization\n    if (config && config.width) {\n      switch (config.width) {\n        case 'small': {\n          config.width = '370px';\n          break;\n        }\n        case 'medium': {\n          config.width = '730px';\n          break;\n        }\n        case 'large': {\n          config.width = '960px';\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n\n    config = _applyConfigDefaults(config, this._defaultOptions || new SdsDialogConfig());\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef,\n                                                      dialogContainer,\n                                                      overlayRef,\n                                                      config);\n\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): SdsDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Creates the overlay into which the dialog will be loaded.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the OverlayRef for the created overlay.\n   */\n  private _createOverlay(config: SdsDialogConfig): OverlayRef {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param dialogConfig The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  private _getOverlayConfig(dialogConfig: SdsDialogConfig): OverlayConfig {\n    const state = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n      panelClass: dialogConfig.panelClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      direction: dialogConfig.direction,\n      minWidth: dialogConfig.minWidth,\n      minHeight: dialogConfig.minHeight,\n      maxWidth: dialogConfig.maxWidth,\n      maxHeight: dialogConfig.maxHeight,\n      disposeOnNavigation: dialogConfig.closeOnNavigation\n    });\n\n    if (dialogConfig.backdropClass) {\n      state.backdropClass = dialogConfig.backdropClass;\n    }\n\n    return state;\n  }\n\n  /**\n   * Attaches an SdsDialogContainerComponent to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  private _attachDialogContainer(overlay: OverlayRef, config: SdsDialogConfig): SdsDialogContainerComponent {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [SdsDialogConfig, config]\n    ]));\n    const containerPortal =\n        new ComponentPortal(SdsDialogContainerComponent, config.viewContainerRef, injector);\n    const containerRef = overlay.attach<SdsDialogContainerComponent>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created SdsDialogContainerComponent.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping SdsDialogContainerComponent.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the SdsDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: SdsDialogContainerComponent,\n      overlayRef: OverlayRef,\n      config: SdsDialogConfig): SdsDialogRef<T, R> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef =\n        new SdsDialogRef<T, R>(overlayRef, dialogContainer, this._location, config.id);\n\n    // When the dialog backdrop is clicked, we want to close it.\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        if (!dialogRef.disableClose) {\n          dialogRef.close();\n        }\n      });\n    }\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplateRef, null!,\n          <any>{ $implicit: config.data, dialogRef }));\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const contentRef = dialogContainer.attachComponentPortal<T>(\n          new ComponentPortal(componentOrTemplateRef, undefined, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param container Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(\n      config: SdsDialogConfig,\n      dialogRef: SdsDialogRef<T>,\n      dialogContainer: SdsDialogContainerComponent): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The SdsDialogContainerComponent is injected in the portal as the SdsDialogContainerComponent and the dialog's\n    // content are created out of the same ViewContainerRef and as such, are siblings for injector\n    // purposes. To allow the hierarchy that is expected, the SdsDialogContainerComponent is explicitly\n    // added to the injection tokens.\n    const injectionTokens = new WeakMap<any, any>([\n      [SdsDialogContainerComponent, dialogContainer],\n      [SDS_DIALOG_DATA, config.data],\n      [SdsDialogRef, dialogRef]\n    ]);\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      injectionTokens.set(Directionality, {\n        value: config.direction,\n        change: observableOf()\n      });\n    }\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: SdsDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n\n        this._ariaHiddenElements.clear();\n        this._afterAllClosed.next();\n      }\n    }\n  }\n\n  /**\n   * Hides all of the content that isn't an overlay from assistive technology.\n   */\n  private _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n\n      for (let i = siblings.length - 1; i > -1; i--) {\n        const sibling = siblings[i];\n\n        if (sibling !== overlayContainer &&\n          sibling.nodeName !== 'SCRIPT' &&\n          sibling.nodeName !== 'STYLE' &&\n          !sibling.hasAttribute('aria-live')) {\n\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: SdsDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(\n    config?: SdsDialogConfig, defaultOptions?: SdsDialogConfig): SdsDialogConfig {\n  return {...defaultOptions, ...config};\n}\n","import {\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ElementRef,\n} from '@angular/core';\nimport {SdsDialogService} from './dialog';\nimport {SdsDialogRef} from './dialog-ref';\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  selector: `button[sds-dialog-close], button[sdsDialogClose]`,\n  exportAs: 'sdsDialogClose',\n  // tslint:disable-next-line: use-host-property-decorator\n  host: {\n    '(click)': 'dialogRef.close(dialogResult)',\n    '[attr.aria-label]': 'ariaLabel || null',\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class SdsDialogCloseDirective implements OnInit, OnChanges {\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Dialog close input. */\n  @Input('sds-dialog-close') dialogResult: any;\n\n  @Input('sdsDialogClose') _sdsDialogClose: any;\n\n  constructor(\n    @Optional() public dialogRef: SdsDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: SdsDialogService) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_sdsDialogClose'] || changes['_sdsDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({\n  selector: '[sds-dialog-title], [sdsDialogTitle]',\n  exportAs: 'sdsDialogTitle',\n  // tslint:disable-next-line: use-host-property-decorator\n  host: {\n    '[class.sds-dialog-title]': 'true',\n    '[id]': 'id',\n  },\n})\nexport class SdsDialogTitleDirective implements OnInit {\n  @Input() id = `sds-dialog-title-${dialogElementUid++}`;\n\n  constructor(\n    @Optional() private _dialogRef: SdsDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: SdsDialogService) {}\n\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this._dialogRef._containerInstance;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n\n/**\n * SubTitle of a dialog element\n */\n@Directive({\n  selector: `[sds-dialog-subtitle], sds-dialog-subtitle, [sdsDialogSubtitle]`,\n  // tslint:disable-next-line: use-host-property-decorator\n  host: {'[class.sds-dialog-subtitle]': 'true'}\n})\nexport class SdsDialogSubtitleDirective {}\n\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({\n  selector: `[sds-dialog-content], sds-dialog-content, [sdsDialogContent]`,\n  // tslint:disable-next-line: use-host-property-decorator\n  host: {'[class.sds-dialog-content]': 'true'}\n})\nexport class SdsDialogContentDirective {}\n\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({\n  selector: `[sds-dialog-actions], sds-dialog-actions, [sdsDialogActions]`,\n  // tslint:disable-next-line: use-host-property-decorator\n  host: {'[class.sds-dialog-actions]': 'true'}\n})\nexport class SdsDialogActionsDirective {}\n\n\n/**\n * Finds the closest SdsDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<HTMLElement>, openDialogs: SdsDialogRef<any>[]) {\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n  while (parent && !parent.classList.contains('sds-dialog__container')) {\n    parent = parent.parentElement;\n  }\n\n  return parent ? openDialogs.find(dialog => dialog.id === parent!.id) : null;\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  SDS_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  SdsDialogService\n} from './dialog';\nimport { SdsDialogContainerComponent } from './dialog-container.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  SdsDialogActionsDirective,\n  SdsDialogCloseDirective,\n  SdsDialogContentDirective,\n  SdsDialogTitleDirective,\n  SdsDialogSubtitleDirective\n} from './dialog-content.directives';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule, FontAwesomeModule],\n  exports: [\n    SdsDialogContainerComponent,\n    SdsDialogCloseDirective,\n    SdsDialogTitleDirective,\n    SdsDialogSubtitleDirective,\n    SdsDialogContentDirective,\n    SdsDialogActionsDirective\n  ],\n  declarations: [\n    SdsDialogContainerComponent,\n    SdsDialogCloseDirective,\n    SdsDialogTitleDirective,\n    SdsDialogSubtitleDirective,\n    SdsDialogActionsDirective,\n    SdsDialogContentDirective\n  ],\n  providers: [SdsDialogService, SDS_DIALOG_SCROLL_STRATEGY_PROVIDER],\n  entryComponents: [SdsDialogContainerComponent]\n})\nexport class SdsDialogModule {}\n","import {\n  Directive,\n  AfterViewChecked,\n  ElementRef,\n  Renderer2,\n  Input,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  OnChanges\n} from '@angular/core';\nimport { faCoffee, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\n@Directive({\n  selector: 'a[href]'\n})\nexport class ExternalLinkDirective\n  implements OnChanges {\n    private vcRef: ViewContainerRef;\n  @Input() href: string;\n  @Input() public hideIcon: boolean = false;\n\n \n  private get isExternalLink (): boolean {\n    return this.href.replace(/^https?:\\/\\//,'').replace(/^www\\./, '').split('/')[0] != location.hostname;\n  }\n\n  constructor (\n    private el: ElementRef,\n    private renderer: Renderer2, private cfr: ComponentFactoryResolver , private vc : ViewContainerRef) {   \n    }\n\n    public ngOnChanges () {\n    if (!this.isExternalLink){\n      return;\n    }\n    if (!this.hideIcon) {\n      this.createIcon();\n      \n    }\n  }\n \n  private createIcon () {\n    // tslint:disable-next-line:no-unused-expression\n    this.vc.constructor.name === \"ViewContainerRef_\";\n    const factory = this.cfr.resolveComponentFactory(FaIconComponent);\n    const component = this.vc.createComponent(factory);\n    component.instance.iconProp =  ['fas','external-link-alt'];\n    const spanElement = document.createElement('span');\n    spanElement.classList.add('margin-left-2px');\n    const supElement = document.createElement('sup');\n    supElement.appendChild(component.location.nativeElement);\n    spanElement.appendChild(supElement);\n    this.el.nativeElement.appendChild(spanElement);\n    component.instance.ngOnChanges({});\n  }\n \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ExternalLinkDirective } from './external-link.directive';\nimport { FontAwesomeModule, FaIconComponent } from '@fortawesome/angular-fontawesome';\n\n\n@NgModule({\n  declarations: [ ExternalLinkDirective],\n  imports: [\n    CommonModule, FontAwesomeModule\n  ],\n  entryComponents: [ FaIconComponent ],\n  exports: [ExternalLinkDirective]\n})\nexport class SdsDirectivesModule { }","import { Component, Input, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { GLOBAL_STRINGS } from 'accessible-html5-video-player/js/strings.js';\nimport * as InitPxVideo from 'accessible-html5-video-player/js/px-video.js';\nimport { VPInterface } from './video-player';\n\ninterface InitPxVideoConfig {\n  \"videoId\": string,\n  \"captionsOnDefault\": boolean,\n  \"seekInterval\": number,\n  \"videoTitle\": string,\n  \"debug\": boolean\n}\n\ndeclare const GLOBAL_STRINGS: any;\n\ndeclare class InitPxVideo {\n  constructor(config: InitPxVideoConfig);\n}\n\n@Component({\n  selector: 'sds-video-player',\n  templateUrl: './video-player.component.html',\n  styleUrls: ['./css/px-video.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SdsVideoPlayerComponent implements AfterViewInit {\n  @Input() VPConfiguration: VPInterface;\n  private config: InitPxVideoConfig;\n\n  ngAfterViewInit() {\n    this.config = {\n      videoId: this.VPConfiguration.id,\n      captionsOnDefault: false,\n      seekInterval: this.VPConfiguration.seekInterval,\n      videoTitle: 'Video Player',\n      debug: this.VPConfiguration.debug\n    }\n\n    new InitPxVideo(this.config);\n  }\n\n  constructor() {\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SdsVideoPlayerComponent } from './video-player.component';\n\n\n\n@NgModule({\n  declarations: [SdsVideoPlayerComponent],\n  exports: [SdsVideoPlayerComponent],\n  imports: [\n    CommonModule\n  ],\n  providers: []\n})\nexport class SdsVideoPlayerModule { }\n","import { Directive, Input, ElementRef, Renderer2, AfterViewInit, OnInit } from '@angular/core';\n\n\n@Directive({\n  selector: '[sdsPopup]',\n  exportAs: 'sdsPopup'\n})\nexport class SdsPopupDirective implements AfterViewInit {\n  @Input() sdsPopup: HTMLElement;\n  @Input() position: string;\n  @Input() placement: string;\n  sdsPopupDiv: HTMLElement;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.el.nativeElement, 'sds-popup');\n    this.sdsPopupDiv = document.createElement('div');\n    this.renderer.addClass(this.sdsPopupDiv, 'sds-popup__content');\n  }\n\n\n  ngAfterViewInit() {\n    this.renderer.appendChild(this.el.nativeElement, this.sdsPopup);\n    this.renderer.addClass(this.sdsPopupDiv, this.placement);\n    this.renderer.addClass(this.sdsPopupDiv, this.position);\n    this.renderer.appendChild(this.sdsPopupDiv, this.el.nativeElement.children[0]);\n    this.renderer.appendChild(this.el.nativeElement, this.sdsPopupDiv);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SdsPopupDirective } from './popup.directive';\n\n\n@NgModule({\n  declarations: [SdsPopupDirective],\n  imports: [\n    CommonModule\n  ],\n  exports: [SdsPopupDirective]\n})\nexport class SdsPopupModule {\n\n }\n","import { Component, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'sds-text',\n  template: `\n    <div>\n      <input #searchInput class=\"usa-input display-inline-block\" />\n      <button class=\"usa-button margin-left-05 display-inline-block\" (click)=\"addItem(searchInput.value); searchInput.value=''\">Add Item</button>\n    </div>\n\n    <h4>Component Items</h4>\n    <pre>{{ items | json }}</pre>\n\n    <hr />\n\n    <h4>Child Component Items <small>(click to remove)</small></h4>\n    <sds-text-child [(items)]=\"items\" (itemsChange)=\"updateItems($event)\"></sds-text-child>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SdsTextComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SdsTextComponent implements ControlValueAccessor {\n\n  items = [];\n  multiple = true;\n\n  private _onChange = (_: any) => { };\n  private _onTouched = () => { };\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  // Helper method to programatically add a value to the existing items array\n  addItem(val) {\n    if(this.multiple){\n      this.items = [...this.items, val];\n      this.updateModel();\n    }\n  }\n\n  // Method that is fired when the child component event notifies us that the items array has been modified within the child component\n  updateItems($event) {\n    this.updateModel();\n  }\n\n  // Helper method that gets a new instance of the model and notifies ControlValueAccessor that we have a new model for this FormControl (our custom component)\n  updateModel() {\n    const model = this.getModel();\n    this._onChange(model);\n  }\n\n  // Helper method to return a new instance of an array that contains our items\n  getModel() {\n    return [...this.items];\n  }\n\n  // ControlValueAccessor (and Formly) is trying to update the value of the FormControl (our custom component) programatically\n  // If there is a value we will just overwrite items\n  // If there is no value we reset the items array to be empty\n  writeValue(value: any) {\n    if(value && value.length && this.items !== value) {\n      this.items = value;\n      this.cd.markForCheck();\n    } else {\n      this.items = [];\n      this.cd.markForCheck();\n    }\n  }\n\n  // ControlValueAccessor hook that lets us call this._onChange(var) to let the form know our variable has changed (in this case model)\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  // ControlValueAccessor hook (not used)\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'sds-text-child',\n  template: `\n    <ng-container *ngIf=\"items\">\n      <span class=\"sds-tag sds-tag--chip margin-x-05\" style=\"cursor:pointer;\" *ngFor=\"let item of items; let i=index\" (click)=\"removeItem(i)\">{{item}} <small class=\"margin-left-05\">(x)</small></span>\n    </ng-container>\n  `\n})\nexport class SdsTextChildComponent  {\n    @Input() items;\n    @Output() itemsChange = new EventEmitter();\n\n    // Method to remove an item from the items array, emits an event that the parent component is listening for\n    removeItem(index){\n      this.items.splice(index, 1);\n      this.itemsChange.emit(this.items);\n    }\n\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { SdsTextComponent } from './text.component';\nimport { SdsTextChildComponent} from './child.component';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, A11yModule, FormsModule],\n  exports: [SdsTextComponent, SdsTextChildComponent],\n  declarations: [SdsTextComponent,  SdsTextChildComponent],\n  providers: []\n})\nexport class SdsTextModule {}\n"],"names":["uniqueId","state","observableOf"],"mappings":"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"}
