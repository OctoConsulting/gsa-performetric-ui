/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef, forwardRef } from '@angular/core';
import { SDSSelectedItemModel } from './models/sds-selectedItem.model';
import { SDSSelectedResultConfiguration } from './models/SDSSelectedResultConfiguration';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { SDSSelectedItemModelHelper } from './models/sds-selected-item-model-helper';
/** @type {?} */
var SDS_SelectedResult_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef((/**
     * @return {?}
     */
    function () { return SDSSelectedResultComponent; })),
    multi: true
};
var SDSSelectedResultComponent = /** @class */ (function () {
    function SDSSelectedResultComponent() {
        /**
         * Stored Event for ControlValueAccessor
         */
        this.onTouchedCallback = (/**
         * @return {?}
         */
        function () { return null; });
        /**
         * Stored Event for ControlValueAccessor
         */
        this.propogateChange = (/**
         * @param {?} _
         * @return {?}
         */
        function (_) { return null; });
    }
    /**
     * Removes item from the model
     * @param item
     */
    /**
     * Removes item from the model
     * @param {?} item
     * @return {?}
     */
    SDSSelectedResultComponent.prototype.removeItem = /**
     * Removes item from the model
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (!this.disabled) {
            SDSSelectedItemModelHelper.removeItem(item, this.configuration.primaryKeyField, this.model.items);
            this.propogateChange(this.model);
            this.onTouchedCallback();
        }
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    SDSSelectedResultComponent.prototype.writeValue = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (obj instanceof SDSSelectedItemModel) {
            this.model = (/** @type {?} */ (obj));
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SDSSelectedResultComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.propogateChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SDSSelectedResultComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouchedCallback = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    SDSSelectedResultComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * Gets the string value from the specifed properties of an object
     * @param object
     * @param propertyFields comma seperated list with periods depth of object
     */
    /**
     * Gets the string value from the specifed properties of an object
     * @param {?} object
     * @param {?} propertyFields comma seperated list with periods depth of object
     * @return {?}
     */
    SDSSelectedResultComponent.prototype.getObjectValue = /**
     * Gets the string value from the specifed properties of an object
     * @param {?} object
     * @param {?} propertyFields comma seperated list with periods depth of object
     * @return {?}
     */
    function (object, propertyFields) {
        /** @type {?} */
        var value = '';
        /** @type {?} */
        var current = object;
        /** @type {?} */
        var fieldSplit = propertyFields.split(',');
        for (var i = 0; i < fieldSplit.length; i++) {
            /** @type {?} */
            var fieldValue = fieldSplit[i];
            /** @type {?} */
            var fieldPartSplit = fieldValue.split('.');
            for (var j = 0; j < fieldPartSplit.length; j++) {
                /** @type {?} */
                var fieldCheckValue = fieldPartSplit[j];
                if (current) {
                    current = current[fieldCheckValue];
                }
            }
            if (current) {
                value += current.toString() + ' ';
            }
            current = object;
        }
        return value.trim();
    };
    SDSSelectedResultComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-selected-result',
                    template: "<ul  *ngIf=\"model\" [attr.aria-label]=\"configuration.labelText +' results'\" class=\"usa-list usa-list--unstyled sds-autocomplete-selected\" aria-relevant=\"additions\" role=\"listbox\" aria-live=\"polite\">\n    <li role=\"option\" *ngFor=\"let result of model.items; let i = index\">\n        <div [attr.class]=\" disabled ? 'sds-tag sds-tag--chip sds-autocomplete-selected__item sds-autocomplete-selected__item--disabled' :'sds-tag sds-tag--chip sds-autocomplete-selected__item'\">\n            <ng-container *ngIf=\"itemTemplate\" [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{$implicit:result}\">\n            </ng-container>\n            <ng-container *ngIf=\"!itemTemplate\">\n                <span class=\"display-block text-semibold\"> {{ getObjectValue(result, configuration.primaryTextField) }}\n                </span>\n                <ng-container *ngIf=\"configuration.secondaryTextField && result[configuration.secondaryTextField] \">\n                    {{ result[configuration.secondaryTextField] }}\n                </ng-container>\n            </ng-container>\n            <button [attr.aria-label]=\"'Remove Item ' + getObjectValue(result, configuration.primaryTextField)\" [class.text-base]=\"disabled\" aria-hidden=\"false\" class=\"sds-tag__close  position-absolute right-1 top-2px\" (click)=\"removeItem(result)\" (keyup.enter)=\"removeItem(result)\">\n        <fa-icon [icon]=\"['fas', 'times']\" size=\"sm\"></fa-icon>\n      </button>\n        </div>\n    </li>\n</ul>",
                    providers: [SDS_SelectedResult_VALUE_ACCESSOR],
                    styles: [""]
                }] }
    ];
    SDSSelectedResultComponent.propDecorators = {
        itemTemplate: [{ type: Input }],
        configuration: [{ type: Input }],
        disabled: [{ type: Input }]
    };
    return SDSSelectedResultComponent;
}());
export { SDSSelectedResultComponent };
if (false) {
    /**
     * Allow to insert a customized template for suggestions to use
     * @type {?}
     */
    SDSSelectedResultComponent.prototype.itemTemplate;
    /**
     * The data model that has the selected item
     * @type {?}
     */
    SDSSelectedResultComponent.prototype.model;
    /**
     * Configuration for the Selected Results control
     * @type {?}
     */
    SDSSelectedResultComponent.prototype.configuration;
    /**
     * Stored Event for ControlValueAccessor
     * @type {?}
     */
    SDSSelectedResultComponent.prototype.onTouchedCallback;
    /**
     * Stored Event for ControlValueAccessor
     * @type {?}
     */
    SDSSelectedResultComponent.prototype.propogateChange;
    /** @type {?} */
    SDSSelectedResultComponent.prototype.disabled;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0ZWQtcmVzdWx0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvc2VsZWN0ZWQtcmVzdWx0L3NlbGVjdGVkLXJlc3VsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDekYsT0FBTyxFQUFFLGlCQUFpQixFQUF3QixNQUFNLGdCQUFnQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOztJQUMvRSxpQ0FBaUMsR0FBUTtJQUM3QyxPQUFPLEVBQUUsaUJBQWlCO0lBQzFCLFdBQVcsRUFBRSxVQUFVOzs7SUFBQyxjQUFNLE9BQUEsMEJBQTBCLEVBQTFCLENBQTBCLEVBQUM7SUFDekQsS0FBSyxFQUFFLElBQUk7Q0FDWjtBQUVEO0lBQUE7Ozs7UUE0QlMsc0JBQWlCOzs7UUFBZSxjQUFNLE9BQUEsSUFBSSxFQUFKLENBQUksRUFBQzs7OztRQUszQyxvQkFBZTs7OztRQUFxQixVQUFDLENBQU0sSUFBSyxPQUFBLElBQUksRUFBSixDQUFJLEVBQUM7SUErRDlELENBQUM7SUExREM7OztPQUdHOzs7Ozs7SUFDSCwrQ0FBVTs7Ozs7SUFBVixVQUFXLElBQVk7UUFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsMEJBQTBCLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xHLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1NBQzFCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCwrQ0FBVTs7OztJQUFWLFVBQVcsR0FBUTtRQUNqQixJQUFJLEdBQUcsWUFBWSxvQkFBb0IsRUFBRTtZQUN2QyxJQUFJLENBQUMsS0FBSyxHQUFHLG1CQUFBLEdBQUcsRUFBd0IsQ0FBQztTQUMxQztJQUNILENBQUM7Ozs7O0lBRUQscURBQWdCOzs7O0lBQWhCLFVBQWlCLEVBQU87UUFDdEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFRCxzREFBaUI7Ozs7SUFBakIsVUFBa0IsRUFBTztRQUN2QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsRUFBRSxDQUFDO0lBQzlCLENBQUM7Ozs7O0lBRUQscURBQWdCOzs7O0lBQWhCLFVBQWlCLFVBQW1CO1FBQ2xDLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO0lBQzdCLENBQUM7SUFHRDs7OztPQUlHOzs7Ozs7O0lBQ0gsbURBQWM7Ozs7OztJQUFkLFVBQWUsTUFBYyxFQUFFLGNBQXNCOztZQUMvQyxLQUFLLEdBQUcsRUFBRTs7WUFDVixPQUFPLEdBQUcsTUFBTTs7WUFDaEIsVUFBVSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBQzFDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFOztnQkFDdEMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7O2dCQUMxQixjQUFjLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7WUFDMUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O29CQUMxQyxlQUFlLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQztnQkFDdkMsSUFBSSxPQUFPLEVBQUU7b0JBQ1gsT0FBTyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztpQkFDcEM7YUFDRjtZQUVELElBQUksT0FBTyxFQUFFO2dCQUNYLEtBQUssSUFBSSxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsR0FBRyxDQUFDO2FBQ25DO1lBQ0QsT0FBTyxHQUFHLE1BQU0sQ0FBQztTQUNsQjtRQUNELE9BQU8sS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7O2dCQTlGRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsMC9DQUErQztvQkFFL0MsU0FBUyxFQUFFLENBQUMsaUNBQWlDLENBQUM7O2lCQUMvQzs7OytCQU1FLEtBQUs7Z0NBV0wsS0FBSzsyQkFhTCxLQUFLOztJQTZEUixpQ0FBQztDQUFBLEFBaEdELElBZ0dDO1NBMUZZLDBCQUEwQjs7Ozs7O0lBS3JDLGtEQUF3Qzs7Ozs7SUFLeEMsMkNBQW1DOzs7OztJQU1uQyxtREFDcUQ7Ozs7O0lBS3JELHVEQUFrRDs7Ozs7SUFLbEQscURBQTREOztJQUU1RCw4Q0FDeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZiwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU0RTU2VsZWN0ZWRJdGVtTW9kZWwgfSBmcm9tICcuL21vZGVscy9zZHMtc2VsZWN0ZWRJdGVtLm1vZGVsJztcbmltcG9ydCB7IFNEU1NlbGVjdGVkUmVzdWx0Q29uZmlndXJhdGlvbiB9IGZyb20gJy4vbW9kZWxzL1NEU1NlbGVjdGVkUmVzdWx0Q29uZmlndXJhdGlvbic7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiwgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBTRFNTZWxlY3RlZEl0ZW1Nb2RlbEhlbHBlciB9IGZyb20gJy4vbW9kZWxzL3Nkcy1zZWxlY3RlZC1pdGVtLW1vZGVsLWhlbHBlcic7XG5jb25zdCBTRFNfU2VsZWN0ZWRSZXN1bHRfVkFMVUVfQUNDRVNTT1I6IGFueSA9IHtcbiAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNEU1NlbGVjdGVkUmVzdWx0Q29tcG9uZW50KSxcbiAgbXVsdGk6IHRydWVcbn07XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nkcy1zZWxlY3RlZC1yZXN1bHQnLFxuICB0ZW1wbGF0ZVVybDogJy4vc2VsZWN0ZWQtcmVzdWx0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc2VsZWN0ZWQtcmVzdWx0LmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1NEU19TZWxlY3RlZFJlc3VsdF9WQUxVRV9BQ0NFU1NPUl1cbn0pXG5leHBvcnQgY2xhc3MgU0RTU2VsZWN0ZWRSZXN1bHRDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG5cbiAgLyoqXG4gICogQWxsb3cgdG8gaW5zZXJ0IGEgY3VzdG9taXplZCB0ZW1wbGF0ZSBmb3Igc3VnZ2VzdGlvbnMgdG8gdXNlXG4gICovXG4gIEBJbnB1dCgpIGl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAvKipcbiAgICogVGhlIGRhdGEgbW9kZWwgdGhhdCBoYXMgdGhlIHNlbGVjdGVkIGl0ZW1cbiAgICovXG4gIHB1YmxpYyBtb2RlbDogU0RTU2VsZWN0ZWRJdGVtTW9kZWw7XG5cblxuICAvKipcbiAgKiBDb25maWd1cmF0aW9uIGZvciB0aGUgU2VsZWN0ZWQgUmVzdWx0cyBjb250cm9sIFxuICAqL1xuICBASW5wdXQoKVxuICBwdWJsaWMgY29uZmlndXJhdGlvbjogU0RTU2VsZWN0ZWRSZXN1bHRDb25maWd1cmF0aW9uO1xuXG4gIC8qKlxuICAgKiBTdG9yZWQgRXZlbnQgZm9yIENvbnRyb2xWYWx1ZUFjY2Vzc29yXG4gICAqL1xuICBwdWJsaWMgb25Ub3VjaGVkQ2FsbGJhY2s6ICgpID0+IHZvaWQgPSAoKSA9PiBudWxsO1xuXG4gIC8qKlxuICAgKiBTdG9yZWQgRXZlbnQgZm9yIENvbnRyb2xWYWx1ZUFjY2Vzc29yXG4gICAqL1xuICBwdWJsaWMgcHJvcG9nYXRlQ2hhbmdlOiAoXzogYW55KSA9PiB2b2lkID0gKF86IGFueSkgPT4gbnVsbDtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgaXRlbSBmcm9tIHRoZSBtb2RlbFxuICAgKiBAcGFyYW0gaXRlbSBcbiAgICovXG4gIHJlbW92ZUl0ZW0oaXRlbTogb2JqZWN0KSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICBTRFNTZWxlY3RlZEl0ZW1Nb2RlbEhlbHBlci5yZW1vdmVJdGVtKGl0ZW0sIHRoaXMuY29uZmlndXJhdGlvbi5wcmltYXJ5S2V5RmllbGQsIHRoaXMubW9kZWwuaXRlbXMpO1xuICAgICAgdGhpcy5wcm9wb2dhdGVDaGFuZ2UodGhpcy5tb2RlbCk7XG4gICAgICB0aGlzLm9uVG91Y2hlZENhbGxiYWNrKCk7XG4gICAgfVxuICB9XG5cbiAgd3JpdGVWYWx1ZShvYmo6IGFueSk6IHZvaWQge1xuICAgIGlmIChvYmogaW5zdGFuY2VvZiBTRFNTZWxlY3RlZEl0ZW1Nb2RlbCkge1xuICAgICAgdGhpcy5tb2RlbCA9IG9iaiBhcyBTRFNTZWxlY3RlZEl0ZW1Nb2RlbDtcbiAgICB9XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLnByb3BvZ2F0ZUNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkQ2FsbGJhY2sgPSBmbjtcbiAgfVxuXG4gIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuZGlzYWJsZWQgPSBpc0Rpc2FibGVkO1xuICB9XG5cblxuICAvKipcbiAgICogR2V0cyB0aGUgc3RyaW5nIHZhbHVlIGZyb20gdGhlIHNwZWNpZmVkIHByb3BlcnRpZXMgb2YgYW4gb2JqZWN0XG4gICAqIEBwYXJhbSBvYmplY3QgXG4gICAqIEBwYXJhbSBwcm9wZXJ0eUZpZWxkcyBjb21tYSBzZXBlcmF0ZWQgbGlzdCB3aXRoIHBlcmlvZHMgZGVwdGggb2Ygb2JqZWN0XG4gICAqL1xuICBnZXRPYmplY3RWYWx1ZShvYmplY3Q6IE9iamVjdCwgcHJvcGVydHlGaWVsZHM6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgbGV0IHZhbHVlID0gJyc7XG4gICAgbGV0IGN1cnJlbnQgPSBvYmplY3Q7XG4gICAgbGV0IGZpZWxkU3BsaXQgPSBwcm9wZXJ0eUZpZWxkcy5zcGxpdCgnLCcpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmllbGRTcGxpdC5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGZpZWxkVmFsdWUgPSBmaWVsZFNwbGl0W2ldO1xuICAgICAgbGV0IGZpZWxkUGFydFNwbGl0ID0gZmllbGRWYWx1ZS5zcGxpdCgnLicpO1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBmaWVsZFBhcnRTcGxpdC5sZW5ndGg7IGorKykge1xuICAgICAgICBsZXQgZmllbGRDaGVja1ZhbHVlID0gZmllbGRQYXJ0U3BsaXRbal07XG4gICAgICAgIGlmIChjdXJyZW50KSB7XG4gICAgICAgICAgY3VycmVudCA9IGN1cnJlbnRbZmllbGRDaGVja1ZhbHVlXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoY3VycmVudCkge1xuICAgICAgICB2YWx1ZSArPSBjdXJyZW50LnRvU3RyaW5nKCkgKyAnICc7XG4gICAgICB9XG4gICAgICBjdXJyZW50ID0gb2JqZWN0O1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUudHJpbSgpO1xuICB9XG5cbn1cbiJdfQ==