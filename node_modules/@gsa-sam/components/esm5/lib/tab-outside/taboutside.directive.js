/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';
var SDSTabOutsideDirective = /** @class */ (function () {
    function SDSTabOutsideDirective(_elementRef) {
        this._elementRef = _elementRef;
        /**
         * Emitter for tabOutside event
         */
        this.tabOutside = new EventEmitter();
    }
    /**
     * @param {?} target
     * @return {?}
     */
    SDSTabOutsideDirective.prototype.hasFocusChanged = /**
     * @param {?} target
     * @return {?}
     */
    function (target) {
        /** @type {?} */
        var isInsideHost = this._elementRef.nativeElement.contains(target);
        if (!isInsideHost) {
            this.tabOutside.emit(undefined);
        }
    };
    SDSTabOutsideDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[sds-tab-outside]'
                },] }
    ];
    /** @nocollapse */
    SDSTabOutsideDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    SDSTabOutsideDirective.propDecorators = {
        tabOutside: [{ type: Output }],
        hasFocusChanged: [{ type: HostListener, args: ['document:keyup', ['$event.target'],] }]
    };
    return SDSTabOutsideDirective;
}());
export { SDSTabOutsideDirective };
if (false) {
    /**
     * Emitter for tabOutside event
     * @type {?}
     */
    SDSTabOutsideDirective.prototype.tabOutside;
    /**
     * @type {?}
     * @private
     */
    SDSTabOutsideDirective.prototype._elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFib3V0c2lkZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NhLXNhbS9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL3RhYi1vdXRzaWRlL3RhYm91dHNpZGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQzdCLFlBQVksRUFBRSxZQUFZLEVBQzNCLE1BQU0sZUFBZSxDQUFDO0FBR3ZCO0lBU0UsZ0NBQW9CLFdBQXVCO1FBQXZCLGdCQUFXLEdBQVgsV0FBVyxDQUFZOzs7O1FBRmpDLGVBQVUsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUVkLENBQUM7Ozs7O0lBR3pDLGdEQUFlOzs7O0lBRHRCLFVBQ3VCLE1BQU07O1lBQ3JCLFlBQVksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ3BFLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDakM7SUFDSCxDQUFDOztnQkFqQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7aUJBQzlCOzs7O2dCQVBZLFVBQVU7Ozs2QkFZcEIsTUFBTTtrQ0FJTixZQUFZLFNBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxlQUFlLENBQUM7O0lBT25ELDZCQUFDO0NBQUEsQUFsQkQsSUFrQkM7U0FmWSxzQkFBc0I7Ozs7OztJQUlqQyw0Q0FBNkQ7Ozs7O0lBRWpELDZDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc2RzLXRhYi1vdXRzaWRlXSdcbn0pXG5leHBvcnQgY2xhc3MgU0RTVGFiT3V0c2lkZURpcmVjdGl2ZSB7XG4gIC8qKlxuICAgKiBFbWl0dGVyIGZvciB0YWJPdXRzaWRlIGV2ZW50XG4gICAqL1xuICBAT3V0cHV0KCkgdGFiT3V0c2lkZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWxlbWVudFJlZjogRWxlbWVudFJlZikgeyB9XG5cbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6a2V5dXAnLCBbJyRldmVudC50YXJnZXQnXSlcbiAgcHVibGljIGhhc0ZvY3VzQ2hhbmdlZCh0YXJnZXQpIHtcbiAgICBjb25zdCBpc0luc2lkZUhvc3QgPSB0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuY29udGFpbnModGFyZ2V0KTtcbiAgICBpZiAoIWlzSW5zaWRlSG9zdCkge1xuICAgICAgdGhpcy50YWJPdXRzaWRlLmVtaXQodW5kZWZpbmVkKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==