/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectorRef, ViewChild, ElementRef } from '@angular/core';
import { PaginationConfigurationModel, PaginationModel } from './model/paginationModel';
var PaginationComponent = /** @class */ (function () {
    function PaginationComponent(change) {
        this.change = change;
        /**
         * Output of the page model object
         */
        this.pageChange = new EventEmitter();
        /**
         * Pagination model
         */
        this.page = new PaginationModel();
        /**
         * debounce time for current page input
         */
        this.debounceTime = 500;
        /**
         * Drop down options for page size
         */
        this.options = [
            { label: '25', value: 25 },
            { label: '50', value: 50 },
            { label: '100', value: 100 }
        ];
    }
    /**
     * @return {?}
     */
    PaginationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.maintainPreviousValue();
    };
    /**
     * Stores the previous number. Used when focus out if field empty
     */
    /**
     * Stores the previous number. Used when focus out if field empty
     * @private
     * @return {?}
     */
    PaginationComponent.prototype.maintainPreviousValue = /**
     * Stores the previous number. Used when focus out if field empty
     * @private
     * @return {?}
     */
    function () {
        this.previousNumber = this.page.pageNumber.valueOf();
    };
    /**
     * previous page lowers page number by one within range
     */
    /**
     * previous page lowers page number by one within range
     * @return {?}
     */
    PaginationComponent.prototype.previousPage = /**
     * previous page lowers page number by one within range
     * @return {?}
     */
    function () {
        if (this.page.pageNumber > 1) {
            this.page.pageNumber--;
            this.maintainPreviousValue();
            this.pageChange.emit(this.page);
        }
    };
    /**
     * next page increase page number by one within range
     */
    /**
     * next page increase page number by one within range
     * @return {?}
     */
    PaginationComponent.prototype.nextPage = /**
     * next page increase page number by one within range
     * @return {?}
     */
    function () {
        if (this.page.pageNumber < this.page.totalPages) {
            this.page.pageNumber++;
            this.maintainPreviousValue();
            this.pageChange.emit(this.page);
        }
    };
    /**
     * current page changes sets new value if within range
     * @param newValue
     */
    /**
     * current page changes sets new value if within range
     * @param {?=} newValue
     * @return {?}
     */
    PaginationComponent.prototype.valuechange = /**
     * current page changes sets new value if within range
     * @param {?=} newValue
     * @return {?}
     */
    function (newValue) {
        var _this = this;
        window.clearTimeout(this.timeoutNumber);
        this.timeoutNumber = window.setTimeout((/**
         * @return {?}
         */
        function () {
            if (newValue || newValue === 0) {
                newValue = _this.handleInputOutsideBounds(newValue);
                if (newValue >= 1 && newValue <= _this.page.totalPages) {
                    _this.page.pageNumber = newValue;
                    _this.maintainPreviousValue();
                    _this.pageChange.emit(_this.page);
                    _this.change.detectChanges();
                }
            }
            else {
                if (_this.page.pageNumber) {
                    _this.maintainPreviousValue();
                }
            }
        }), this.debounceTime);
    };
    /**
     * adjusts the value if not within the page limit above or below
     * @param newValue handles
     */
    /**
     * adjusts the value if not within the page limit above or below
     * @private
     * @param {?=} newValue handles
     * @return {?}
     */
    PaginationComponent.prototype.handleInputOutsideBounds = /**
     * adjusts the value if not within the page limit above or below
     * @private
     * @param {?=} newValue handles
     * @return {?}
     */
    function (newValue) {
        if (newValue < 1) {
            newValue = 1;
            this.currentPageField.nativeElement.value = newValue;
        }
        else if (newValue > this.page.totalPages) {
            newValue = this.page.totalPages;
            this.currentPageField.nativeElement.value = newValue;
        }
        return newValue;
    };
    /**
     * current page focus out will replace with previous valid if empty
     */
    /**
     * current page focus out will replace with previous valid if empty
     * @return {?}
     */
    PaginationComponent.prototype.currentPageFocusOut = /**
     * current page focus out will replace with previous valid if empty
     * @return {?}
     */
    function () {
        if (this.currentPageField.nativeElement.value === '') {
            this.currentPageField.nativeElement.value = this.page.pageNumber = this.previousNumber;
            this.change.detectChanges();
        }
    };
    /**
     * page size selection change
     */
    /**
     * page size selection change
     * @return {?}
     */
    PaginationComponent.prototype.onSelectChange = /**
     * page size selection change
     * @return {?}
     */
    function () {
        this.page.pageNumber = 1;
        this.pageChange.emit(this.page);
    };
    PaginationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-pagination',
                    template: "<div class=\"sds-pagination\">\n  <div class=\"sds-pagination__controls\">\n    <button [attr.id]=\"paginationConfiguration.id +'-previousPage'\" (click)=\"previousPage()\">Previous Page</button>\n    <label class=\"usa-label font-sans-3xs margin-top-1 text-italic text-base usa-sr-only\"\n      [attr.for]=\"paginationConfiguration.id + '-currentPage'\">Current Page</label>\n    <input [attr.id]=\"paginationConfiguration.id +'-currentPage'\"\n      class=\"usa-input height-3 width-4 line-height-05 font-sans-3xs text-center border-base-light\" #currentPage\n      (ngModelChange)=\"valuechange($event)\" [(ngModel)]=\"page.pageNumber\" type=\"number\" min=\"1\"\n      [(attr.max)]=\"page.totalPages\" (focusout)=\"currentPageFocusOut()\" aria-label=\"current page\" />\n    <span class=\"sds-pagination__total\">\n      of <strong>{{ page.totalPages }}</strong>\n    </span>\n    <button [attr.id]=\"paginationConfiguration.id +'-nextPage'\" (click)=\"nextPage()\">Next Page</button>\n  </div>\n  <div class=\"sds-pagination__results\">\n    <label class=\"usa-label font-sans-3xs text-italic text-base\"\n      [attr.for]=\"paginationConfiguration.id + '-select'\">Results per page</label>\n    <select class=\"usa-select usa-select--small border-base-light\" [attr.id]=\"paginationConfiguration.id + '-select'\"\n      (change)=\"onSelectChange()\" [(ngModel)]=\"page.pageSize\">\n      <option *ngFor=\"let item of options\" [ngValue]=\"item.value\">\n        {{ item.label }}\n      </option>\n    </select>\n  </div>\n</div>\n",
                    styles: ["input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}"]
                }] }
    ];
    /** @nocollapse */
    PaginationComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    PaginationComponent.propDecorators = {
        currentPageField: [{ type: ViewChild, args: ['currentPage',] }],
        pageChange: [{ type: Output }],
        page: [{ type: Input }],
        paginationConfiguration: [{ type: Input }]
    };
    return PaginationComponent;
}());
export { PaginationComponent };
if (false) {
    /**
     * Input field for the current page
     * @type {?}
     */
    PaginationComponent.prototype.currentPageField;
    /**
     * Output of the page model object
     * @type {?}
     */
    PaginationComponent.prototype.pageChange;
    /**
     * Pagination model
     * @type {?}
     */
    PaginationComponent.prototype.page;
    /**
     * configuration for the pagination
     * @type {?}
     */
    PaginationComponent.prototype.paginationConfiguration;
    /**
     * debounce time for current page input
     * @type {?}
     */
    PaginationComponent.prototype.debounceTime;
    /**
     * Stores the previous number
     * @type {?}
     * @private
     */
    PaginationComponent.prototype.previousNumber;
    /**
     * timeout id of the debounce time
     * @type {?}
     */
    PaginationComponent.prototype.timeoutNumber;
    /**
     * Drop down options for page size
     * @type {?}
     */
    PaginationComponent.prototype.options;
    /**
     * @type {?}
     * @private
     */
    PaginationComponent.prototype.change;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NhLXNhbS9jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6SCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFeEY7SUFXRSw2QkFBb0IsTUFBeUI7UUFBekIsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7Ozs7UUFtQjdDLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBbUIsQ0FBQzs7OztRQU1qRCxTQUFJLEdBQW9CLElBQUksZUFBZSxFQUFFLENBQUM7Ozs7UUFZOUMsaUJBQVksR0FBVyxHQUFHLENBQUM7Ozs7UUFlcEIsWUFBTyxHQUFHO1lBQ2YsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7WUFDMUIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7WUFDMUIsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUU7U0FDN0IsQ0FBQztJQXhEK0MsQ0FBQzs7OztJQUpsRCxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBS0Q7O09BRUc7Ozs7OztJQUNLLG1EQUFxQjs7Ozs7SUFBN0I7UUFDRSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFrREQ7O09BRUc7Ozs7O0lBQ0gsMENBQVk7Ozs7SUFBWjtR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QUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDOztnQkFuSkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLDRnREFBMEM7O2lCQUUzQzs7OztnQkFQd0QsaUJBQWlCOzs7bUNBMkJ2RSxTQUFTLFNBQUMsYUFBYTs2QkFLdkIsTUFBTTt1QkFNTixLQUFLOzBDQU1MLEtBQUs7O0lBMkdSLDBCQUFDO0NBQUEsQUFwSkQsSUFvSkM7U0EvSVksbUJBQW1COzs7Ozs7SUFtQjlCLCtDQUF1RDs7Ozs7SUFLdkQseUNBQ2lEOzs7OztJQUtqRCxtQ0FDOEM7Ozs7O0lBSzlDLHNEQUNzRDs7Ozs7SUFNdEQsMkNBQTJCOzs7Ozs7SUFLM0IsNkNBQStCOzs7OztJQUsvQiw0Q0FBc0I7Ozs7O0lBS3RCLHNDQUlFOzs7OztJQXhEVSxxQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBDaGFuZ2VEZXRlY3RvclJlZiwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYWdpbmF0aW9uQ29uZmlndXJhdGlvbk1vZGVsLCBQYWdpbmF0aW9uTW9kZWwgfSBmcm9tICcuL21vZGVsL3BhZ2luYXRpb25Nb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nkcy1wYWdpbmF0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BhZ2luYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wYWdpbmF0aW9uLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUGFnaW5hdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5tYWludGFpblByZXZpb3VzVmFsdWUoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XG5cblxuICAvKipcbiAgICogU3RvcmVzIHRoZSBwcmV2aW91cyBudW1iZXIuIFVzZWQgd2hlbiBmb2N1cyBvdXQgaWYgZmllbGQgZW1wdHlcbiAgICovXG4gIHByaXZhdGUgbWFpbnRhaW5QcmV2aW91c1ZhbHVlKCkge1xuICAgIHRoaXMucHJldmlvdXNOdW1iZXIgPSB0aGlzLnBhZ2UucGFnZU51bWJlci52YWx1ZU9mKCk7XG4gIH1cblxuICAvKipcbiAgICogSW5wdXQgZmllbGQgZm9yIHRoZSBjdXJyZW50IHBhZ2VcbiAgICovXG4gIEBWaWV3Q2hpbGQoJ2N1cnJlbnRQYWdlJykgY3VycmVudFBhZ2VGaWVsZDogRWxlbWVudFJlZjtcblxuICAvKipcbiAgICogT3V0cHV0IG9mIHRoZSBwYWdlIG1vZGVsIG9iamVjdFxuICAgKi9cbiAgQE91dHB1dCgpXG4gIHBhZ2VDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPFBhZ2luYXRpb25Nb2RlbD4oKTtcblxuICAvKipcbiAgICogUGFnaW5hdGlvbiBtb2RlbFxuICAgKi9cbiAgQElucHV0KClcbiAgcGFnZTogUGFnaW5hdGlvbk1vZGVsID0gbmV3IFBhZ2luYXRpb25Nb2RlbCgpO1xuXG4gIC8qKlxuICAgKiBjb25maWd1cmF0aW9uIGZvciB0aGUgcGFnaW5hdGlvblxuICAgKi9cbiAgQElucHV0KClcbiAgcGFnaW5hdGlvbkNvbmZpZ3VyYXRpb246IFBhZ2luYXRpb25Db25maWd1cmF0aW9uTW9kZWw7XG5cblxuICAvKipcbiAgICogZGVib3VuY2UgdGltZSBmb3IgY3VycmVudCBwYWdlIGlucHV0XG4gICAqL1xuICBkZWJvdW5jZVRpbWU6IG51bWJlciA9IDUwMDtcblxuICAvKipcbiAgICogU3RvcmVzIHRoZSBwcmV2aW91cyBudW1iZXJcbiAgICovXG4gIHByaXZhdGUgcHJldmlvdXNOdW1iZXI6IG51bWJlcjtcblxuICAvKipcbiAgICogdGltZW91dCBpZCBvZiB0aGUgZGVib3VuY2UgdGltZSBcbiAgICovXG4gIHRpbWVvdXROdW1iZXI6IG51bWJlcjtcblxuICAvKipcbiAgICogRHJvcCBkb3duIG9wdGlvbnMgZm9yIHBhZ2Ugc2l6ZVxuICAgKi9cbiAgcHVibGljIG9wdGlvbnMgPSBbXG4gICAgeyBsYWJlbDogJzI1JywgdmFsdWU6IDI1IH0sXG4gICAgeyBsYWJlbDogJzUwJywgdmFsdWU6IDUwIH0sXG4gICAgeyBsYWJlbDogJzEwMCcsIHZhbHVlOiAxMDAgfVxuICBdO1xuXG4gIC8qKlxuICAgKiBwcmV2aW91cyBwYWdlIGxvd2VycyBwYWdlIG51bWJlciBieSBvbmUgd2l0aGluIHJhbmdlXG4gICAqL1xuICBwcmV2aW91c1BhZ2UoKSB7XG4gICAgaWYgKHRoaXMucGFnZS5wYWdlTnVtYmVyID4gMSkge1xuICAgICAgdGhpcy5wYWdlLnBhZ2VOdW1iZXItLTtcbiAgICAgIHRoaXMubWFpbnRhaW5QcmV2aW91c1ZhbHVlKCk7XG4gICAgICB0aGlzLnBhZ2VDaGFuZ2UuZW1pdCh0aGlzLnBhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBuZXh0IHBhZ2UgaW5jcmVhc2UgcGFnZSBudW1iZXIgYnkgb25lIHdpdGhpbiByYW5nZVxuICAgKi9cbiAgbmV4dFBhZ2UoKSB7XG4gICAgaWYgKHRoaXMucGFnZS5wYWdlTnVtYmVyIDwgdGhpcy5wYWdlLnRvdGFsUGFnZXMpIHtcbiAgICAgIHRoaXMucGFnZS5wYWdlTnVtYmVyKys7XG4gICAgICB0aGlzLm1haW50YWluUHJldmlvdXNWYWx1ZSgpO1xuICAgICAgdGhpcy5wYWdlQ2hhbmdlLmVtaXQodGhpcy5wYWdlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogY3VycmVudCBwYWdlIGNoYW5nZXMgc2V0cyBuZXcgdmFsdWUgaWYgd2l0aGluIHJhbmdlXG4gICAqIEBwYXJhbSBuZXdWYWx1ZSBcbiAgICovXG4gIHZhbHVlY2hhbmdlKG5ld1ZhbHVlPzogbnVtYmVyKSB7XG4gICAgd2luZG93LmNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXROdW1iZXIpO1xuICAgIHRoaXMudGltZW91dE51bWJlciA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmIChuZXdWYWx1ZSB8fCBuZXdWYWx1ZSA9PT0gMCkge1xuICAgICAgICBuZXdWYWx1ZSA9IHRoaXMuaGFuZGxlSW5wdXRPdXRzaWRlQm91bmRzKG5ld1ZhbHVlKTtcbiAgICAgICAgaWYgKG5ld1ZhbHVlID49IDEgJiYgbmV3VmFsdWUgPD0gdGhpcy5wYWdlLnRvdGFsUGFnZXMpIHtcbiAgICAgICAgICB0aGlzLnBhZ2UucGFnZU51bWJlciA9IG5ld1ZhbHVlO1xuICAgICAgICAgIHRoaXMubWFpbnRhaW5QcmV2aW91c1ZhbHVlKCk7XG4gICAgICAgICAgdGhpcy5wYWdlQ2hhbmdlLmVtaXQodGhpcy5wYWdlKTtcbiAgICAgICAgICB0aGlzLmNoYW5nZS5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgaWYgKHRoaXMucGFnZS5wYWdlTnVtYmVyKSB7XG4gICAgICAgICAgdGhpcy5tYWludGFpblByZXZpb3VzVmFsdWUoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sIHRoaXMuZGVib3VuY2VUaW1lKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBhZGp1c3RzIHRoZSB2YWx1ZSBpZiBub3Qgd2l0aGluIHRoZSBwYWdlIGxpbWl0IGFib3ZlIG9yIGJlbG93XG4gICAqIEBwYXJhbSBuZXdWYWx1ZSBoYW5kbGVzXG4gICAqL1xuICBwcml2YXRlIGhhbmRsZUlucHV0T3V0c2lkZUJvdW5kcyhuZXdWYWx1ZT86IG51bWJlcikge1xuICAgIGlmIChuZXdWYWx1ZSA8IDEpIHtcbiAgICAgIG5ld1ZhbHVlID0gMTtcbiAgICAgIHRoaXMuY3VycmVudFBhZ2VGaWVsZC5uYXRpdmVFbGVtZW50LnZhbHVlID0gbmV3VmFsdWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKG5ld1ZhbHVlID4gdGhpcy5wYWdlLnRvdGFsUGFnZXMpIHtcbiAgICAgIG5ld1ZhbHVlID0gdGhpcy5wYWdlLnRvdGFsUGFnZXM7XG4gICAgICB0aGlzLmN1cnJlbnRQYWdlRmllbGQubmF0aXZlRWxlbWVudC52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gbmV3VmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogY3VycmVudCBwYWdlIGZvY3VzIG91dCB3aWxsIHJlcGxhY2Ugd2l0aCBwcmV2aW91cyB2YWxpZCBpZiBlbXB0eVxuICAgKi9cbiAgY3VycmVudFBhZ2VGb2N1c091dCgpIHtcbiAgICBpZiAodGhpcy5jdXJyZW50UGFnZUZpZWxkLm5hdGl2ZUVsZW1lbnQudmFsdWUgPT09ICcnKSB7XG4gICAgICB0aGlzLmN1cnJlbnRQYWdlRmllbGQubmF0aXZlRWxlbWVudC52YWx1ZSA9IHRoaXMucGFnZS5wYWdlTnVtYmVyID0gdGhpcy5wcmV2aW91c051bWJlcjtcbiAgICAgIHRoaXMuY2hhbmdlLmRldGVjdENoYW5nZXMoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogcGFnZSBzaXplIHNlbGVjdGlvbiBjaGFuZ2VcbiAgICovXG4gIG9uU2VsZWN0Q2hhbmdlKCkge1xuICAgIHRoaXMucGFnZS5wYWdlTnVtYmVyID0gMTtcbiAgICB0aGlzLnBhZ2VDaGFuZ2UuZW1pdCh0aGlzLnBhZ2UpO1xuICB9XG59XG4iXX0=