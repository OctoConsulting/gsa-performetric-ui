/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Inject, HostBinding, HostListener } from '@angular/core';
import { SDS_TRUNCATED_TEXT_DATA } from './truncates-text-base';
import { sdsTruncateTextAnimations } from './truncate-text-animations';
/**
 * @record
 */
export function SdsTruncateTextData() { }
if (false) {
    /** @type {?} */
    SdsTruncateTextData.prototype.text;
}
var SdsTruncatedTextContainerComponent = /** @class */ (function () {
    function SdsTruncatedTextContainerComponent(data) {
        this.data = data;
        this._animationState = 'void';
    }
    /** Starts the animation. */
    /**
     * Starts the animation.
     * @return {?}
     */
    SdsTruncatedTextContainerComponent.prototype.startAnimation = /**
     * Starts the animation.
     * @return {?}
     */
    function () {
        this._animationState = 'enter';
    };
    /** Resets the animation to its initial state. */
    /**
     * Resets the animation to its initial state.
     * @return {?}
     */
    SdsTruncatedTextContainerComponent.prototype.resetAnimation = /**
     * Resets the animation to its initial state.
     * @return {?}
     */
    function () {
        this._animationState = 'void';
    };
    /** Intentionally left empty to trigger change detection */
    /**
     * Intentionally left empty to trigger change detection
     * @return {?}
     */
    SdsTruncatedTextContainerComponent.prototype._onAnimationDone = /**
     * Intentionally left empty to trigger change detection
     * @return {?}
     */
    function () { };
    SdsTruncatedTextContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-truncated-text-container',
                    template: "\n    <div class=\"sds-overlay maxw-mobile radius-overlay padding-2\">{{ data.text }}</div>\n  ",
                    animations: [sdsTruncateTextAnimations.container]
                }] }
    ];
    /** @nocollapse */
    SdsTruncatedTextContainerComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [SDS_TRUNCATED_TEXT_DATA,] }] }
    ]; };
    SdsTruncatedTextContainerComponent.propDecorators = {
        _animationState: [{ type: HostBinding, args: ['@container',] }],
        _onAnimationDone: [{ type: HostListener, args: ['@container.done',] }]
    };
    return SdsTruncatedTextContainerComponent;
}());
export { SdsTruncatedTextContainerComponent };
if (false) {
    /** @type {?} */
    SdsTruncatedTextContainerComponent.prototype._animationState;
    /** @type {?} */
    SdsTruncatedTextContainerComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1bmNhdGUtdGV4dC1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzYS1zYW0vY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi90cnVuY2F0ZS10ZXh0L3RydW5jYXRlLXRleHQtY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7OztBQUV2RSx5Q0FFQzs7O0lBREMsbUNBQWE7O0FBR2Y7SUFVRSw0Q0FBb0QsSUFBeUI7UUFBekIsU0FBSSxHQUFKLElBQUksQ0FBcUI7UUFGbEQsb0JBQWUsR0FBRyxNQUFNLENBQUM7SUFFNEIsQ0FBQztJQUVqRiw0QkFBNEI7Ozs7O0lBQzVCLDJEQUFjOzs7O0lBQWQ7UUFDRSxJQUFJLENBQUMsZUFBZSxHQUFHLE9BQU8sQ0FBQztJQUNqQyxDQUFDO0lBRUQsaURBQWlEOzs7OztJQUNqRCwyREFBYzs7OztJQUFkO1FBQ0UsSUFBSSxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUM7SUFDaEMsQ0FBQztJQUVELDJEQUEyRDs7Ozs7SUFFM0QsNkRBQWdCOzs7O0lBRGhCLGNBQ29CLENBQUM7O2dCQXhCdEIsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLFFBQVEsRUFBRSxpR0FFVDtvQkFDRCxVQUFVLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQyxTQUFTLENBQUM7aUJBQ2xEOzs7O2dEQUljLE1BQU0sU0FBQyx1QkFBdUI7OztrQ0FGMUMsV0FBVyxTQUFDLFlBQVk7bUNBZXhCLFlBQVksU0FBQyxpQkFBaUI7O0lBRWpDLHlDQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0FsQlksa0NBQWtDOzs7SUFDN0MsNkRBQW9EOztJQUV4QyxrREFBaUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU0RTX1RSVU5DQVRFRF9URVhUX0RBVEEgfSBmcm9tICcuL3RydW5jYXRlcy10ZXh0LWJhc2UnO1xuaW1wb3J0IHsgc2RzVHJ1bmNhdGVUZXh0QW5pbWF0aW9ucyB9IGZyb20gJy4vdHJ1bmNhdGUtdGV4dC1hbmltYXRpb25zJztcblxuZXhwb3J0IGludGVyZmFjZSBTZHNUcnVuY2F0ZVRleHREYXRhIHtcbiAgdGV4dDogc3RyaW5nO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzZHMtdHJ1bmNhdGVkLXRleHQtY29udGFpbmVyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwic2RzLW92ZXJsYXkgbWF4dy1tb2JpbGUgcmFkaXVzLW92ZXJsYXkgcGFkZGluZy0yXCI+e3sgZGF0YS50ZXh0IH19PC9kaXY+XG4gIGAsXG4gIGFuaW1hdGlvbnM6IFtzZHNUcnVuY2F0ZVRleHRBbmltYXRpb25zLmNvbnRhaW5lcl1cbn0pXG5leHBvcnQgY2xhc3MgU2RzVHJ1bmNhdGVkVGV4dENvbnRhaW5lckNvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZygnQGNvbnRhaW5lcicpIF9hbmltYXRpb25TdGF0ZSA9ICd2b2lkJztcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KFNEU19UUlVOQ0FURURfVEVYVF9EQVRBKSBwdWJsaWMgZGF0YTogU2RzVHJ1bmNhdGVUZXh0RGF0YSkge31cblxuICAvKiogU3RhcnRzIHRoZSBhbmltYXRpb24uICovXG4gIHN0YXJ0QW5pbWF0aW9uKCkge1xuICAgIHRoaXMuX2FuaW1hdGlvblN0YXRlID0gJ2VudGVyJztcbiAgfVxuXG4gIC8qKiBSZXNldHMgdGhlIGFuaW1hdGlvbiB0byBpdHMgaW5pdGlhbCBzdGF0ZS4gKi9cbiAgcmVzZXRBbmltYXRpb24oKSB7XG4gICAgdGhpcy5fYW5pbWF0aW9uU3RhdGUgPSAndm9pZCc7XG4gIH1cblxuICAvKiogSW50ZW50aW9uYWxseSBsZWZ0IGVtcHR5IHRvIHRyaWdnZXIgY2hhbmdlIGRldGVjdGlvbiAqL1xuICBASG9zdExpc3RlbmVyKCdAY29udGFpbmVyLmRvbmUnKVxuICBfb25BbmltYXRpb25Eb25lKCkge31cbn1cbiJdfQ==