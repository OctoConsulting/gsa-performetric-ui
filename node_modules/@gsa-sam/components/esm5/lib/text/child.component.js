/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
var SdsTextChildComponent = /** @class */ (function () {
    function SdsTextChildComponent() {
        this.itemsChange = new EventEmitter();
    }
    // Method to remove an item from the items array, emits an event that the parent component is listening for
    // Method to remove an item from the items array, emits an event that the parent component is listening for
    /**
     * @param {?} index
     * @return {?}
     */
    SdsTextChildComponent.prototype.removeItem = 
    // Method to remove an item from the items array, emits an event that the parent component is listening for
    /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.items.splice(index, 1);
        this.itemsChange.emit(this.items);
    };
    SdsTextChildComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-text-child',
                    template: "\n    <ng-container *ngIf=\"items\">\n      <span class=\"sds-tag sds-tag--chip margin-x-05\" style=\"cursor:pointer;\" *ngFor=\"let item of items; let i=index\" (click)=\"removeItem(i)\">{{item}} <small class=\"margin-left-05\">(x)</small></span>\n    </ng-container>\n  "
                }] }
    ];
    SdsTextChildComponent.propDecorators = {
        items: [{ type: Input }],
        itemsChange: [{ type: Output }]
    };
    return SdsTextChildComponent;
}());
export { SdsTextChildComponent };
if (false) {
    /** @type {?} */
    SdsTextChildComponent.prototype.items;
    /** @type {?} */
    SdsTextChildComponent.prototype.itemsChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzYS1zYW0vY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImxpYi90ZXh0L2NoaWxkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUd2RTtJQUFBO1FBVWMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBUS9DLENBQUM7SUFORywyR0FBMkc7Ozs7OztJQUMzRywwQ0FBVTs7Ozs7O0lBQVYsVUFBVyxLQUFLO1FBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDOztnQkFoQkosU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFFBQVEsRUFBRSxrUkFJVDtpQkFDRjs7O3dCQUVJLEtBQUs7OEJBQ0wsTUFBTTs7SUFRWCw0QkFBQztDQUFBLEFBbEJELElBa0JDO1NBVlkscUJBQXFCOzs7SUFDOUIsc0NBQWU7O0lBQ2YsNENBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2RzLXRleHQtY2hpbGQnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtc1wiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzZHMtdGFnIHNkcy10YWctLWNoaXAgbWFyZ2luLXgtMDVcIiBzdHlsZT1cImN1cnNvcjpwb2ludGVyO1wiICpuZ0Zvcj1cImxldCBpdGVtIG9mIGl0ZW1zOyBsZXQgaT1pbmRleFwiIChjbGljayk9XCJyZW1vdmVJdGVtKGkpXCI+e3tpdGVtfX0gPHNtYWxsIGNsYXNzPVwibWFyZ2luLWxlZnQtMDVcIj4oeCk8L3NtYWxsPjwvc3Bhbj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBTZHNUZXh0Q2hpbGRDb21wb25lbnQgIHtcbiAgICBASW5wdXQoKSBpdGVtcztcbiAgICBAT3V0cHV0KCkgaXRlbXNDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICAvLyBNZXRob2QgdG8gcmVtb3ZlIGFuIGl0ZW0gZnJvbSB0aGUgaXRlbXMgYXJyYXksIGVtaXRzIGFuIGV2ZW50IHRoYXQgdGhlIHBhcmVudCBjb21wb25lbnQgaXMgbGlzdGVuaW5nIGZvclxuICAgIHJlbW92ZUl0ZW0oaW5kZXgpe1xuICAgICAgdGhpcy5pdGVtcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5pdGVtc0NoYW5nZS5lbWl0KHRoaXMuaXRlbXMpO1xuICAgIH1cblxufVxuXG4iXX0=