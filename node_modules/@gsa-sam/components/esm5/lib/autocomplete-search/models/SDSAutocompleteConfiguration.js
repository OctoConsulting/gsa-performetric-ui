/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SelectionMode } from '../../selected-result/models/sds-selected-item-model-helper';
var SDSAutocompleteSearchConfiguration = /** @class */ (function () {
    /**
     * sets the default debounce time to 250 milliseconds
     */
    function SDSAutocompleteSearchConfiguration() {
        /**
         * Mode of the model either allows a single item or multiple items
         */
        this.selectionMode = SelectionMode.SINGLE;
        /**
         * Allows option to allow user text not in the standard results
         */
        this.isFreeTextEnabled = false;
        /**
         * Text appeneded ad the end of free text
         */
        this.freeTextSubtext = 'search';
        /**
         * Focus into autocomplete search
         */
        this.focusInSearch = true;
        /**
         * The aria-label for the auto-complete
         */
        this.ariaLabelText = 'Auto Complete';
        /**
         * To enable the tag mode
         */
        this.isTagModeEnabled = false;
        /**
         * To make input readonly
         */
        this.inputReadOnly = false;
        this.debounceTime = 250;
        this.minimumCharacterCountSearch = 0;
    }
    return SDSAutocompleteSearchConfiguration;
}());
export { SDSAutocompleteSearchConfiguration };
if (false) {
    /**
     * Used to describe the drop down (Text should match the label that will be supplied)
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.labelText;
    /**
     * Used for the Id of the control
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.id;
    /**
     *  This is the primary field used to identify each object in the results
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.primaryKeyField;
    /**
     *  Property from supplied model used for the top part of the basic template
     *  and the text for single selection
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.primaryTextField;
    /**
     *  Property from supplied model used for the bottom part of the basic template
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.secondaryTextField;
    /**
     *  Sets the time waited for addional key actions Default is 250 milliseconds
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.debounceTime;
    /**
     * Place holder text for autocomplete input
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.autocompletePlaceHolderText;
    /**
     * Mininumn Characters for search
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.minimumCharacterCountSearch;
    /**
     * Mode of the model either allows a single item or multiple items
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.selectionMode;
    /**
     * Allows option to allow user text not in the standard results
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.isFreeTextEnabled;
    /**
     * Text appeneded ad the end of free text
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.freeTextSubtext;
    /**
     * Focus into autocomplete search
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.focusInSearch;
    /**
     * The aria-label for the auto-complete
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.ariaLabelText;
    /**
     * To enable the tag mode
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.isTagModeEnabled;
    /**
     * To make input readonly
     * @type {?}
     */
    SDSAutocompleteSearchConfiguration.prototype.inputReadOnly;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU0RTQXV0b2NvbXBsZXRlQ29uZmlndXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL2NvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvYXV0b2NvbXBsZXRlLXNlYXJjaC9tb2RlbHMvU0RTQXV0b2NvbXBsZXRlQ29uZmlndXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBRTVGO0lBRUU7O09BRUc7SUFDSDs7OztRQWlETyxrQkFBYSxHQUFrQixhQUFhLENBQUMsTUFBTSxDQUFDOzs7O1FBS3BELHNCQUFpQixHQUFZLEtBQUssQ0FBQzs7OztRQUtuQyxvQkFBZSxHQUFXLFFBQVEsQ0FBQzs7OztRQUtuQyxrQkFBYSxHQUFZLElBQUksQ0FBQzs7OztRQUs5QixrQkFBYSxHQUFXLGVBQWUsQ0FBQzs7OztRQUt4QyxxQkFBZ0IsR0FBVyxLQUFLLENBQUM7Ozs7UUFLakMsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUE5RTNCLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLElBQUksQ0FBQywyQkFBMkIsR0FBRyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQThFSCx5Q0FBQztBQUFELENBQUMsQUF0RkQsSUFzRkM7Ozs7Ozs7SUF6RUMsdURBQXlCOzs7OztJQUt6QixnREFBa0I7Ozs7O0lBS2xCLDZEQUErQjs7Ozs7O0lBTS9CLDhEQUFnQzs7Ozs7SUFLaEMsZ0VBQWtDOzs7OztJQUtsQywwREFBNEI7Ozs7O0lBSzVCLHlFQUEyQzs7Ozs7SUFLM0MseUVBQTJDOzs7OztJQUszQywyREFBMkQ7Ozs7O0lBSzNELCtEQUEwQzs7Ozs7SUFLMUMsNkRBQTBDOzs7OztJQUsxQywyREFBcUM7Ozs7O0lBS3JDLDJEQUErQzs7Ozs7SUFLL0MsOERBQXdDOzs7OztJQUt4QywyREFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZWxlY3Rpb25Nb2RlIH0gZnJvbSAnLi4vLi4vc2VsZWN0ZWQtcmVzdWx0L21vZGVscy9zZHMtc2VsZWN0ZWQtaXRlbS1tb2RlbC1oZWxwZXInO1xuXG5leHBvcnQgY2xhc3MgU0RTQXV0b2NvbXBsZXRlU2VhcmNoQ29uZmlndXJhdGlvbiB7XG5cbiAgLyoqXG4gICAqIHNldHMgdGhlIGRlZmF1bHQgZGVib3VuY2UgdGltZSB0byAyNTAgbWlsbGlzZWNvbmRzIFxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5kZWJvdW5jZVRpbWUgPSAyNTA7XG4gICAgdGhpcy5taW5pbXVtQ2hhcmFjdGVyQ291bnRTZWFyY2ggPSAwO1xuICB9XG5cbiAgLyoqXG4gICAqIFVzZWQgdG8gZGVzY3JpYmUgdGhlIGRyb3AgZG93biAoVGV4dCBzaG91bGQgbWF0Y2ggdGhlIGxhYmVsIHRoYXQgd2lsbCBiZSBzdXBwbGllZClcbiAgICovXG4gIHB1YmxpYyBsYWJlbFRleHQ6IHN0cmluZztcblxuICAvKipcbiAgICogVXNlZCBmb3IgdGhlIElkIG9mIHRoZSBjb250cm9sXG4gICAqL1xuICBwdWJsaWMgaWQ6IHN0cmluZztcblxuICAvKipcbiAgICogIFRoaXMgaXMgdGhlIHByaW1hcnkgZmllbGQgdXNlZCB0byBpZGVudGlmeSBlYWNoIG9iamVjdCBpbiB0aGUgcmVzdWx0c1xuICAgKi9cbiAgcHVibGljIHByaW1hcnlLZXlGaWVsZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiAgUHJvcGVydHkgZnJvbSBzdXBwbGllZCBtb2RlbCB1c2VkIGZvciB0aGUgdG9wIHBhcnQgb2YgdGhlIGJhc2ljIHRlbXBsYXRlIFxuICAgKiAgYW5kIHRoZSB0ZXh0IGZvciBzaW5nbGUgc2VsZWN0aW9uXG4gICAqL1xuICBwdWJsaWMgcHJpbWFyeVRleHRGaWVsZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiAgUHJvcGVydHkgZnJvbSBzdXBwbGllZCBtb2RlbCB1c2VkIGZvciB0aGUgYm90dG9tIHBhcnQgb2YgdGhlIGJhc2ljIHRlbXBsYXRlXG4gICAqL1xuICBwdWJsaWMgc2Vjb25kYXJ5VGV4dEZpZWxkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqICBTZXRzIHRoZSB0aW1lIHdhaXRlZCBmb3IgYWRkaW9uYWwga2V5IGFjdGlvbnMgRGVmYXVsdCBpcyAyNTAgbWlsbGlzZWNvbmRzXG4gICAqL1xuICBwdWJsaWMgZGVib3VuY2VUaW1lOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFBsYWNlIGhvbGRlciB0ZXh0IGZvciBhdXRvY29tcGxldGUgaW5wdXRcbiAgICovXG4gIHB1YmxpYyBhdXRvY29tcGxldGVQbGFjZUhvbGRlclRleHQ6IHN0cmluZztcblxuICAvKipcbiAgICogTWluaW51bW4gQ2hhcmFjdGVycyBmb3Igc2VhcmNoXG4gICAqL1xuICBwdWJsaWMgbWluaW11bUNoYXJhY3RlckNvdW50U2VhcmNoOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIE1vZGUgb2YgdGhlIG1vZGVsIGVpdGhlciBhbGxvd3MgYSBzaW5nbGUgaXRlbSBvciBtdWx0aXBsZSBpdGVtc1xuICAgKi9cbiAgcHVibGljIHNlbGVjdGlvbk1vZGU6IFNlbGVjdGlvbk1vZGUgPSBTZWxlY3Rpb25Nb2RlLlNJTkdMRTtcblxuICAvKipcbiAgICogQWxsb3dzIG9wdGlvbiB0byBhbGxvdyB1c2VyIHRleHQgbm90IGluIHRoZSBzdGFuZGFyZCByZXN1bHRzXG4gICAqL1xuICBwdWJsaWMgaXNGcmVlVGV4dEVuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogVGV4dCBhcHBlbmVkZWQgYWQgdGhlIGVuZCBvZiBmcmVlIHRleHRcbiAgICovXG4gIHB1YmxpYyBmcmVlVGV4dFN1YnRleHQ6IHN0cmluZyA9ICdzZWFyY2gnO1xuXG4gIC8qKlxuICAgKiBGb2N1cyBpbnRvIGF1dG9jb21wbGV0ZSBzZWFyY2hcbiAgICovXG4gIHB1YmxpYyBmb2N1c0luU2VhcmNoOiBib29sZWFuID0gdHJ1ZTtcblxuICAvKipcbiAgICogVGhlIGFyaWEtbGFiZWwgZm9yIHRoZSBhdXRvLWNvbXBsZXRlXG4gICAqL1xuICBwdWJsaWMgYXJpYUxhYmVsVGV4dDogc3RyaW5nID0gJ0F1dG8gQ29tcGxldGUnO1xuXG4gIC8qKlxuICAgKiBUbyBlbmFibGUgdGhlIHRhZyBtb2RlXG4gICAqL1xuICBwdWJsaWMgaXNUYWdNb2RlRW5hYmxlZDogYm9vbGVhbiA9ZmFsc2U7XG5cbiAgICAvKipcbiAgICogVG8gbWFrZSBpbnB1dCByZWFkb25seVxuICAgKi9cbiAgcHVibGljIGlucHV0UmVhZE9ubHkgPSBmYWxzZTtcblxufVxuIl19