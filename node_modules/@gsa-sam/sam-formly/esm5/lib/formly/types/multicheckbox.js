import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
var FormlyFieldMultiCheckboxComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyFieldMultiCheckboxComponent, _super);
    function FormlyFieldMultiCheckboxComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: {
                options: [],
            },
        };
        return _this;
    }
    FormlyFieldMultiCheckboxComponent.prototype.onChange = function (value, checked) {
        var _a;
        if (this.to.type === 'array') {
            this.formControl.patchValue(checked
                ? tslib_1.__spread((this.formControl.value || []), [value]) : tslib_1.__spread((this.formControl.value || [])).filter(function (o) { return o !== value; }));
        }
        else {
            this.formControl.patchValue(tslib_1.__assign({}, this.formControl.value, (_a = {}, _a[value] = checked, _a)));
        }
        this.formControl.markAsTouched();
    };
    FormlyFieldMultiCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-formly-field-multicheckbox',
                    template: "\n  <div class=\"usa-checkbox\">\n    <div *ngFor=\"let option of to.options | formlySelectOptions:field | async; let i = index;\">\n    <input type=\"checkbox\"\n     [id]=\"id + '_' + i\"\n     class=\"usa-checkbox__input\"\n      [value]=\"option.value\"\n      [checked]=\"formControl.value && (this.to.type === 'array' ? formControl.value.includes(option.value) : formControl.value[option.value])\"\n      [formlyAttributes]=\"field\"\n      (change)=\"onChange(option.value, $event.target.checked)\">\n    <label\n    class=\"usa-checkbox__label\"\n    [for]=\"id + '_' + i\">\n        {{ option.label }}\n    </label>\n  </div>\n</div>\n  "
                }] }
    ];
    return FormlyFieldMultiCheckboxComponent;
}(FieldType));
export { FormlyFieldMultiCheckboxComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGljaGVja2JveC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL3NhbS1mb3JtbHkvIiwic291cmNlcyI6WyJsaWIvZm9ybWx5L3R5cGVzL211bHRpY2hlY2tib3gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTdDO0lBcUJ1RCw2REFBUztJQXJCaEU7UUFBQSxxRUF1Q0M7UUFqQkMsb0JBQWMsR0FBRztZQUNmLGVBQWUsRUFBRTtnQkFDZixPQUFPLEVBQUUsRUFBRTthQUNaO1NBQ0YsQ0FBQzs7SUFhSixDQUFDO0lBWEMsb0RBQVEsR0FBUixVQUFTLEtBQVUsRUFBRSxPQUFnQjs7UUFDbkMsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksS0FBSyxPQUFPLEVBQUU7WUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTztnQkFDakMsQ0FBQyxrQkFBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxHQUFFLEtBQUssR0FDM0MsQ0FBQyxDQUFDLGlCQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxLQUFLLEtBQUssRUFBWCxDQUFXLENBQUMsQ0FDL0QsQ0FBQztTQUNIO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsc0JBQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLGVBQUcsS0FBSyxJQUFHLE9BQU8sT0FBRyxDQUFDO1NBQzlFO1FBQ0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUNuQyxDQUFDOztnQkF0Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFFBQVEsRUFBRSx3b0JBaUJUO2lCQUNGOztJQW1CRCx3Q0FBQztDQUFBLEFBdkNELENBcUJ1RCxTQUFTLEdBa0IvRDtTQWxCWSxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpZWxkVHlwZSB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzZHMtZm9ybWx5LWZpZWxkLW11bHRpY2hlY2tib3gnLFxuICB0ZW1wbGF0ZTogYFxuICA8ZGl2IGNsYXNzPVwidXNhLWNoZWNrYm94XCI+XG4gICAgPGRpdiAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIHRvLm9wdGlvbnMgfCBmb3JtbHlTZWxlY3RPcHRpb25zOmZpZWxkIHwgYXN5bmM7IGxldCBpID0gaW5kZXg7XCI+XG4gICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiXG4gICAgIFtpZF09XCJpZCArICdfJyArIGlcIlxuICAgICBjbGFzcz1cInVzYS1jaGVja2JveF9faW5wdXRcIlxuICAgICAgW3ZhbHVlXT1cIm9wdGlvbi52YWx1ZVwiXG4gICAgICBbY2hlY2tlZF09XCJmb3JtQ29udHJvbC52YWx1ZSAmJiAodGhpcy50by50eXBlID09PSAnYXJyYXknID8gZm9ybUNvbnRyb2wudmFsdWUuaW5jbHVkZXMob3B0aW9uLnZhbHVlKSA6IGZvcm1Db250cm9sLnZhbHVlW29wdGlvbi52YWx1ZV0pXCJcbiAgICAgIFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCJcbiAgICAgIChjaGFuZ2UpPVwib25DaGFuZ2Uob3B0aW9uLnZhbHVlLCAkZXZlbnQudGFyZ2V0LmNoZWNrZWQpXCI+XG4gICAgPGxhYmVsXG4gICAgY2xhc3M9XCJ1c2EtY2hlY2tib3hfX2xhYmVsXCJcbiAgICBbZm9yXT1cImlkICsgJ18nICsgaVwiPlxuICAgICAgICB7eyBvcHRpb24ubGFiZWwgfX1cbiAgICA8L2xhYmVsPlxuICA8L2Rpdj5cbjwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlGaWVsZE11bHRpQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBGaWVsZFR5cGUge1xuICBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgIG9wdGlvbnM6IFtdLFxuICAgIH0sXG4gIH07XG5cbiAgb25DaGFuZ2UodmFsdWU6IGFueSwgY2hlY2tlZDogYm9vbGVhbikge1xuICAgIGlmICh0aGlzLnRvLnR5cGUgPT09ICdhcnJheScpIHtcbiAgICAgIHRoaXMuZm9ybUNvbnRyb2wucGF0Y2hWYWx1ZShjaGVja2VkXG4gICAgICAgID8gWy4uLih0aGlzLmZvcm1Db250cm9sLnZhbHVlIHx8IFtdKSwgdmFsdWVdXG4gICAgICAgIDogWy4uLih0aGlzLmZvcm1Db250cm9sLnZhbHVlIHx8IFtdKV0uZmlsdGVyKG8gPT4gbyAhPT0gdmFsdWUpLFxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5mb3JtQ29udHJvbC5wYXRjaFZhbHVlKHsgLi4udGhpcy5mb3JtQ29udHJvbC52YWx1ZSwgW3ZhbHVlXTogY2hlY2tlZCB9KTtcbiAgICB9XG4gICAgdGhpcy5mb3JtQ29udHJvbC5tYXJrQXNUb3VjaGVkKCk7XG4gIH1cbn1cbiJdfQ==