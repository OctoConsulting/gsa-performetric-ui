import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @param {string} [to.tagClass] Class to be added to the tag (default: sds-tag--info-white)
 * @param {string} [to.tagText] Text to be shown inside the tag
 * @param {string} [to.label] Text to be shown for the label
 * @param {string} [to.required] Makes the field required
 * @param {string} [to.hideOptional] Remove the optional text
 *
 */
var FormlyLabelWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyLabelWrapperComponent, _super);
    function FormlyLabelWrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormlyLabelWrapperComponent.prototype.hasLabel = function () {
        if (this.to.label) {
            if (!(this.field.type === 'checkbox' || this.field.type === 'multicheckbox')) {
                return true;
            }
        }
    };
    FormlyLabelWrapperComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n      <label class=\"usa-label\" *ngIf=\"hasLabel()\" [attr.for]=\"id\" [ngClass]=\"{'usa-sr-only' : to.hideLabel || ((to.group==='panel' || to.group==='accordion') && field?.parent?.type!==\n      'formly-group') }\">\n        <span *ngIf=\"to.tagText\" class=\"usa-tag\"  [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{to.tagText}}</span>\n        <span>{{ to.label }}</span>\n        <span *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n      </label>\n      <ng-container #fieldComponent></ng-container>\n    </div>\n  "
                }] }
    ];
    FormlyLabelWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return FormlyLabelWrapperComponent;
}(FieldWrapper));
export { FormlyLabelWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwud3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL3NhbS1mb3JtbHkvIiwic291cmNlcyI6WyJsaWIvZm9ybWx5L3dyYXBwZXJzL2xhYmVsLndyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDs7Ozs7OztHQU9HO0FBQ0g7SUFhaUQsdURBQVk7SUFiN0Q7O0lBd0JBLENBQUM7SUFUQyw4Q0FBUSxHQUFSO1FBQ0UsSUFBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBQztZQUNmLElBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLFVBQVUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksS0FBTSxlQUFlLENBQUMsRUFDNUU7Z0JBQ0UsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGO0lBQ0gsQ0FBQzs7Z0JBdEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa29CQVVUO2lCQUNGOzs7aUNBRUUsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFnQixFQUFDOztJQVV2RCxrQ0FBQztDQUFBLEFBeEJELENBYWlELFlBQVksR0FXNUQ7U0FYWSwyQkFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFdyYXBwZXIgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLnRhZ0NsYXNzXSBDbGFzcyB0byBiZSBhZGRlZCB0byB0aGUgdGFnIChkZWZhdWx0OiBzZHMtdGFnLS1pbmZvLXdoaXRlKVxuICogQHBhcmFtIHtzdHJpbmd9IFt0by50YWdUZXh0XSBUZXh0IHRvIGJlIHNob3duIGluc2lkZSB0aGUgdGFnXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmxhYmVsXSBUZXh0IHRvIGJlIHNob3duIGZvciB0aGUgbGFiZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8ucmVxdWlyZWRdIE1ha2VzIHRoZSBmaWVsZCByZXF1aXJlZFxuICogQHBhcmFtIHtzdHJpbmd9IFt0by5oaWRlT3B0aW9uYWxdIFJlbW92ZSB0aGUgb3B0aW9uYWwgdGV4dFxuICpcbiAqL1xuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cInVzYS1mb3JtLWdyb3VwXCIgW2NsYXNzLnVzYS1mb3JtLWdyb3VwLS1lcnJvcl09XCJzaG93RXJyb3JcIj5cbiAgICAgIDxsYWJlbCBjbGFzcz1cInVzYS1sYWJlbFwiICpuZ0lmPVwiaGFzTGFiZWwoKVwiIFthdHRyLmZvcl09XCJpZFwiIFtuZ0NsYXNzXT1cInsndXNhLXNyLW9ubHknIDogdG8uaGlkZUxhYmVsIHx8ICgodG8uZ3JvdXA9PT0ncGFuZWwnIHx8IHRvLmdyb3VwPT09J2FjY29yZGlvbicpICYmIGZpZWxkPy5wYXJlbnQ/LnR5cGUhPT1cbiAgICAgICdmb3JtbHktZ3JvdXAnKSB9XCI+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwidG8udGFnVGV4dFwiIGNsYXNzPVwidXNhLXRhZ1wiICBbbmdDbGFzc109XCJ0by50YWdDbGFzcyA/IHRvLnRhZ0NsYXNzIDogJ3Nkcy10YWctLWluZm8td2hpdGUnXCI+e3t0by50YWdUZXh0fX08L3NwYW4+XG4gICAgICAgIDxzcGFuPnt7IHRvLmxhYmVsIH19PC9zcGFuPlxuICAgICAgICA8c3BhbiAqbmdJZj1cIiF0by5yZXF1aXJlZCAmJiAhdG8uaGlkZU9wdGlvbmFsXCI+IChPcHRpb25hbCk8L3NwYW4+XG4gICAgICA8L2xhYmVsPlxuICAgICAgPG5nLWNvbnRhaW5lciAjZmllbGRDb21wb25lbnQ+PC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seUxhYmVsV3JhcHBlckNvbXBvbmVudCBleHRlbmRzIEZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50Jywge3JlYWQ6IFZpZXdDb250YWluZXJSZWZ9KSBmaWVsZENvbXBvbmVudDogVmlld0NvbnRhaW5lclJlZjtcbiAgaGFzTGFiZWwoKXtcbiAgICBpZih0aGlzLnRvLmxhYmVsKXtcbiAgICAgIGlmKCEodGhpcy5maWVsZC50eXBlID09PSAnY2hlY2tib3gnIHx8IHRoaXMuZmllbGQudHlwZSA9PT0gICdtdWx0aWNoZWNrYm94JykpXG4gICAgICB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG59XG4iXX0=