import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
import * as qs from 'qs';
/**
 * @param {string} [to.group] used to set the wrapper tupe
 * @param {string} [to.announceLabel] For screenreader
 * @param {string} [to.label] Text to be shown for the label
 * @param {string} [to.hideLabel] Hide the label
 *
 */
var FormlyGroupWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyGroupWrapperComponent, _super);
    function FormlyGroupWrapperComponent() {
        return _super.call(this) || this;
    }
    FormlyGroupWrapperComponent.prototype.modelHasValue = function () {
        if (this.to.hasOwnProperty('expand')) {
            return this.to.expand;
        }
        else {
            var hasValue = this.formControl.value instanceof Object
                ? qs.stringify(this.formControl.value, { skipNulls: true })
                : this.formControl.value;
            return hasValue ? true : false;
        }
    };
    FormlyGroupWrapperComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <ng-container [ngSwitch]=\"to.group\">\n      <ng-container *ngSwitchCase=\"'accordion'\">\n        <sds-accordion multi=\"true\" displayMode=\"basic\">\n          <sds-accordion-item\n            class=\"sds-accordion__panel\"\n            [expanded]=\"modelHasValue()\"\n          >\n            <sds-accordion-item-header>\n              <span\n                *ngIf=\"!to.hideLabel\"\n                [attr.aria-hidden]=\"!to.announceLabel ? undefined : 'true'\"\n              >\n                {{ to.label }}\n              </span>\n            </sds-accordion-item-header>\n            <ng-container #fieldComponent></ng-container>\n          </sds-accordion-item>\n        </sds-accordion>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'panel'\">\n        <div\n          class=\"sds-panel\"\n          [ngClass]=\"{ 'sds-panel--multiple': field?.fieldGroup?.length }\"\n        >\n          <div\n            class=\"sds-panel__header\"\n            *ngIf=\"!to.hideLabel\"\n            [attr.aria-hidden]=\"!to.announceLabel ? undefined : 'true'\"\n          >\n            {{ to.label }}\n          </div>\n          <div class=\"sds-panel__body\">\n            <ng-container #fieldComponent></ng-container>\n          </div>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <ng-container #fieldComponent></ng-container>\n      </ng-container>\n    </ng-container>\n  "
                }] }
    ];
    /** @nocollapse */
    FormlyGroupWrapperComponent.ctorParameters = function () { return []; };
    FormlyGroupWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return FormlyGroupWrapperComponent;
}(FieldWrapper));
export { FormlyGroupWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAud3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL3NhbS1mb3JtbHkvIiwic291cmNlcyI6WyJsaWIvZm9ybWx5L3dyYXBwZXJzL2dyb3VwLndyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUV6Qjs7Ozs7O0dBTUc7QUFDSDtJQTRDaUQsdURBQVk7SUFHM0Q7ZUFDRSxpQkFBTztJQUNULENBQUM7SUFDRCxtREFBYSxHQUFiO1FBQ0UsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNwQyxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO1NBQ3ZCO2FBQU07WUFDTCxJQUFNLFFBQVEsR0FDWixJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssWUFBWSxNQUFNO2dCQUN0QyxDQUFDLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDM0QsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDO1lBQzdCLE9BQU8sUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztTQUNoQztJQUNILENBQUM7O2dCQTVERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGc2Q0F5Q1Q7aUJBQ0Y7Ozs7O2lDQUVFLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTs7SUFnQnpELGtDQUFDO0NBQUEsQUE3REQsQ0E0Q2lELFlBQVksR0FpQjVEO1NBakJZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFdyYXBwZXIgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcbmltcG9ydCAqIGFzIHFzIGZyb20gJ3FzJztcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmdyb3VwXSB1c2VkIHRvIHNldCB0aGUgd3JhcHBlciB0dXBlXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmFubm91bmNlTGFiZWxdIEZvciBzY3JlZW5yZWFkZXJcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8ubGFiZWxdIFRleHQgdG8gYmUgc2hvd24gZm9yIHRoZSBsYWJlbFxuICogQHBhcmFtIHtzdHJpbmd9IFt0by5oaWRlTGFiZWxdIEhpZGUgdGhlIGxhYmVsXG4gKiBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRhaW5lciBbbmdTd2l0Y2hdPVwidG8uZ3JvdXBcIj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIidhY2NvcmRpb24nXCI+XG4gICAgICAgIDxzZHMtYWNjb3JkaW9uIG11bHRpPVwidHJ1ZVwiIGRpc3BsYXlNb2RlPVwiYmFzaWNcIj5cbiAgICAgICAgICA8c2RzLWFjY29yZGlvbi1pdGVtXG4gICAgICAgICAgICBjbGFzcz1cInNkcy1hY2NvcmRpb25fX3BhbmVsXCJcbiAgICAgICAgICAgIFtleHBhbmRlZF09XCJtb2RlbEhhc1ZhbHVlKClcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxzZHMtYWNjb3JkaW9uLWl0ZW0taGVhZGVyPlxuICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICpuZ0lmPVwiIXRvLmhpZGVMYWJlbFwiXG4gICAgICAgICAgICAgICAgW2F0dHIuYXJpYS1oaWRkZW5dPVwiIXRvLmFubm91bmNlTGFiZWwgPyB1bmRlZmluZWQgOiAndHJ1ZSdcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3sgdG8ubGFiZWwgfX1cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9zZHMtYWNjb3JkaW9uLWl0ZW0taGVhZGVyPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAjZmllbGRDb21wb25lbnQ+PC9uZy1jb250YWluZXI+XG4gICAgICAgICAgPC9zZHMtYWNjb3JkaW9uLWl0ZW0+XG4gICAgICAgIDwvc2RzLWFjY29yZGlvbj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiJ3BhbmVsJ1wiPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3M9XCJzZHMtcGFuZWxcIlxuICAgICAgICAgIFtuZ0NsYXNzXT1cInsgJ3Nkcy1wYW5lbC0tbXVsdGlwbGUnOiBmaWVsZD8uZmllbGRHcm91cD8ubGVuZ3RoIH1cIlxuICAgICAgICA+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJzZHMtcGFuZWxfX2hlYWRlclwiXG4gICAgICAgICAgICAqbmdJZj1cIiF0by5oaWRlTGFiZWxcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1oaWRkZW5dPVwiIXRvLmFubm91bmNlTGFiZWwgPyB1bmRlZmluZWQgOiAndHJ1ZSdcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt7IHRvLmxhYmVsIH19XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInNkcy1wYW5lbF9fYm9keVwiPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAjZmllbGRDb21wb25lbnQ+PC9uZy1jb250YWluZXI+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaERlZmF1bHQ+XG4gICAgICAgIDxuZy1jb250YWluZXIgI2ZpZWxkQ29tcG9uZW50PjwvbmctY29udGFpbmVyPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5R3JvdXBXcmFwcGVyQ29tcG9uZW50IGV4dGVuZHMgRmllbGRXcmFwcGVyIHtcbiAgQFZpZXdDaGlsZCgnZmllbGRDb21wb25lbnQnLCB7IHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSlcbiAgZmllbGRDb21wb25lbnQ6IFZpZXdDb250YWluZXJSZWY7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cbiAgbW9kZWxIYXNWYWx1ZSgpIHtcbiAgICBpZiAodGhpcy50by5oYXNPd25Qcm9wZXJ0eSgnZXhwYW5kJykpIHtcbiAgICAgIHJldHVybiB0aGlzLnRvLmV4cGFuZDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgaGFzVmFsdWUgPVxuICAgICAgICB0aGlzLmZvcm1Db250cm9sLnZhbHVlIGluc3RhbmNlb2YgT2JqZWN0XG4gICAgICAgICAgPyBxcy5zdHJpbmdpZnkodGhpcy5mb3JtQ29udHJvbC52YWx1ZSwgeyBza2lwTnVsbHM6IHRydWUgfSlcbiAgICAgICAgICA6IHRoaXMuZm9ybUNvbnRyb2wudmFsdWU7XG4gICAgICByZXR1cm4gaGFzVmFsdWUgPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuICB9XG59XG4iXX0=