import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @param {string} [to.tagClass] Class to be added to the tag (default: sds-tag--info-white)
 * @param {string} [to.tagText] Text to be shown inside the tag
 * @param {string} [to.labelClass] Class to be applied to the label
 * @param {string} [to.label] Text to be shown for the label
 * @param {string} [to.required] Makes the field required
 * @param {string} [to.description] Add a description below the label
 * @param {string} [to.hideOptional] Remove the optional text
 * @param {string} [to.hideLabel] Hide the label
 *
 */
var FormlyWrapperFormFieldComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyWrapperFormFieldComponent, _super);
    function FormlyWrapperFormFieldComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormlyWrapperFormFieldComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sds-formly-wrapper-form-field',
                    template: "\n<div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n  <label class=\"usa-label\" *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\" [ngClass]=\"to.labelClass\">\n    <span *ngIf=\"to.tagText\" class=\"usa-tag\"  [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{to.tagText}}</span>\n    <span>{{ to.label }}</span>\n    <span *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n  </label>\n  <small *ngIf=\"to.description\" class=\"form-text text-muted\">{{ to.description }}</small>\n  <ng-template #fieldComponent></ng-template>\n  <div *ngIf=\"showError\" class=\"usa-error-message\" [style.display]=\"'block'\">\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n</div>\n  "
                }] }
    ];
    FormlyWrapperFormFieldComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return FormlyWrapperFormFieldComponent;
}(FieldWrapper));
export { FormlyWrapperFormFieldComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC53cmFwcGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzYS1zYW0vc2FtLWZvcm1seS8iLCJzb3VyY2VzIjpbImxpYi9mb3JtbHkvd3JhcHBlcnMvZm9ybS1maWVsZC53cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7Ozs7Ozs7Ozs7R0FVRztBQUVIO0lBa0JxRCwyREFBWTtJQWxCakU7O0lBb0JBLENBQUM7O2dCQXBCQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLCtCQUErQjtvQkFDekMsUUFBUSxFQUFFLDh3QkFhVDtpQkFDRjs7O2lDQUdFLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTs7SUFDekQsc0NBQUM7Q0FBQSxBQXBCRCxDQWtCcUQsWUFBWSxHQUVoRTtTQUZZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFdyYXBwZXIgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLnRhZ0NsYXNzXSBDbGFzcyB0byBiZSBhZGRlZCB0byB0aGUgdGFnIChkZWZhdWx0OiBzZHMtdGFnLS1pbmZvLXdoaXRlKVxuICogQHBhcmFtIHtzdHJpbmd9IFt0by50YWdUZXh0XSBUZXh0IHRvIGJlIHNob3duIGluc2lkZSB0aGUgdGFnXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmxhYmVsQ2xhc3NdIENsYXNzIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGxhYmVsXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmxhYmVsXSBUZXh0IHRvIGJlIHNob3duIGZvciB0aGUgbGFiZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8ucmVxdWlyZWRdIE1ha2VzIHRoZSBmaWVsZCByZXF1aXJlZFxuICogQHBhcmFtIHtzdHJpbmd9IFt0by5kZXNjcmlwdGlvbl0gQWRkIGEgZGVzY3JpcHRpb24gYmVsb3cgdGhlIGxhYmVsXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmhpZGVPcHRpb25hbF0gUmVtb3ZlIHRoZSBvcHRpb25hbCB0ZXh0XG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmhpZGVMYWJlbF0gSGlkZSB0aGUgbGFiZWxcbiAqIFxuICovXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nkcy1mb3JtbHktd3JhcHBlci1mb3JtLWZpZWxkJyxcbiAgdGVtcGxhdGU6IGBcbjxkaXYgY2xhc3M9XCJ1c2EtZm9ybS1ncm91cFwiIFtjbGFzcy51c2EtZm9ybS1ncm91cC0tZXJyb3JdPVwic2hvd0Vycm9yXCI+XG4gIDxsYWJlbCBjbGFzcz1cInVzYS1sYWJlbFwiICpuZ0lmPVwidG8ubGFiZWwgJiYgdG8uaGlkZUxhYmVsICE9PSB0cnVlXCIgW2F0dHIuZm9yXT1cImlkXCIgW25nQ2xhc3NdPVwidG8ubGFiZWxDbGFzc1wiPlxuICAgIDxzcGFuICpuZ0lmPVwidG8udGFnVGV4dFwiIGNsYXNzPVwidXNhLXRhZ1wiICBbbmdDbGFzc109XCJ0by50YWdDbGFzcyA/IHRvLnRhZ0NsYXNzIDogJ3Nkcy10YWctLWluZm8td2hpdGUnXCI+e3t0by50YWdUZXh0fX08L3NwYW4+XG4gICAgPHNwYW4+e3sgdG8ubGFiZWwgfX08L3NwYW4+XG4gICAgPHNwYW4gKm5nSWY9XCIhdG8ucmVxdWlyZWQgJiYgIXRvLmhpZGVPcHRpb25hbFwiPiAoT3B0aW9uYWwpPC9zcGFuPlxuICA8L2xhYmVsPlxuICA8c21hbGwgKm5nSWY9XCJ0by5kZXNjcmlwdGlvblwiIGNsYXNzPVwiZm9ybS10ZXh0IHRleHQtbXV0ZWRcIj57eyB0by5kZXNjcmlwdGlvbiB9fTwvc21hbGw+XG4gIDxuZy10ZW1wbGF0ZSAjZmllbGRDb21wb25lbnQ+PC9uZy10ZW1wbGF0ZT5cbiAgPGRpdiAqbmdJZj1cInNob3dFcnJvclwiIGNsYXNzPVwidXNhLWVycm9yLW1lc3NhZ2VcIiBbc3R5bGUuZGlzcGxheV09XCInYmxvY2snXCI+XG4gICAgPGZvcm1seS12YWxpZGF0aW9uLW1lc3NhZ2UgW2ZpZWxkXT1cImZpZWxkXCI+PC9mb3JtbHktdmFsaWRhdGlvbi1tZXNzYWdlPlxuICA8L2Rpdj5cbjwvZGl2PlxuICBgLFxufSlcblxuZXhwb3J0IGNsYXNzIEZvcm1seVdyYXBwZXJGb3JtRmllbGRDb21wb25lbnQgZXh0ZW5kcyBGaWVsZFdyYXBwZXIge1xuICBAVmlld0NoaWxkKCdmaWVsZENvbXBvbmVudCcsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiB9KSBmaWVsZENvbXBvbmVudCE6IFZpZXdDb250YWluZXJSZWY7XG59XG4iXX0=