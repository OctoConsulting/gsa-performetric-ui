import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
var FormlyCustomWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyCustomWrapperComponent, _super);
    function FormlyCustomWrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormlyCustomWrapperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sam-formly-filter-wrapper-form-field',
                    template: "\n  <sds-accordion multi=\"true\" displayMode=\"basic\">\n    <sds-accordion-item class=\"sds-accordion__panel\">\n      <sds-accordion-item-header> {{to.label}} </sds-accordion-item-header>\n      <div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n      <label class=\"usa-label\" *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\" [ngClass]=\"to.labelClass\">\n        <span *ngIf=\"to.tagText\" class=\"usa-tag\"  [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{to.tagText}}</span> \n        <span>{{ to.label }}</span>\n        <span *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n      </label>  \n      <small *ngIf=\"to.description\" class=\"form-text text-muted\">{{ to.description }}</small>\n      <ng-template #fieldComponent></ng-template>\n      <div *ngIf=\"showError\" class=\"usa-error-message\" [style.display]=\"'block'\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </div>\n      </div>\n    </sds-accordion-item>\n  </sds-accordion>\n  "
                }] }
    ];
    FormlyCustomWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return FormlyCustomWrapperComponent;
}(FieldWrapper));
export { FormlyCustomWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXdyYXBwZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NhLXNhbS9zYW0tZm9ybWx5LyIsInNvdXJjZXMiOlsibGliL2Zvcm1seS93cmFwcGVycy9jdXN0b20td3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hEO0lBc0JrRCx3REFBWTtJQXRCOUQ7O0lBd0JBLENBQUM7O2dCQXhCQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHNDQUFzQztvQkFDaEQsUUFBUSxFQUFFLGtqQ0FrQlQ7aUJBQ0Y7OztpQ0FFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUM7O0lBQ3ZELG1DQUFDO0NBQUEsQUF4QkQsQ0FzQmtELFlBQVksR0FFN0Q7U0FGWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFdyYXBwZXIgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NhbS1mb3JtbHktZmlsdGVyLXdyYXBwZXItZm9ybS1maWVsZCcsXG4gIHRlbXBsYXRlOiBgXG4gIDxzZHMtYWNjb3JkaW9uIG11bHRpPVwidHJ1ZVwiIGRpc3BsYXlNb2RlPVwiYmFzaWNcIj5cbiAgICA8c2RzLWFjY29yZGlvbi1pdGVtIGNsYXNzPVwic2RzLWFjY29yZGlvbl9fcGFuZWxcIj5cbiAgICAgIDxzZHMtYWNjb3JkaW9uLWl0ZW0taGVhZGVyPiB7e3RvLmxhYmVsfX0gPC9zZHMtYWNjb3JkaW9uLWl0ZW0taGVhZGVyPlxuICAgICAgPGRpdiBjbGFzcz1cInVzYS1mb3JtLWdyb3VwXCIgW2NsYXNzLnVzYS1mb3JtLWdyb3VwLS1lcnJvcl09XCJzaG93RXJyb3JcIj5cbiAgICAgIDxsYWJlbCBjbGFzcz1cInVzYS1sYWJlbFwiICpuZ0lmPVwidG8ubGFiZWwgJiYgdG8uaGlkZUxhYmVsICE9PSB0cnVlXCIgW2F0dHIuZm9yXT1cImlkXCIgW25nQ2xhc3NdPVwidG8ubGFiZWxDbGFzc1wiPlxuICAgICAgICA8c3BhbiAqbmdJZj1cInRvLnRhZ1RleHRcIiBjbGFzcz1cInVzYS10YWdcIiAgW25nQ2xhc3NdPVwidG8udGFnQ2xhc3MgPyB0by50YWdDbGFzcyA6ICdzZHMtdGFnLS1pbmZvLXdoaXRlJ1wiPnt7dG8udGFnVGV4dH19PC9zcGFuPiBcbiAgICAgICAgPHNwYW4+e3sgdG8ubGFiZWwgfX08L3NwYW4+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwiIXRvLnJlcXVpcmVkICYmICF0by5oaWRlT3B0aW9uYWxcIj4gKE9wdGlvbmFsKTwvc3Bhbj5cbiAgICAgIDwvbGFiZWw+ICBcbiAgICAgIDxzbWFsbCAqbmdJZj1cInRvLmRlc2NyaXB0aW9uXCIgY2xhc3M9XCJmb3JtLXRleHQgdGV4dC1tdXRlZFwiPnt7IHRvLmRlc2NyaXB0aW9uIH19PC9zbWFsbD5cbiAgICAgIDxuZy10ZW1wbGF0ZSAjZmllbGRDb21wb25lbnQ+PC9uZy10ZW1wbGF0ZT5cbiAgICAgIDxkaXYgKm5nSWY9XCJzaG93RXJyb3JcIiBjbGFzcz1cInVzYS1lcnJvci1tZXNzYWdlXCIgW3N0eWxlLmRpc3BsYXldPVwiJ2Jsb2NrJ1wiPlxuICAgICAgICA8Zm9ybWx5LXZhbGlkYXRpb24tbWVzc2FnZSBbZmllbGRdPVwiZmllbGRcIj48L2Zvcm1seS12YWxpZGF0aW9uLW1lc3NhZ2U+XG4gICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvc2RzLWFjY29yZGlvbi1pdGVtPlxuICA8L3Nkcy1hY2NvcmRpb24+XG4gIGAsXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1seUN1c3RvbVdyYXBwZXJDb21wb25lbnQgZXh0ZW5kcyBGaWVsZFdyYXBwZXIge1xuICBAVmlld0NoaWxkKCdmaWVsZENvbXBvbmVudCcsIHtyZWFkOiBWaWV3Q29udGFpbmVyUmVmfSkgZmllbGRDb21wb25lbnQ6IFZpZXdDb250YWluZXJSZWY7XG59XG4iXX0=