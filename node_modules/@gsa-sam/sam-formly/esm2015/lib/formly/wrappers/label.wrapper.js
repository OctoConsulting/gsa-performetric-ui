import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @param {string} [to.tagClass] Class to be added to the tag (default: sds-tag--info-white)
 * @param {string} [to.tagText] Text to be shown inside the tag
 * @param {string} [to.label] Text to be shown for the label
 * @param {string} [to.required] Makes the field required
 * @param {string} [to.hideOptional] Remove the optional text
 *
 */
export class FormlyLabelWrapperComponent extends FieldWrapper {
    hasLabel() {
        if (this.to.label) {
            if (!(this.field.type === 'checkbox' || this.field.type === 'multicheckbox')) {
                return true;
            }
        }
    }
}
FormlyLabelWrapperComponent.decorators = [
    { type: Component, args: [{
                template: `
    <div class="usa-form-group" [class.usa-form-group--error]="showError">
      <label class="usa-label" *ngIf="hasLabel()" [attr.for]="id" [ngClass]="{'usa-sr-only' : to.hideLabel || ((to.group==='panel' || to.group==='accordion') && field?.parent?.type!==
      'formly-group') }">
        <span *ngIf="to.tagText" class="usa-tag"  [ngClass]="to.tagClass ? to.tagClass : 'sds-tag--info-white'">{{to.tagText}}</span>
        <span>{{ to.label }}</span>
        <span *ngIf="!to.required && !to.hideOptional"> (Optional)</span>
      </label>
      <ng-container #fieldComponent></ng-container>
    </div>
  `
            }] }
];
FormlyLabelWrapperComponent.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwud3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc2Etc2FtL3NhbS1mb3JtbHkvIiwic291cmNlcyI6WyJsaWIvZm9ybWx5L3dyYXBwZXJzL2xhYmVsLndyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhEOzs7Ozs7O0dBT0c7QUFjSCxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsWUFBWTtJQUUzRCxRQUFRO1FBQ04sSUFBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBQztZQUNmLElBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLFVBQVUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksS0FBTSxlQUFlLENBQUMsRUFDNUU7Z0JBQ0UsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGO0lBQ0gsQ0FBQzs7O1lBdEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUU7Ozs7Ozs7Ozs7R0FVVDthQUNGOzs7NkJBRUUsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUMsSUFBSSxFQUFFLGdCQUFnQixFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRXcmFwcGVyIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IFt0by50YWdDbGFzc10gQ2xhc3MgdG8gYmUgYWRkZWQgdG8gdGhlIHRhZyAoZGVmYXVsdDogc2RzLXRhZy0taW5mby13aGl0ZSlcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8udGFnVGV4dF0gVGV4dCB0byBiZSBzaG93biBpbnNpZGUgdGhlIHRhZ1xuICogQHBhcmFtIHtzdHJpbmd9IFt0by5sYWJlbF0gVGV4dCB0byBiZSBzaG93biBmb3IgdGhlIGxhYmVsXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLnJlcXVpcmVkXSBNYWtlcyB0aGUgZmllbGQgcmVxdWlyZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8uaGlkZU9wdGlvbmFsXSBSZW1vdmUgdGhlIG9wdGlvbmFsIHRleHRcbiAqXG4gKi9cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJ1c2EtZm9ybS1ncm91cFwiIFtjbGFzcy51c2EtZm9ybS1ncm91cC0tZXJyb3JdPVwic2hvd0Vycm9yXCI+XG4gICAgICA8bGFiZWwgY2xhc3M9XCJ1c2EtbGFiZWxcIiAqbmdJZj1cImhhc0xhYmVsKClcIiBbYXR0ci5mb3JdPVwiaWRcIiBbbmdDbGFzc109XCJ7J3VzYS1zci1vbmx5JyA6IHRvLmhpZGVMYWJlbCB8fCAoKHRvLmdyb3VwPT09J3BhbmVsJyB8fCB0by5ncm91cD09PSdhY2NvcmRpb24nKSAmJiBmaWVsZD8ucGFyZW50Py50eXBlIT09XG4gICAgICAnZm9ybWx5LWdyb3VwJykgfVwiPlxuICAgICAgICA8c3BhbiAqbmdJZj1cInRvLnRhZ1RleHRcIiBjbGFzcz1cInVzYS10YWdcIiAgW25nQ2xhc3NdPVwidG8udGFnQ2xhc3MgPyB0by50YWdDbGFzcyA6ICdzZHMtdGFnLS1pbmZvLXdoaXRlJ1wiPnt7dG8udGFnVGV4dH19PC9zcGFuPlxuICAgICAgICA8c3Bhbj57eyB0by5sYWJlbCB9fTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gKm5nSWY9XCIhdG8ucmVxdWlyZWQgJiYgIXRvLmhpZGVPcHRpb25hbFwiPiAoT3B0aW9uYWwpPC9zcGFuPlxuICAgICAgPC9sYWJlbD5cbiAgICAgIDxuZy1jb250YWluZXIgI2ZpZWxkQ29tcG9uZW50PjwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlMYWJlbFdyYXBwZXJDb21wb25lbnQgZXh0ZW5kcyBGaWVsZFdyYXBwZXIge1xuICBAVmlld0NoaWxkKCdmaWVsZENvbXBvbmVudCcsIHtyZWFkOiBWaWV3Q29udGFpbmVyUmVmfSkgZmllbGRDb21wb25lbnQ6IFZpZXdDb250YWluZXJSZWY7XG4gIGhhc0xhYmVsKCl7XG4gICAgaWYodGhpcy50by5sYWJlbCl7XG4gICAgICBpZighKHRoaXMuZmllbGQudHlwZSA9PT0gJ2NoZWNrYm94JyB8fCB0aGlzLmZpZWxkLnR5cGUgPT09ICAnbXVsdGljaGVja2JveCcpKVxuICAgICAge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuIl19