import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @param {string} [to.tagClass] Class to be added to the tag (default: sds-tag--info-white)
 * @param {string} [to.tagText] Text to be shown inside the tag
 * @param {string} [to.labelClass] Class to be applied to the label
 * @param {string} [to.label] Text to be shown for the label
 * @param {string} [to.required] Makes the field required
 * @param {string} [to.description] Add a description below the label
 * @param {string} [to.hideOptional] Remove the optional text
 * @param {string} [to.hideLabel] Hide the label
 *
 */
export class FormlyWrapperFormFieldComponent extends FieldWrapper {
}
FormlyWrapperFormFieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-formly-wrapper-form-field',
                template: `
<div class="usa-form-group" [class.usa-form-group--error]="showError">
  <label class="usa-label" *ngIf="to.label && to.hideLabel !== true" [attr.for]="id" [ngClass]="to.labelClass">
    <span *ngIf="to.tagText" class="usa-tag"  [ngClass]="to.tagClass ? to.tagClass : 'sds-tag--info-white'">{{to.tagText}}</span>
    <span>{{ to.label }}</span>
    <span *ngIf="!to.required && !to.hideOptional"> (Optional)</span>
  </label>
  <small *ngIf="to.description" class="form-text text-muted">{{ to.description }}</small>
  <ng-template #fieldComponent></ng-template>
  <div *ngIf="showError" class="usa-error-message" [style.display]="'block'">
    <formly-validation-message [field]="field"></formly-validation-message>
  </div>
</div>
  `
            }] }
];
FormlyWrapperFormFieldComponent.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC53cmFwcGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzYS1zYW0vc2FtLWZvcm1seS8iLCJzb3VyY2VzIjpbImxpYi9mb3JtbHkvd3JhcHBlcnMvZm9ybS1maWVsZC53cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVoRDs7Ozs7Ozs7OztHQVVHO0FBb0JILE1BQU0sT0FBTywrQkFBZ0MsU0FBUSxZQUFZOzs7WUFsQmhFLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsK0JBQStCO2dCQUN6QyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7R0FhVDthQUNGOzs7NkJBR0UsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpZWxkV3JhcHBlciB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8udGFnQ2xhc3NdIENsYXNzIHRvIGJlIGFkZGVkIHRvIHRoZSB0YWcgKGRlZmF1bHQ6IHNkcy10YWctLWluZm8td2hpdGUpXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLnRhZ1RleHRdIFRleHQgdG8gYmUgc2hvd24gaW5zaWRlIHRoZSB0YWdcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8ubGFiZWxDbGFzc10gQ2xhc3MgdG8gYmUgYXBwbGllZCB0byB0aGUgbGFiZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8ubGFiZWxdIFRleHQgdG8gYmUgc2hvd24gZm9yIHRoZSBsYWJlbFxuICogQHBhcmFtIHtzdHJpbmd9IFt0by5yZXF1aXJlZF0gTWFrZXMgdGhlIGZpZWxkIHJlcXVpcmVkXG4gKiBAcGFyYW0ge3N0cmluZ30gW3RvLmRlc2NyaXB0aW9uXSBBZGQgYSBkZXNjcmlwdGlvbiBiZWxvdyB0aGUgbGFiZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8uaGlkZU9wdGlvbmFsXSBSZW1vdmUgdGhlIG9wdGlvbmFsIHRleHRcbiAqIEBwYXJhbSB7c3RyaW5nfSBbdG8uaGlkZUxhYmVsXSBIaWRlIHRoZSBsYWJlbFxuICogXG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2RzLWZvcm1seS13cmFwcGVyLWZvcm0tZmllbGQnLFxuICB0ZW1wbGF0ZTogYFxuPGRpdiBjbGFzcz1cInVzYS1mb3JtLWdyb3VwXCIgW2NsYXNzLnVzYS1mb3JtLWdyb3VwLS1lcnJvcl09XCJzaG93RXJyb3JcIj5cbiAgPGxhYmVsIGNsYXNzPVwidXNhLWxhYmVsXCIgKm5nSWY9XCJ0by5sYWJlbCAmJiB0by5oaWRlTGFiZWwgIT09IHRydWVcIiBbYXR0ci5mb3JdPVwiaWRcIiBbbmdDbGFzc109XCJ0by5sYWJlbENsYXNzXCI+XG4gICAgPHNwYW4gKm5nSWY9XCJ0by50YWdUZXh0XCIgY2xhc3M9XCJ1c2EtdGFnXCIgIFtuZ0NsYXNzXT1cInRvLnRhZ0NsYXNzID8gdG8udGFnQ2xhc3MgOiAnc2RzLXRhZy0taW5mby13aGl0ZSdcIj57e3RvLnRhZ1RleHR9fTwvc3Bhbj5cbiAgICA8c3Bhbj57eyB0by5sYWJlbCB9fTwvc3Bhbj5cbiAgICA8c3BhbiAqbmdJZj1cIiF0by5yZXF1aXJlZCAmJiAhdG8uaGlkZU9wdGlvbmFsXCI+IChPcHRpb25hbCk8L3NwYW4+XG4gIDwvbGFiZWw+XG4gIDxzbWFsbCAqbmdJZj1cInRvLmRlc2NyaXB0aW9uXCIgY2xhc3M9XCJmb3JtLXRleHQgdGV4dC1tdXRlZFwiPnt7IHRvLmRlc2NyaXB0aW9uIH19PC9zbWFsbD5cbiAgPG5nLXRlbXBsYXRlICNmaWVsZENvbXBvbmVudD48L25nLXRlbXBsYXRlPlxuICA8ZGl2ICpuZ0lmPVwic2hvd0Vycm9yXCIgY2xhc3M9XCJ1c2EtZXJyb3ItbWVzc2FnZVwiIFtzdHlsZS5kaXNwbGF5XT1cIidibG9jaydcIj5cbiAgICA8Zm9ybWx5LXZhbGlkYXRpb24tbWVzc2FnZSBbZmllbGRdPVwiZmllbGRcIj48L2Zvcm1seS12YWxpZGF0aW9uLW1lc3NhZ2U+XG4gIDwvZGl2PlxuPC9kaXY+XG4gIGAsXG59KVxuXG5leHBvcnQgY2xhc3MgRm9ybWx5V3JhcHBlckZvcm1GaWVsZENvbXBvbmVudCBleHRlbmRzIEZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50JywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pIGZpZWxkQ29tcG9uZW50ITogVmlld0NvbnRhaW5lclJlZjtcbn1cbiJdfQ==