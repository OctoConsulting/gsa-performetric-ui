import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { SdsDialogService } from '@gsa-sam/components';
import { SdsAdvancedFiltersService } from './sds-advanced-filters.service';
import { SdsFormlyDialogComponent } from '../../formly-dialog/formly-dialog.component';
export class AdvancedFiltersComponent {
    constructor(dialog, advancedFiltersService) {
        this.dialog = dialog;
        this.advancedFiltersService = advancedFiltersService;
        /**
         *    Options for the form.
         */
        this.options = {};
    }
    openDialog() {
        const modalFields = this.advancedFiltersService.convertToCheckboxes(this.fields);
        const data = {
            fields: modalFields,
            originalFields: this.fields,
            originalModel: this.model,
            submit: 'Update',
            title: 'More Filters',
        };
        const dialogRef = this.dialog.open(SdsFormlyDialogComponent, {
            width: 'medium',
            data: data
        });
        dialogRef.afterClosed().subscribe(result => {
            if (result) {
                this.fields = result.fields;
                this.model = result.model;
            }
        });
    }
}
AdvancedFiltersComponent.decorators = [
    { type: Component, args: [{
                selector: 'sds-advanced-filters',
                template: "<button type=\"button\" (click)=\"openDialog()\" class=\"usa-button usa-button--unstyled\">More\n  Filters\n  <fa-icon [icon]=\"['sds', 'filter']\" [classes]=\"['icon-filter']\"></fa-icon>\n</button>\n",
                styles: [".usa-button--unstyled{padding-left:0;width:initial;text-decoration:none;font-weight:600}.usa-button--unstyled:active,.usa-button--unstyled:hover{background:initial;color:initial;text-decoration:underline}"]
            }] }
];
/** @nocollapse */
AdvancedFiltersComponent.ctorParameters = () => [
    { type: SdsDialogService },
    { type: SdsAdvancedFiltersService }
];
AdvancedFiltersComponent.propDecorators = {
    form: [{ type: Input }],
    fields: [{ type: Input }],
    model: [{ type: Input }],
    options: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWR2YW5jZWQtZmlsdGVycy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NhLXNhbS9zYW0tZm9ybWx5LyIsInNvdXJjZXMiOlsibGliL2Zvcm1seS1maWx0ZXJzL2FkdmFuY2VkLWZpbHRlcnMvYWR2YW5jZWQtZmlsdGVycy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBQyxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR3ZELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRTNFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBUXZGLE1BQU0sT0FBTyx3QkFBd0I7SUFzQm5DLFlBQ1MsTUFBd0IsRUFDdkIsc0JBQWlEO1FBRGxELFdBQU0sR0FBTixNQUFNLENBQWtCO1FBQ3ZCLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBMkI7UUFQM0Q7O1dBRUc7UUFDYSxZQUFPLEdBQXNCLEVBQUUsQ0FBQztJQUsxQyxDQUFDO0lBRVAsVUFBVTtRQUNSLE1BQU0sV0FBVyxHQUF3QixJQUFJLENBQUMsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXRHLE1BQU0sSUFBSSxHQUF3QjtZQUNoQyxNQUFNLEVBQUUsV0FBVztZQUNuQixjQUFjLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDM0IsYUFBYSxFQUFFLElBQUksQ0FBQyxLQUFLO1lBQ3pCLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLEtBQUssRUFBRSxjQUFjO1NBQ3RCLENBQUM7UUFFRixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyx3QkFBd0IsRUFBRTtZQUMzRCxLQUFLLEVBQUUsUUFBUTtZQUNmLElBQUksRUFBRSxJQUFJO1NBQ1gsQ0FBQyxDQUFDO1FBRUgsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN6QyxJQUFJLE1BQU0sRUFBRTtnQkFDVixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQzthQUMzQjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBdkRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxxTkFBZ0Q7O2FBRWpEOzs7O1lBWFEsZ0JBQWdCO1lBR2hCLHlCQUF5Qjs7O21CQWUvQixLQUFLO3FCQUtMLEtBQUs7b0JBS0wsS0FBSztzQkFLTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBTZHNEaWFsb2dTZXJ2aWNlIH0gZnJvbSAnQGdzYS1zYW0vY29tcG9uZW50cyc7XG5pbXBvcnQgeyBGb3JtbHlGaWVsZENvbmZpZywgRm9ybWx5Rm9ybU9wdGlvbnMgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuaW1wb3J0IHsgU2RzQWR2YW5jZWRGaWx0ZXJzU2VydmljZSB9IGZyb20gJy4vc2RzLWFkdmFuY2VkLWZpbHRlcnMuc2VydmljZSc7XG5pbXBvcnQgeyBTZHNGb3JtbHlEaWFsb2dEYXRhIH0gZnJvbSAnLi4vLi4vZm9ybWx5LWRpYWxvZy9mb3JtbHktZGlhbG9nLWRhdGEubW9kZWwnO1xuaW1wb3J0IHsgU2RzRm9ybWx5RGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZm9ybWx5LWRpYWxvZy9mb3JtbHktZGlhbG9nLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Nkcy1hZHZhbmNlZC1maWx0ZXJzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FkdmFuY2VkLWZpbHRlcnMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9hZHZhbmNlZC1maWx0ZXJzLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5cbmV4cG9ydCBjbGFzcyBBZHZhbmNlZEZpbHRlcnNDb21wb25lbnQge1xuXG4gICAgLyoqXG4gICAqIFBhc3MgaW4gYSBGb3JtIEdyb3VwIGZvciBSZWFjdGl2ZUZvcm1zIFN1cHBvcnRcbiAgICovXG4gIEBJbnB1dCgpIHB1YmxpYyBmb3JtOiBGb3JtR3JvdXA7XG5cbiAgLyoqXG4gICAqICBGaWVsZHMgYXJlIHVzZWQgdG8gY29uZmlndXJlIHRoZSBVSSBjb21wb25lbnRzXG4gICAqL1xuICBASW5wdXQoKSBwdWJsaWMgZmllbGRzOiBGb3JtbHlGaWVsZENvbmZpZ1tdO1xuXG4gIC8qKlxuICAgKiAgTW9kZWwgdXNlZCB0byBkaXNwbGF5IHRoZSBmaWx0ZXIgdmFsdWVzLlxuICAgKi9cbiAgQElucHV0KCkgcHVibGljIG1vZGVsOiBhbnk7XG5cbiAgLyoqXG4gICAqICAgIE9wdGlvbnMgZm9yIHRoZSBmb3JtLlxuICAgKi9cbiAgQElucHV0KCkgcHVibGljIG9wdGlvbnM6IEZvcm1seUZvcm1PcHRpb25zID0ge307XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGRpYWxvZzogU2RzRGlhbG9nU2VydmljZSxcbiAgICBwcml2YXRlIGFkdmFuY2VkRmlsdGVyc1NlcnZpY2U6IFNkc0FkdmFuY2VkRmlsdGVyc1NlcnZpY2VcbiAgICApIHsgfVxuXG4gIG9wZW5EaWFsb2coKTogdm9pZCB7XG4gICAgY29uc3QgbW9kYWxGaWVsZHM6IEZvcm1seUZpZWxkQ29uZmlnW10gPSB0aGlzLmFkdmFuY2VkRmlsdGVyc1NlcnZpY2UuY29udmVydFRvQ2hlY2tib3hlcyh0aGlzLmZpZWxkcyk7XG5cbiAgICBjb25zdCBkYXRhOiBTZHNGb3JtbHlEaWFsb2dEYXRhID0ge1xuICAgICAgZmllbGRzOiBtb2RhbEZpZWxkcyxcbiAgICAgIG9yaWdpbmFsRmllbGRzOiB0aGlzLmZpZWxkcyxcbiAgICAgIG9yaWdpbmFsTW9kZWw6IHRoaXMubW9kZWwsXG4gICAgICBzdWJtaXQ6ICdVcGRhdGUnLFxuICAgICAgdGl0bGU6ICdNb3JlIEZpbHRlcnMnLFxuICAgIH07XG5cbiAgICBjb25zdCBkaWFsb2dSZWYgPSB0aGlzLmRpYWxvZy5vcGVuKFNkc0Zvcm1seURpYWxvZ0NvbXBvbmVudCwge1xuICAgICAgd2lkdGg6ICdtZWRpdW0nLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pO1xuXG4gICAgZGlhbG9nUmVmLmFmdGVyQ2xvc2VkKCkuc3Vic2NyaWJlKHJlc3VsdCA9PiB7XG4gICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgIHRoaXMuZmllbGRzID0gcmVzdWx0LmZpZWxkcztcbiAgICAgICAgdGhpcy5tb2RlbCA9IHJlc3VsdC5tb2RlbDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG59XG4iXX0=